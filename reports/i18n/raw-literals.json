[
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 153,
    "text": "X-Tenant-Id",
    "context": "const tenantId = req.get('X-Tenant-Id') || 'tenant-a';"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 190,
    "text": "billing integration flows",
    "context": "describe('billing integration flows', () => {"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 191,
    "text": "allows writes below quota and increments usage counters",
    "context": "test('allows writes below quota and increments usage counters', async () => {"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 204,
    "text": "rejects writes above quota while GET remains free",
    "context": "test('rejects writes above quota while GET remains free', async () => {"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 213,
    "text": "QUOTA_EXCEEDED",
    "context": "expect(limitedResponse.body).toMatchObject({ code: 'QUOTA_EXCEEDED' });"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 223,
    "text": "idempotent writes are only billed once",
    "context": "test('idempotent writes are only billed once', async () => {"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 226,
    "text": "Idempotency-Key",
    "context": "const headers = { 'Idempotency-Key': 'idem-123' };"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 239,
    "text": "analytics aggregates real usage data per tenant",
    "context": "test('analytics aggregates real usage data per tenant', async () => {"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 245,
    "text": "POST",
    "context": "await db.query(insertEventSql, ['tenant-a', '/write', 'POST', 200, 'req-1', { duration_ms: 45 }]);"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 246,
    "text": "POST",
    "context": "await db.query(insertEventSql, ['tenant-a', '/write', 'POST', 204, 'req-2', { duration_ms: 60 }]);"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 247,
    "text": "POST",
    "context": "await db.query(insertEventSql, ['tenant-a', '/write-error', 'POST', 500, 'req-3', { duration_ms: 120 }]);"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 248,
    "text": "POST",
    "context": "await db.query(insertEventSql, ['tenant-b', '/write', 'POST', 200, 'req-4', { duration_ms: 80 }]);"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 265,
    "text": "usage tracking is isolated per tenant",
    "context": "test('usage tracking is isolated per tenant', async () => {"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 268,
    "text": "X-Tenant-Id",
    "context": "await request(app).post('/write').set('X-Tenant-Id', 'tenant-a').send({});"
  },
  {
    "file": "__tests__/billing.integration.test.mjs",
    "line": 270,
    "text": "X-Tenant-Id",
    "context": "await request(app).post('/write').set('X-Tenant-Id', 'tenant-b').send({});"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 21,
    "text": "billing unit helpers",
    "context": "describe('billing unit helpers', () => {"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 22,
    "text": "isWrite respects HTTP method semantics",
    "context": "test('isWrite respects HTTP method semantics', () => {"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 23,
    "text": "POST",
    "context": "expect(isWrite({ method: 'POST' })).toBe(true);"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 25,
    "text": "GET",
    "context": "expect(isWrite({ method: 'GET' })).toBe(false);"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 26,
    "text": "OPTIONS",
    "context": "expect(isWrite({ method: 'OPTIONS' })).toBe(false);"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 27,
    "text": "HEAD",
    "context": "expect(isWrite({ method: 'HEAD' })).toBe(false);"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 30,
    "text": "isBillable ignores GET and non-billable operations",
    "context": "test('isBillable ignores GET and non-billable operations', () => {"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 31,
    "text": "GET",
    "context": "const getRequest = { method: 'GET', billing: {} };"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 35,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 42,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 49,
    "text": "operationWeight honors defaults, overrides, and minimums",
    "context": "test('operationWeight honors defaults, overrides, and minimums', () => {"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 50,
    "text": "POST",
    "context": "const verifyReq = { method: 'POST', route: { path: '/verify' }, billing: {} };"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 53,
    "text": "POST",
    "context": "const stampReq = { method: 'POST', route: { path: '/stamp' }, billing: {} };"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 57,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 70,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 83,
    "text": "incrementUsageAtomic increments counters via Postgres fallback",
    "context": "test('incrementUsageAtomic increments counters via Postgres fallback', async () => {"
  },
  {
    "file": "__tests__/billing.unit.test.mjs",
    "line": 97,
    "text": "incrementUsageAtomic enforces limits before incrementing",
    "context": "test('incrementUsageAtomic enforces limits before incrementing', async () => {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 77,
    "text": "BEGIN",
    "context": "if (normalized.startsWith('BEGIN') || normalized.startsWith('COMMIT') || normalized.startsWith('ROLLBACK')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 77,
    "text": "COMMIT",
    "context": "if (normalized.startsWith('BEGIN') || normalized.startsWith('COMMIT') || normalized.startsWith('ROLLBACK')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 77,
    "text": "ROLLBACK",
    "context": "if (normalized.startsWith('BEGIN') || normalized.startsWith('COMMIT') || normalized.startsWith('ROLLBACK')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 81,
    "text": "SELECT plan_id, monthly_api_calls_total, endpoint_overrides FROM plan_entitlements",
    "context": "if (normalized.startsWith('SELECT plan_id, monthly_api_calls_total, endpoint_overrides FROM plan_entitlements')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 87,
    "text": "SELECT id, name, plan_id, plan, quota_override FROM tenants",
    "context": "if (normalized.startsWith('SELECT id, name, plan_id, plan, quota_override FROM tenants')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 93,
    "text": "INSERT INTO idempotency_keys",
    "context": "if (normalized.startsWith('INSERT INTO idempotency_keys')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 109,
    "text": "SELECT request_hash, status_code FROM idempotency_keys",
    "context": "if (normalized.startsWith('SELECT request_hash, status_code FROM idempotency_keys')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 118,
    "text": "UPDATE idempotency_keys SET last_accessed_at",
    "context": "if (normalized.startsWith('UPDATE idempotency_keys SET last_accessed_at')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 127,
    "text": "UPDATE idempotency_keys SET status_code",
    "context": "if (normalized.startsWith('UPDATE idempotency_keys SET status_code')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 137,
    "text": "SELECT call_count FROM usage_counters WHERE tenant_id",
    "context": "if (normalized.startsWith('SELECT call_count FROM usage_counters WHERE tenant_id')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 144,
    "text": "INSERT INTO usage_counters",
    "context": "if (normalized.startsWith('INSERT INTO usage_counters')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 153,
    "text": "INSERT INTO api_events",
    "context": "if (normalized.startsWith('INSERT INTO api_events')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 167,
    "text": "SELECT date_trunc($4::text, occurred_at) AS bucket",
    "context": "if (normalized.startsWith('SELECT date_trunc($4::text, occurred_at) AS bucket')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 200,
    "text": "WITH durations AS",
    "context": "if (normalized.includes('WITH durations AS')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 228,
    "text": "SELECT endpoint, COUNT(*)::bigint AS count FROM api_events",
    "context": "if (normalized.startsWith('SELECT endpoint, COUNT(*)::bigint AS count FROM api_events')) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 247,
    "text": "MockDb received unsupported query: ${normalized}",
    "context": "throw new Error(`MockDb received unsupported query: ${normalized}`);"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 266,
    "text": "eval not supported in MockRedis",
    "context": "throw new Error('eval not supported in MockRedis');"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 292,
    "text": "NX",
    "context": "if (modifier === 'NX' && this.store.has(key)) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 296,
    "text": "EX",
    "context": "if (mode === 'EX' && Number.isFinite(ttl)) {"
  },
  {
    "file": "__tests__/helpers/mock-db.mjs",
    "line": 299,
    "text": "OK",
    "context": "return 'OK';"
  },
  {
    "file": "app.js",
    "line": 1,
    "text": "DOMContentLoaded",
    "context": "document.addEventListener('DOMContentLoaded', () => {"
  },
  {
    "file": "app.js",
    "line": 9,
    "text": "Dil dosyası yüklenemedi: ${lang}",
    "context": "if (!response.ok) throw new Error(`Dil dosyası yüklenemedi: ${lang}`);"
  },
  {
    "file": "app.js",
    "line": 114,
    "text": "QUOTA_EXCEEDED",
    "context": "if (!payload || payload.code !== 'QUOTA_EXCEEDED') {"
  },
  {
    "file": "app.js",
    "line": 127,
    "text": "X-Quota-Remaining",
    "context": "const remainingHeader = response.headers?.get?.('X-Quota-Remaining');"
  },
  {
    "file": "app.js",
    "line": 250,
    "text": "Failed to fetch branding:",
    "context": "console.error('Failed to fetch branding:', error);"
  },
  {
    "file": "app.js",
    "line": 281,
    "text": "#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}",
    "context": "return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;"
  },
  {
    "file": "app.js",
    "line": 329,
    "text": "feedback ${type}",
    "context": "feedbackContainer.className = `feedback ${type}`;"
  },
  {
    "file": "app.js",
    "line": 340,
    "text": "key-row key-row--empty",
    "context": "listItem.className = 'key-row key-row--empty';"
  },
  {
    "file": "app.js",
    "line": 400,
    "text": "Failed to copy API key:",
    "context": "console.error('Failed to copy API key:', error);"
  },
  {
    "file": "app.js",
    "line": 408,
    "text": "${key.substring(0, 12)}...${key.substring(key.length - 4)}",
    "context": "return `${key.substring(0, 12)}...${key.substring(key.length - 4)}`;"
  },
  {
    "file": "app.js",
    "line": 492,
    "text": "<p>${i18n.t('usage_requests_text', { used: data.quota.used, limit: data.quota.limit })}</p>",
    "context": "usageHtml = `<p>${i18n.t('usage_requests_text', { used: data.quota.used, limit: data.quota.limit })}</p>`;"
  },
  {
    "file": "app.js",
    "line": 495,
    "text": "<p>${i18n.t('usage_remaining_credits', { remaining: data.credits.remaining })}</p>",
    "context": "usageHtml = `<p>${i18n.t('usage_remaining_credits', { remaining: data.credits.remaining })}</p>`;"
  },
  {
    "file": "app.js",
    "line": 557,
    "text": "${averageTime.toLocaleString(i18n.currentLang)} ms",
    "context": "avgTimeStat.textContent = `${averageTime.toLocaleString(i18n.currentLang)} ms`;"
  },
  {
    "file": "app.js",
    "line": 589,
    "text": "status-cell ${activity.status}",
    "context": "statusCell.className = `status-cell ${activity.status}`;"
  },
  {
    "file": "app.js",
    "line": 647,
    "text": "T",
    "context": "link.setAttribute(\"download\", `videokit_analytics_${new Date().toISOString().split('T')[0]}.csv`);"
  },
  {
    "file": "app.js",
    "line": 647,
    "text": "videokit_analytics_${new Date().toISOString().split('T')[0]}.csv",
    "context": "link.setAttribute(\"download\", `videokit_analytics_${new Date().toISOString().split('T')[0]}.csv`);"
  },
  {
    "file": "app.js",
    "line": 657,
    "text": "T",
    "context": "endDateInput.value = today.toISOString().split('T')[0];"
  },
  {
    "file": "app.js",
    "line": 658,
    "text": "T",
    "context": "startDateInput.value = thirtyDaysAgo.toISOString().split('T')[0];"
  },
  {
    "file": "app.js",
    "line": 689,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "app.js",
    "line": 690,
    "text": "Content-Type",
    "context": "headers: { 'Content-Type': 'application/json' },"
  },
  {
    "file": "app.js",
    "line": 720,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "app.js",
    "line": 721,
    "text": "Content-Type",
    "context": "headers: { 'Content-Type': 'application/json' },"
  },
  {
    "file": "app.js",
    "line": 742,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "app.js",
    "line": 743,
    "text": "Content-Type",
    "context": "headers: { 'Content-Type': 'application/json' },"
  },
  {
    "file": "app.js",
    "line": 773,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "app.js",
    "line": 774,
    "text": "Content-Type",
    "context": "headers: { 'Content-Type': 'application/json' },"
  },
  {
    "file": "app.js",
    "line": 793,
    "text": "POST",
    "context": "await fetch(authEndpoint('/logout'), { method: 'POST', credentials: 'include' });"
  },
  {
    "file": "app.js",
    "line": 795,
    "text": "Logout request failed:",
    "context": "console.error('Logout request failed:', e);"
  },
  {
    "file": "app.js",
    "line": 821,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "app.js",
    "line": 874,
    "text": "DELETE",
    "context": "method: 'DELETE',"
  },
  {
    "file": "auth.js",
    "line": 13,
    "text": "createAuthMiddleware requires a database pool",
    "context": "throw new Error('createAuthMiddleware requires a database pool');"
  },
  {
    "file": "auth.js",
    "line": 17,
    "text": "JWT secret is not configured.",
    "context": "throw new Error('JWT secret is not configured.');"
  },
  {
    "file": "auth.js",
    "line": 35,
    "text": "SELECT id, email, role, tenant_id, created_at, updated_at FROM users WHERE id = $1",
    "context": "'SELECT id, email, role, tenant_id, created_at, updated_at FROM users WHERE id = $1',"
  },
  {
    "file": "auth.js",
    "line": 48,
    "text": "SELECT id, name, plan FROM tenants WHERE id = $1",
    "context": "'SELECT id, name, plan FROM tenants WHERE id = $1',"
  },
  {
    "file": "auth.js",
    "line": 83,
    "text": "Authorization",
    "context": "const authHeader = req.get('Authorization');"
  },
  {
    "file": "auth.js",
    "line": 84,
    "text": "Bearer",
    "context": "if (authHeader?.startsWith('Bearer ')) {"
  },
  {
    "file": "auth.js",
    "line": 97,
    "text": "ye artık ihtiyacımız yok, bilgiyi direkt user",
    "context": "// payload.tenantId'ye artık ihtiyacımız yok, bilgiyi direkt user'dan alıyoruz."
  },
  {
    "file": "auth.js",
    "line": 101,
    "text": "AUTHENTICATION_REQUIRED",
    "context": "return sendError(res, req, 401, 'AUTHENTICATION_REQUIRED', 'Authentication required.');"
  },
  {
    "file": "auth.js",
    "line": 101,
    "text": "Authentication required.",
    "context": "return sendError(res, req, 401, 'AUTHENTICATION_REQUIRED', 'Authentication required.');"
  },
  {
    "file": "auth.js",
    "line": 109,
    "text": "[auth] Invalid session token.",
    "context": "req.log?.warn?.({ err: error }, '[auth] Invalid session token.');"
  },
  {
    "file": "auth.js",
    "line": 111,
    "text": "AUTHENTICATION_REQUIRED",
    "context": "return sendError(res, req, 401, 'AUTHENTICATION_REQUIRED', 'Authentication required.');"
  },
  {
    "file": "auth.js",
    "line": 111,
    "text": "Authentication required.",
    "context": "return sendError(res, req, 401, 'AUTHENTICATION_REQUIRED', 'Authentication required.');"
  },
  {
    "file": "auth.js",
    "line": 115,
    "text": "X-API-Key",
    "context": "const apiKey = req.get('X-API-Key');"
  },
  {
    "file": "auth.js",
    "line": 121,
    "text": "AUTHENTICATION_REQUIRED",
    "context": "return sendError(res, req, 401, 'AUTHENTICATION_REQUIRED', 'Authentication required.');"
  },
  {
    "file": "auth.js",
    "line": 121,
    "text": "Authentication required.",
    "context": "return sendError(res, req, 401, 'AUTHENTICATION_REQUIRED', 'Authentication required.');"
  },
  {
    "file": "auth.js",
    "line": 128,
    "text": "AUTHENTICATION_REQUIRED",
    "context": "return sendError(res, req, 401, 'AUTHENTICATION_REQUIRED', 'Authentication required.');"
  },
  {
    "file": "auth.js",
    "line": 128,
    "text": "Authentication required.",
    "context": "return sendError(res, req, 401, 'AUTHENTICATION_REQUIRED', 'Authentication required.');"
  },
  {
    "file": "auth.js",
    "line": 142,
    "text": "FORBIDDEN_ROLE",
    "context": "return sendError(res, req, 403, 'FORBIDDEN_ROLE', 'Forbidden: insufficient role.');"
  },
  {
    "file": "auth.js",
    "line": 142,
    "text": "Forbidden: insufficient role.",
    "context": "return sendError(res, req, 403, 'FORBIDDEN_ROLE', 'Forbidden: insufficient role.');"
  },
  {
    "file": "batch.html",
    "line": 6,
    "text": "Toplu Doğrulama - VideoKit Portalı",
    "context": "<title data-i18n=\"batch_page_title\">Toplu Doğrulama - VideoKit Portalı</title>"
  },
  {
    "file": "batch.html",
    "line": 17,
    "text": "Kurum Logosu",
    "context": "alt attribute"
  },
  {
    "file": "batch.html",
    "line": 18,
    "text": "VideoKit Müşteri Portalı",
    "context": "<h1 data-i18n=\"portal_title\">VideoKit Müşteri Portalı</h1>"
  },
  {
    "file": "batch.html",
    "line": 23,
    "text": "Panel",
    "context": "<a href=\"index.html\" data-i18n=\"nav_dashboard\">Panel</a>"
  },
  {
    "file": "batch.html",
    "line": 24,
    "text": "Toplu İşlem",
    "context": "<a href=\"batch.html\" data-i18n=\"nav_batch_processing\">Toplu İşlem</a>"
  },
  {
    "file": "batch.html",
    "line": 28,
    "text": "Dil seçimi",
    "context": "<label for=\"lang-switcher\" class=\"sr-only\" data-i18n=\"language_switcher_label\">Dil seçimi</label>"
  },
  {
    "file": "batch.html",
    "line": 30,
    "text": "Türkçe",
    "context": "<option value=\"tr\" data-i18n=\"language_option_tr\">Türkçe</option>"
  },
  {
    "file": "batch.html",
    "line": 30,
    "text": "tr",
    "context": "value attribute"
  },
  {
    "file": "batch.html",
    "line": 31,
    "text": "English",
    "context": "<option value=\"en\" data-i18n=\"language_option_en\">English</option>"
  },
  {
    "file": "batch.html",
    "line": 31,
    "text": "en",
    "context": "value attribute"
  },
  {
    "file": "batch.html",
    "line": 32,
    "text": "Deutsch",
    "context": "<option value=\"de\" data-i18n=\"language_option_de\">Deutsch</option>"
  },
  {
    "file": "batch.html",
    "line": 32,
    "text": "de",
    "context": "value attribute"
  },
  {
    "file": "batch.html",
    "line": 33,
    "text": "Español",
    "context": "<option value=\"es\" data-i18n=\"language_option_es\">Español</option>"
  },
  {
    "file": "batch.html",
    "line": 33,
    "text": "es",
    "context": "value attribute"
  },
  {
    "file": "batch.html",
    "line": 34,
    "text": "Pseudo-Locale (QA)",
    "context": "<option value=\"en-XA\" data-i18n=\"language_option_en_xa\">Pseudo-Locale (QA)</option>"
  },
  {
    "file": "batch.html",
    "line": 34,
    "text": "en-XA",
    "context": "value attribute"
  },
  {
    "file": "batch.html",
    "line": 49,
    "text": "Lütfen ana panelden giriş yapın...",
    "context": "<span id=\"tenant-info-display\" data-i18n=\"batch_login_prompt\">Lütfen ana panelden giriş yapın...</span>"
  },
  {
    "file": "batch.html",
    "line": 53,
    "text": "Toplu C2PA Doğrulama",
    "context": "<h2 data-i18n=\"batch_title\">Toplu C2PA Doğrulama</h2>"
  },
  {
    "file": "batch.html",
    "line": 64,
    "text": "İşlem Kuyruğu",
    "context": "<h3 data-i18n=\"batch_queue_title\">İşlem Kuyruğu</h3>"
  },
  {
    "file": "batch.html",
    "line": 78,
    "text": "Dosya Adı",
    "context": "<th data-i18n=\"file_name\">Dosya Adı</th>"
  },
  {
    "file": "batch.html",
    "line": 79,
    "text": "Durum",
    "context": "<th data-i18n=\"status\">Durum</th>"
  },
  {
    "file": "batch.html",
    "line": 80,
    "text": "Sonuç",
    "context": "<th data-i18n=\"result\">Sonuç</th>"
  },
  {
    "file": "batch.js",
    "line": 1,
    "text": "DOMContentLoaded",
    "context": "document.addEventListener('DOMContentLoaded', () => {"
  },
  {
    "file": "batch.js",
    "line": 44,
    "text": "feedback ${type}",
    "context": "feedbackContainer.className = `feedback ${type}`;"
  },
  {
    "file": "batch.js",
    "line": 57,
    "text": "WebSocket bağlantısı kuruldu.",
    "context": "state.ws.onopen = () => console.log('WebSocket bağlantısı kuruldu.');"
  },
  {
    "file": "batch.js",
    "line": 58,
    "text": "WebSocket bağlantısı kesildi.",
    "context": "state.ws.onclose = () => console.log('WebSocket bağlantısı kesildi.');"
  },
  {
    "file": "batch.js",
    "line": 59,
    "text": "WebSocket hatası:",
    "context": "state.ws.onerror = (error) => console.error('WebSocket hatası:', error);"
  },
  {
    "file": "batch.js",
    "line": 88,
    "text": "Tamamlandı",
    "context": "updateFileStatus(fileEntry.rowElement, 'completed', 'Tamamlandı');"
  },
  {
    "file": "batch.js",
    "line": 92,
    "text": "Hata",
    "context": "updateFileStatus(fileEntry.rowElement, 'failed', 'Hata');"
  },
  {
    "file": "batch.js",
    "line": 103,
    "text": "status-badge status-${statusClass}",
    "context": "statusCell.innerHTML = `<span class=\"status-badge status-${statusClass}\">${statusText}</span>`;"
  },
  {
    "file": "batch.js",
    "line": 103,
    "text": "<span class=\"status-badge status-${statusClass}\">${statusText}</span>",
    "context": "statusCell.innerHTML = `<span class=\"status-badge status-${statusClass}\">${statusText}</span>`;"
  },
  {
    "file": "batch.js",
    "line": 110,
    "text": "Bilinmeyen durum",
    "context": "resultCell.innerHTML = `<span class=\"verdict-${verdict}\">${result.message || 'Bilinmeyen durum'}</span>`;"
  },
  {
    "file": "batch.js",
    "line": 110,
    "text": "<span class=\"verdict-${verdict}\">${result.message || 'Bilinmeyen durum'}</span>",
    "context": "resultCell.innerHTML = `<span class=\"verdict-${verdict}\">${result.message || 'Bilinmeyen durum'}</span>`;"
  },
  {
    "file": "batch.js",
    "line": 115,
    "text": "Tamamlanan: ${state.completedCount} | Hatalı: ${state.failedCount}",
    "context": "processSummaryEl.textContent = `Tamamlanan: ${state.completedCount} | Hatalı: ${state.failedCount}`;"
  },
  {
    "file": "batch.js",
    "line": 124,
    "text": "Yüklenen: ${uploadedCount} / ${state.files.size}",
    "context": "uploadProgressEl.textContent = `Yüklenen: ${uploadedCount} / ${state.files.size}`;"
  },
  {
    "file": "batch.js",
    "line": 130,
    "text": "Devam etmek için lütfen giriş yapın.",
    "context": "showFeedback('Devam etmek için lütfen giriş yapın.', 'error');"
  },
  {
    "file": "batch.js",
    "line": 140,
    "text": "status-badge status-waiting",
    "context": "row.insertCell(1).innerHTML = `<span class=\"status-badge status-waiting\">Bekliyor</span>`;"
  },
  {
    "file": "batch.js",
    "line": 140,
    "text": "<span class=\"status-badge status-waiting\">Bekliyor</span>",
    "context": "row.insertCell(1).innerHTML = `<span class=\"status-badge status-waiting\">Bekliyor</span>`;"
  },
  {
    "file": "batch.js",
    "line": 161,
    "text": "Yükleniyor",
    "context": "updateFileStatus(fileEntry.rowElement, 'uploading', 'Yükleniyor');"
  },
  {
    "file": "batch.js",
    "line": 168,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "batch.js",
    "line": 173,
    "text": "Sunucu hatası: ${response.statusText}",
    "context": "if (!response.ok) throw new Error(`Sunucu hatası: ${response.statusText}`);"
  },
  {
    "file": "batch.js",
    "line": 177,
    "text": "yi state",
    "context": "state.files.set(fileId, fileEntry); // jobId'yi state'e kaydet"
  },
  {
    "file": "batch.js",
    "line": 178,
    "text": "İşleniyor",
    "context": "updateFileStatus(fileEntry.rowElement, 'processing', 'İşleniyor');"
  },
  {
    "file": "batch.js",
    "line": 180,
    "text": "Yükleme hatası:",
    "context": "console.error('Yükleme hatası:', error);"
  },
  {
    "file": "batch.js",
    "line": 181,
    "text": "Yükleme Hatası",
    "context": "updateFileStatus(fileEntry.rowElement, 'failed', 'Yükleme Hatası');"
  },
  {
    "file": "batch.js",
    "line": 200,
    "text": "Oturum bulunamadı.",
    "context": "throw new Error('Oturum bulunamadı.');"
  },
  {
    "file": "batch.js",
    "line": 205,
    "text": "Kiracı bilgisi alınamadı.",
    "context": "throw new Error('Kiracı bilgisi alınamadı.');"
  },
  {
    "file": "batch.js",
    "line": 210,
    "text": "Kiracı: ${tenant.name || tenant.id}",
    "context": "tenantInfoDisplay.textContent = `Kiracı: ${tenant.name || tenant.id}`;"
  },
  {
    "file": "batch.js",
    "line": 223,
    "text": "Lütfen ana panelden giriş yapın...",
    "context": "tenantInfoDisplay.textContent = 'Lütfen ana panelden giriş yapın...';"
  },
  {
    "file": "batch.js",
    "line": 225,
    "text": "Devam etmek için lütfen giriş yapın.",
    "context": "showFeedback('Devam etmek için lütfen giriş yapın.', 'error');"
  },
  {
    "file": "batch.js",
    "line": 235,
    "text": "POST",
    "context": "await fetch('/auth/logout', { method: 'POST', credentials: 'include' });"
  },
  {
    "file": "batch.js",
    "line": 237,
    "text": "Logout isteği başarısız oldu:",
    "context": "console.warn('Logout isteği başarısız oldu:', error);"
  },
  {
    "file": "batch.js",
    "line": 271,
    "text": "İndirme sırasında hata oluştu (${response.status}).",
    "context": "throw new Error(`İndirme sırasında hata oluştu (${response.status}).`);"
  },
  {
    "file": "batch.js",
    "line": 283,
    "text": "Rapor indirildi.",
    "context": "showFeedback('Rapor indirildi.', 'success');"
  },
  {
    "file": "billing.js",
    "line": 19,
    "text": "X-RateLimit-Limit",
    "context": "res.set('X-RateLimit-Limit', plan.rateLimitPerMinute);"
  },
  {
    "file": "billing.js",
    "line": 20,
    "text": "X-RateLimit-Remaining",
    "context": "res.set('X-RateLimit-Remaining', Math.max(0, plan.rateLimitPerMinute - current));"
  },
  {
    "file": "billing.js",
    "line": 23,
    "text": "RATE_LIMIT_EXCEEDED",
    "context": "return sendError(res, req, 429, 'RATE_LIMIT_EXCEEDED', 'Too Many Requests: Rate limit exceeded.');"
  },
  {
    "file": "billing.js",
    "line": 23,
    "text": "Too Many Requests: Rate limit exceeded.",
    "context": "return sendError(res, req, 429, 'RATE_LIMIT_EXCEEDED', 'Too Many Requests: Rate limit exceeded.');"
  },
  {
    "file": "billing.js",
    "line": 35,
    "text": "[billing] API key provided via query string rejected.",
    "context": "req.log?.warn?.({ url: req.originalUrl }, '[billing] API key provided via query string rejected.');"
  },
  {
    "file": "billing.js",
    "line": 36,
    "text": "API_KEY_HEADER_REQUIRED",
    "context": "return sendError(res, req, 400, 'API_KEY_HEADER_REQUIRED', 'API keys must be sent using the X-API-Key header.');"
  },
  {
    "file": "billing.js",
    "line": 36,
    "text": "API keys must be sent using the X-API-Key header.",
    "context": "return sendError(res, req, 400, 'API_KEY_HEADER_REQUIRED', 'API keys must be sent using the X-API-Key header.');"
  },
  {
    "file": "billing.js",
    "line": 44,
    "text": "SELECT id, name, plan FROM tenants WHERE id = $1",
    "context": "'SELECT id, name, plan FROM tenants WHERE id = $1',"
  },
  {
    "file": "billing.js",
    "line": 48,
    "text": "SESSION_TENANT_NOT_FOUND",
    "context": "return sendError(res, req, 404, 'SESSION_TENANT_NOT_FOUND', 'Oturuma bağlı kiracı bulunamadı.');"
  },
  {
    "file": "billing.js",
    "line": 48,
    "text": "Oturuma bağlı kiracı bulunamadı.",
    "context": "return sendError(res, req, 404, 'SESSION_TENANT_NOT_FOUND', 'Oturuma bağlı kiracı bulunamadı.');"
  },
  {
    "file": "billing.js",
    "line": 53,
    "text": "X-API-Key",
    "context": "const apiKey = req.get('X-API-Key');"
  },
  {
    "file": "billing.js",
    "line": 55,
    "text": "API_KEY_MISSING",
    "context": "return sendError(res, req, 401, 'API_KEY_MISSING', 'Unauthorized: API key is missing.');"
  },
  {
    "file": "billing.js",
    "line": 55,
    "text": "Unauthorized: API key is missing.",
    "context": "return sendError(res, req, 401, 'API_KEY_MISSING', 'Unauthorized: API key is missing.');"
  },
  {
    "file": "billing.js",
    "line": 60,
    "text": "API_KEY_INVALID",
    "context": "return sendError(res, req, 401, 'API_KEY_INVALID', 'Unauthorized: Invalid API key.');"
  },
  {
    "file": "billing.js",
    "line": 60,
    "text": "Unauthorized: Invalid API key.",
    "context": "return sendError(res, req, 401, 'API_KEY_INVALID', 'Unauthorized: Invalid API key.');"
  },
  {
    "file": "billing.js",
    "line": 65,
    "text": "SELECT id, name, plan FROM tenants WHERE id = $1",
    "context": "const tenantResult = await dbPool.query('SELECT id, name, plan FROM tenants WHERE id = $1', [tenantId]);"
  },
  {
    "file": "billing.js",
    "line": 67,
    "text": "API_KEY_TENANT_NOT_FOUND",
    "context": "return sendError(res, req, 404, 'API_KEY_TENANT_NOT_FOUND', 'API anahtarına bağlı kiracı bulunamadı.');"
  },
  {
    "file": "billing.js",
    "line": 67,
    "text": "API anahtarına bağlı kiracı bulunamadı.",
    "context": "return sendError(res, req, 404, 'API_KEY_TENANT_NOT_FOUND', 'API anahtarına bağlı kiracı bulunamadı.');"
  },
  {
    "file": "billing.js",
    "line": 87,
    "text": "X-API-Key",
    "context": "apiKey: tenantContext.apiKey ?? req.tenant?.apiKey ?? req.get('X-API-Key') ?? undefined,"
  },
  {
    "file": "billing.js",
    "line": 92,
    "text": "TENANT_PLAN_INVALID",
    "context": "return sendError(res, req, 500, 'TENANT_PLAN_INVALID', 'Server configuration error: Tenant plan is invalid.');"
  },
  {
    "file": "billing.js",
    "line": 92,
    "text": "Server configuration error: Tenant plan is invalid.",
    "context": "return sendError(res, req, 500, 'TENANT_PLAN_INVALID', 'Server configuration error: Tenant plan is invalid.');"
  },
  {
    "file": "billing.js",
    "line": 103,
    "text": "X-Credits-Remaining",
    "context": "res.set('X-Credits-Remaining', '0');"
  },
  {
    "file": "billing.js",
    "line": 104,
    "text": "GET",
    "context": "if (req.method !== 'GET') {"
  },
  {
    "file": "billing.js",
    "line": 105,
    "text": "CREDITS_EXHAUSTED",
    "context": "return sendError(res, req, 402, 'CREDITS_EXHAUSTED', 'Payment Required: You have run out of credits.');"
  },
  {
    "file": "billing.js",
    "line": 105,
    "text": "Payment Required: You have run out of credits.",
    "context": "return sendError(res, req, 402, 'CREDITS_EXHAUSTED', 'Payment Required: You have run out of credits.');"
  },
  {
    "file": "billing.js",
    "line": 107,
    "text": "GET",
    "context": "} else if (req.method !== 'GET') {"
  },
  {
    "file": "billing.js",
    "line": 109,
    "text": "X-Credits-Remaining",
    "context": "res.set('X-Credits-Remaining', `${remainingCredits}`);"
  },
  {
    "file": "billing.js",
    "line": 111,
    "text": "X-Credits-Remaining",
    "context": "res.set('X-Credits-Remaining', `${credits}`);"
  },
  {
    "file": "billing.js",
    "line": 117,
    "text": "usage:${req.tenant.id}:${date.getUTCFullYear()}-${String(date.getUTCMonth() + 1).padStart(2, '0')}",
    "context": "const monthKey = `usage:${req.tenant.id}:${date.getUTCFullYear()}-${String(date.getUTCMonth() + 1).padStart(2, '0')}`;"
  },
  {
    "file": "billing.js",
    "line": 122,
    "text": "X-Quota-Limit",
    "context": "res.set('X-Quota-Limit', plan.monthlyQuota);"
  },
  {
    "file": "billing.js",
    "line": 123,
    "text": "X-Quota-Remaining",
    "context": "res.set('X-Quota-Remaining', 0);"
  },
  {
    "file": "billing.js",
    "line": 124,
    "text": "GET",
    "context": "if (req.method !== 'GET') {"
  },
  {
    "file": "billing.js",
    "line": 125,
    "text": "MONTHLY_QUOTA_EXCEEDED",
    "context": "return sendError(res, req, 429, 'MONTHLY_QUOTA_EXCEEDED', 'Too Many Requests: Monthly quota exceeded.');"
  },
  {
    "file": "billing.js",
    "line": 125,
    "text": "Too Many Requests: Monthly quota exceeded.",
    "context": "return sendError(res, req, 429, 'MONTHLY_QUOTA_EXCEEDED', 'Too Many Requests: Monthly quota exceeded.');"
  },
  {
    "file": "billing.js",
    "line": 128,
    "text": "GET",
    "context": "if (req.method !== 'GET') {"
  },
  {
    "file": "billing.js",
    "line": 137,
    "text": "X-Quota-Limit",
    "context": "res.set('X-Quota-Limit', plan.monthlyQuota);"
  },
  {
    "file": "billing.js",
    "line": 138,
    "text": "X-Quota-Remaining",
    "context": "res.set('X-Quota-Remaining', Math.max(0, plan.monthlyQuota - usage));"
  },
  {
    "file": "billing.js",
    "line": 144,
    "text": "[billing] Middleware failure",
    "context": "req.log?.error?.({ err: error }, '[billing] Middleware failure');"
  },
  {
    "file": "billing.js",
    "line": 145,
    "text": "BILLING_MIDDLEWARE_FAILURE",
    "context": "return sendError(res, req, 500, 'BILLING_MIDDLEWARE_FAILURE', t('error_generic_server', req.lang) || 'Internal Server Error');"
  },
  {
    "file": "billing.js",
    "line": 145,
    "text": "Internal Server Error",
    "context": "return sendError(res, req, 500, 'BILLING_MIDDLEWARE_FAILURE', t('error_generic_server', req.lang) || 'Internal Server Error');"
  },
  {
    "file": "config.js",
    "line": 34,
    "text": "DATABASE_URL ortam değişkeni zorunludur.",
    "context": ".string({ required_error: 'DATABASE_URL ortam değişkeni zorunludur.' })"
  },
  {
    "file": "config.js",
    "line": 35,
    "text": "DATABASE_URL ortam değişkeni boş olamaz.",
    "context": ".min(1, 'DATABASE_URL ortam değişkeni boş olamaz.'),"
  },
  {
    "file": "config.js",
    "line": 37,
    "text": "REDIS_URL ortam değişkeni zorunludur.",
    "context": ".string({ required_error: 'REDIS_URL ortam değişkeni zorunludur.' })"
  },
  {
    "file": "config.js",
    "line": 38,
    "text": "REDIS_URL ortam değişkeni boş olamaz.",
    "context": ".min(1, 'REDIS_URL ortam değişkeni boş olamaz.'),"
  },
  {
    "file": "config.js",
    "line": 40,
    "text": "DEFAULT_PLAN_LIMIT sayısal bir değer olmalıdır.",
    "context": ".number({ invalid_type_error: 'DEFAULT_PLAN_LIMIT sayısal bir değer olmalıdır.' })"
  },
  {
    "file": "config.js",
    "line": 41,
    "text": "DEFAULT_PLAN_LIMIT tam sayı olmalıdır.",
    "context": ".int('DEFAULT_PLAN_LIMIT tam sayı olmalıdır.')"
  },
  {
    "file": "config.js",
    "line": 42,
    "text": "DEFAULT_PLAN_LIMIT negatif olamaz.",
    "context": ".nonnegative('DEFAULT_PLAN_LIMIT negatif olamaz.'),"
  },
  {
    "file": "config.js",
    "line": 46,
    "text": "STORAGE_TTL_DAYS sayısal bir değer olmalıdır.",
    "context": ".number({ invalid_type_error: 'STORAGE_TTL_DAYS sayısal bir değer olmalıdır.' })"
  },
  {
    "file": "config.js",
    "line": 47,
    "text": "STORAGE_TTL_DAYS tam sayı olmalıdır.",
    "context": ".int('STORAGE_TTL_DAYS tam sayı olmalıdır.')"
  },
  {
    "file": "config.js",
    "line": 48,
    "text": "STORAGE_TTL_DAYS 0\\'dan büyük olmalıdır.",
    "context": ".positive('STORAGE_TTL_DAYS 0\\'dan büyük olmalıdır.')"
  },
  {
    "file": "config.js",
    "line": 52,
    "text": "VAULT_ADDR geçerli bir URL olmalıdır.",
    "context": ".url('VAULT_ADDR geçerli bir URL olmalıdır.')"
  },
  {
    "file": "config.js",
    "line": 60,
    "text": "EMAIL_PORT sayısal bir değer olmalıdır.",
    "context": ".number({ invalid_type_error: 'EMAIL_PORT sayısal bir değer olmalıdır.' })"
  },
  {
    "file": "config.js",
    "line": 61,
    "text": "EMAIL_PORT tam sayı olmalıdır.",
    "context": ".int('EMAIL_PORT tam sayı olmalıdır.')"
  },
  {
    "file": "config.js",
    "line": 62,
    "text": "EMAIL_PORT 0\\'dan büyük olmalıdır.",
    "context": ".positive('EMAIL_PORT 0\\'dan büyük olmalıdır.')"
  },
  {
    "file": "config.js",
    "line": 74,
    "text": "${issue.path.join('.') || 'environment'}: ${issue.message}",
    "context": ".map((issue) => `${issue.path.join('.') || 'environment'}: ${issue.message}`)"
  },
  {
    "file": "config.js",
    "line": 77,
    "text": "[Config] HATA: Ortam değişkenleri doğrulanamadı. Uygulama sonlandırılıyor.",
    "context": "console.error('[Config] HATA: Ortam değişkenleri doğrulanamadı. Uygulama sonlandırılıyor.');"
  },
  {
    "file": "config.js",
    "line": 78,
    "text": "[Config] Ayrıntılar: ${formattedErrors}",
    "context": "console.error(`[Config] Ayrıntılar: ${formattedErrors}`);"
  },
  {
    "file": "config.js",
    "line": 122,
    "text": "[Config] UYARI: VAULT_TOKEN ayarlanmamış. Sırlar ortam değişkenlerinden alınacak.",
    "context": "console.warn('[Config] UYARI: VAULT_TOKEN ayarlanmamış. Sırlar ortam değişkenlerinden alınacak.');"
  },
  {
    "file": "config.js",
    "line": 127,
    "text": "SUPER_SECRET_MANAGEMENT_KEY",
    "context": "managementKey: env.MANAGEMENT_KEY || 'SUPER_SECRET_MANAGEMENT_KEY',"
  },
  {
    "file": "config.js",
    "line": 128,
    "text": "SUPER_SECRET_JWT_KEY_REPLACE_IN_PROD",
    "context": "jwtSecret: env.JWT_SECRET || 'SUPER_SECRET_JWT_KEY_REPLACE_IN_PROD',"
  },
  {
    "file": "config.js",
    "line": 139,
    "text": "[Config] Yapılandırma ortam değişkenlerinden yüklendi.",
    "context": "console.log('[Config] Yapılandırma ortam değişkenlerinden yüklendi.');"
  },
  {
    "file": "config.js",
    "line": 151,
    "text": "Sandbox",
    "context": "console.log(`[Config] Ortam: ${config.isSandbox ? 'Sandbox' : 'Production'}. Vault yolu: ${vaultPrefix}`);"
  },
  {
    "file": "config.js",
    "line": 151,
    "text": "Production",
    "context": "console.log(`[Config] Ortam: ${config.isSandbox ? 'Sandbox' : 'Production'}. Vault yolu: ${vaultPrefix}`);"
  },
  {
    "file": "config.js",
    "line": 151,
    "text": "[Config] Ortam: ${config.isSandbox ? 'Sandbox' : 'Production'}. Vault yolu: ${vaultPrefix}",
    "context": "console.log(`[Config] Ortam: ${config.isSandbox ? 'Sandbox' : 'Production'}. Vault yolu: ${vaultPrefix}`);"
  },
  {
    "file": "config.js",
    "line": 168,
    "text": "SUPER_SECRET_MANAGEMENT_KEY",
    "context": "managementKey: mgmtSecret?.data?.data?.key || env.MANAGEMENT_KEY || 'SUPER_SECRET_MANAGEMENT_KEY',"
  },
  {
    "file": "config.js",
    "line": 185,
    "text": "Gerekli sırlardan bazıları Vault\\'ta bulunamadı (redisUrl, email.host, jwtSecret).",
    "context": "throw new Error('Gerekli sırlardan bazıları Vault\\'ta bulunamadı (redisUrl, email.host, jwtSecret).');"
  },
  {
    "file": "config.js",
    "line": 189,
    "text": "[Config] Sırlar başarıyla Vault\\'tan yüklendi.",
    "context": "console.log('[Config] Sırlar başarıyla Vault\\'tan yüklendi.');"
  },
  {
    "file": "config.js",
    "line": 192,
    "text": "[Config] HATA: Vault\\'tan sırlar alınamadı. Uygulama güvenli modda sonlandırılıyor.",
    "context": "console.error('[Config] HATA: Vault\\'tan sırlar alınamadı. Uygulama güvenli modda sonlandırılıyor.', error.message);"
  },
  {
    "file": "contentauth.mjs",
    "line": 0,
    "text": "<no user-facing text detected>",
    "context": "auto-generated placeholder"
  },
  {
    "file": "emailService.js",
    "line": 18,
    "text": "Email servisi başlatılamadı: Yapılandırma (config) henüz yüklenmemiş veya e-posta ayarları eksik.",
    "context": "throw new Error('Email servisi başlatılamadı: Yapılandırma (config) henüz yüklenmemiş veya e-posta ayarları eksik.');"
  },
  {
    "file": "emailService.js",
    "line": 23,
    "text": "[EmailService] E-posta servisi başlatılıyor: ${host}:${port}",
    "context": "console.log(`[EmailService] E-posta servisi başlatılıyor: ${host}:${port}`);"
  },
  {
    "file": "emailService.js",
    "line": 50,
    "text": "VideoKit Platform",
    "context": "from: `\"VideoKit Platform\" <noreply@videokit.io>`, // Gönderici adresi"
  },
  {
    "file": "emailService.js",
    "line": 50,
    "text": "\"VideoKit Platform\" <noreply@videokit.io>",
    "context": "from: `\"VideoKit Platform\" <noreply@videokit.io>`, // Gönderici adresi"
  },
  {
    "file": "emailService.js",
    "line": 58,
    "text": "[EmailService] E-posta başarıyla gönderildi. Message ID: ${info.messageId}",
    "context": "console.log(`[EmailService] E-posta başarıyla gönderildi. Message ID: ${info.messageId}`);"
  },
  {
    "file": "emailService.js",
    "line": 61,
    "text": "[EmailService] E-posta gönderimi başarısız oldu:",
    "context": "console.error(`[EmailService] E-posta gönderimi başarısız oldu:`, error);"
  },
  {
    "file": "emailService.js",
    "line": 62,
    "text": "E-posta gönderimi sırasında bir hata oluştu.",
    "context": "throw new Error('E-posta gönderimi sırasında bir hata oluştu.');"
  },
  {
    "file": "http-error.js",
    "line": 5,
    "text": "X-Request-Id",
    "context": "export const REQUEST_ID_HEADER = 'X-Request-Id';"
  },
  {
    "file": "i18n.js",
    "line": 25,
    "text": "✅ i18n: Diller yüklendi -> [${Object.keys(translations).join(', ')}]",
    "context": "console.log(`✅ i18n: Diller yüklendi -> [${Object.keys(translations).join(', ')}]`);"
  },
  {
    "file": "i18n.js",
    "line": 27,
    "text": "❌ i18n: Dil dosyaları yüklenemedi:",
    "context": "console.error('❌ i18n: Dil dosyaları yüklenemedi:', error);"
  },
  {
    "file": "i18n.js",
    "line": 37,
    "text": "Accept-Language",
    "context": "const langHeader = req.get('Accept-Language');"
  },
  {
    "file": "i18n.js",
    "line": 50,
    "text": "John",
    "context": "* @param {object} [replacements={}] - An object of placeholders to replace (e.g., { name: 'John' })."
  },
  {
    "file": "idempotency.js",
    "line": 5,
    "text": "Idempotency-Key",
    "context": "* Bu middleware, aynı 'Idempotency-Key' başlığına sahip tekrar eden isteklerin"
  },
  {
    "file": "idempotency.js",
    "line": 13,
    "text": "POST",
    "context": "if (!['POST', 'PUT', 'PATCH', 'DELETE'].includes(req.method)) {"
  },
  {
    "file": "idempotency.js",
    "line": 13,
    "text": "PUT",
    "context": "if (!['POST', 'PUT', 'PATCH', 'DELETE'].includes(req.method)) {"
  },
  {
    "file": "idempotency.js",
    "line": 13,
    "text": "PATCH",
    "context": "if (!['POST', 'PUT', 'PATCH', 'DELETE'].includes(req.method)) {"
  },
  {
    "file": "idempotency.js",
    "line": 13,
    "text": "DELETE",
    "context": "if (!['POST', 'PUT', 'PATCH', 'DELETE'].includes(req.method)) {"
  },
  {
    "file": "idempotency.js",
    "line": 17,
    "text": "Idempotency-Key",
    "context": "const idempotencyKey = req.get('Idempotency-Key');"
  },
  {
    "file": "idempotency.js",
    "line": 33,
    "text": "[Idempotency] CONFLICT: ${idempotencyKey} anahtarı için zaten bir işlem sürüyor.",
    "context": "console.log(`[Idempotency] CONFLICT: ${idempotencyKey} anahtarı için zaten bir işlem sürüyor.`);"
  },
  {
    "file": "idempotency.js",
    "line": 34,
    "text": "IDEMPOTENCY_IN_PROGRESS",
    "context": "return sendError(res, req, 409, 'IDEMPOTENCY_IN_PROGRESS', 'A request with this Idempotency-Key is already in progress.');"
  },
  {
    "file": "idempotency.js",
    "line": 34,
    "text": "A request with this Idempotency-Key is already in progress.",
    "context": "return sendError(res, req, 409, 'IDEMPOTENCY_IN_PROGRESS', 'A request with this Idempotency-Key is already in progress.');"
  },
  {
    "file": "idempotency.js",
    "line": 37,
    "text": "[Idempotency] HIT: ${idempotencyKey} anahtarı için önbellekteki yanıt döndürülüyor.",
    "context": "console.log(`[Idempotency] HIT: ${idempotencyKey} anahtarı için önbellekteki yanıt döndürülüyor.`);"
  },
  {
    "file": "idempotency.js",
    "line": 45,
    "text": "[Idempotency] HATA: ${redisKey} anahtarındaki veri bozuk. Anahtar silinip devam ediliyor.",
    "context": "console.error(`[Idempotency] HATA: ${redisKey} anahtarındaki veri bozuk. Anahtar silinip devam ediliyor.`, err);"
  },
  {
    "file": "idempotency.js",
    "line": 51,
    "text": "NX",
    "context": "// 'NX' (if Not eXists) seçeneği, sadece anahtar yoksa değeri yazar."
  },
  {
    "file": "idempotency.js",
    "line": 53,
    "text": "EX",
    "context": "const lockAcquired = await redis.set(redisKey, JSON.stringify({ status: 'processing' }), 'EX', 300, 'NX');"
  },
  {
    "file": "idempotency.js",
    "line": 53,
    "text": "NX",
    "context": "const lockAcquired = await redis.set(redisKey, JSON.stringify({ status: 'processing' }), 'EX', 300, 'NX');"
  },
  {
    "file": "idempotency.js",
    "line": 58,
    "text": "IDEMPOTENCY_IN_PROGRESS",
    "context": "return sendError(res, req, 409, 'IDEMPOTENCY_IN_PROGRESS', 'A request with this Idempotency-Key is already in progress.');"
  },
  {
    "file": "idempotency.js",
    "line": 58,
    "text": "A request with this Idempotency-Key is already in progress.",
    "context": "return sendError(res, req, 409, 'IDEMPOTENCY_IN_PROGRESS', 'A request with this Idempotency-Key is already in progress.');"
  },
  {
    "file": "idempotency.js",
    "line": 61,
    "text": "[Idempotency] MISS: ${idempotencyKey} anahtarı için yeni istek işleniyor.",
    "context": "console.log(`[Idempotency] MISS: ${idempotencyKey} anahtarı için yeni istek işleniyor.`);"
  },
  {
    "file": "idempotency.js",
    "line": 75,
    "text": "EX",
    "context": "redis.set(redisKey, JSON.stringify(responseToStore), 'EX', 86400);"
  },
  {
    "file": "idempotency.js",
    "line": 88,
    "text": "[Idempotency] CANCEL: Bağlantı kapandı, ${idempotencyKey} kilidi serbest bırakılıyor.",
    "context": "console.log(`[Idempotency] CANCEL: Bağlantı kapandı, ${idempotencyKey} kilidi serbest bırakılıyor.`);"
  },
  {
    "file": "index.html",
    "line": 6,
    "text": "VideoKit Müşteri Portalı",
    "context": "<title data-i18n=\"portal_title\">VideoKit Müşteri Portalı</title>"
  },
  {
    "file": "index.html",
    "line": 13,
    "text": "Kurum Logosu",
    "context": "alt attribute"
  },
  {
    "file": "index.html",
    "line": 14,
    "text": "VideoKit Müşteri Portalı",
    "context": "<h1 data-i18n=\"portal_title\">VideoKit Müşteri Portalı</h1>"
  },
  {
    "file": "index.html",
    "line": 18,
    "text": "Panel",
    "context": "<a href=\"index.html\" data-i18n=\"nav_dashboard\">Panel</a>"
  },
  {
    "file": "index.html",
    "line": 19,
    "text": "Toplu İşlem",
    "context": "<a href=\"batch.html\" data-i18n=\"nav_batch_processing\">Toplu İşlem</a>"
  },
  {
    "file": "index.html",
    "line": 22,
    "text": "Dil seçimi",
    "context": "<label for=\"lang-switcher\" class=\"sr-only\" data-i18n=\"language_switcher_label\">Dil seçimi</label>"
  },
  {
    "file": "index.html",
    "line": 24,
    "text": "Türkçe",
    "context": "<option value=\"tr\" data-i18n=\"language_option_tr\">Türkçe</option>"
  },
  {
    "file": "index.html",
    "line": 24,
    "text": "tr",
    "context": "value attribute"
  },
  {
    "file": "index.html",
    "line": 25,
    "text": "English",
    "context": "<option value=\"en\" data-i18n=\"language_option_en\">English</option>"
  },
  {
    "file": "index.html",
    "line": 25,
    "text": "en",
    "context": "value attribute"
  },
  {
    "file": "index.html",
    "line": 26,
    "text": "Deutsch",
    "context": "<option value=\"de\" data-i18n=\"language_option_de\">Deutsch</option>"
  },
  {
    "file": "index.html",
    "line": 26,
    "text": "de",
    "context": "value attribute"
  },
  {
    "file": "index.html",
    "line": 27,
    "text": "Español",
    "context": "<option value=\"es\" data-i18n=\"language_option_es\">Español</option>"
  },
  {
    "file": "index.html",
    "line": 27,
    "text": "es",
    "context": "value attribute"
  },
  {
    "file": "index.html",
    "line": 28,
    "text": "Pseudo-Locale (QA)",
    "context": "<option value=\"en-XA\" data-i18n=\"language_option_en_xa\">Pseudo-Locale (QA)</option>"
  },
  {
    "file": "index.html",
    "line": 28,
    "text": "en-XA",
    "context": "value attribute"
  },
  {
    "file": "index.html",
    "line": 37,
    "text": "!",
    "context": "<div class=\"quota-banner__icon\" aria-hidden=\"true\">!</div>"
  },
  {
    "file": "index.html",
    "line": 45,
    "text": "Giriş Yap",
    "context": "<h2 data-i18n=\"login_title\">Giriş Yap</h2>"
  },
  {
    "file": "index.html",
    "line": 46,
    "text": "Hesabınıza erişmek için giriş yapın.",
    "context": "<p data-i18n=\"login_prompt_new\">Hesabınıza erişmek için giriş yapın.</p>"
  },
  {
    "file": "index.html",
    "line": 49,
    "text": "E-posta Adresi",
    "context": "<label for=\"login-email\" data-i18n=\"email_label\">E-posta Adresi</label>"
  },
  {
    "file": "index.html",
    "line": 53,
    "text": "Şifre",
    "context": "<label for=\"login-password\" data-i18n=\"password_label\">Şifre</label>"
  },
  {
    "file": "index.html",
    "line": 56,
    "text": "Giriş Yap",
    "context": "<button type=\"submit\" data-i18n=\"login_button\">Giriş Yap</button>"
  },
  {
    "file": "index.html",
    "line": 58,
    "text": "Şifrenizi mi unuttunuz?",
    "context": "<p class=\"auth-toggle-link\"><a href=\"#\" id=\"show-forgot-password-view\" class=\"forgot-password-link\" data-i18n=\"forgot_password_link\">Şifrenizi mi unuttunuz?</a></p>"
  },
  {
    "file": "index.html",
    "line": 59,
    "text": "Hesabınız yok mu? Kaydolun.",
    "context": "<p class=\"auth-toggle-link\"><a href=\"#\" id=\"show-register-view\" data-i18n=\"go_to_register_link\">Hesabınız yok mu? Kaydolun.</a></p>"
  },
  {
    "file": "index.html",
    "line": 65,
    "text": "Yeni Hesap Oluştur",
    "context": "<h2 data-i18n=\"register_title\">Yeni Hesap Oluştur</h2>"
  },
  {
    "file": "index.html",
    "line": 66,
    "text": "Platformu denemek için yeni bir hesap oluşturun.",
    "context": "<p data-i18n=\"register_prompt\">Platformu denemek için yeni bir hesap oluşturun.</p>"
  },
  {
    "file": "index.html",
    "line": 69,
    "text": "Şirket Adı",
    "context": "<label for=\"company-name\" data-i18n=\"company_name_label\">Şirket Adı</label>"
  },
  {
    "file": "index.html",
    "line": 73,
    "text": "E-posta Adresi",
    "context": "<label for=\"register-email\" data-i18n=\"email_label\">E-posta Adresi</label>"
  },
  {
    "file": "index.html",
    "line": 77,
    "text": "Şifre",
    "context": "<label for=\"register-password\" data-i18n=\"password_label\">Şifre</label>"
  },
  {
    "file": "index.html",
    "line": 80,
    "text": "Kaydol",
    "context": "<button type=\"submit\" data-i18n=\"register_button\">Kaydol</button>"
  },
  {
    "file": "index.html",
    "line": 82,
    "text": "Zaten bir hesabınız var mı? Giriş yapın.",
    "context": "<p class=\"auth-toggle-link\"><a href=\"#\" id=\"show-login-view-from-register\" data-i18n=\"go_to_login_link\">Zaten bir hesabınız var mı? Giriş yapın.</a></p>"
  },
  {
    "file": "index.html",
    "line": 88,
    "text": "Şifremi Unuttum",
    "context": "<h2 data-i18n=\"forgot_password_title\">Şifremi Unuttum</h2>"
  },
  {
    "file": "index.html",
    "line": 89,
    "text": "Şifre sıfırlama linki göndermek için e-posta adresinizi girin.",
    "context": "<p data-i18n=\"forgot_password_prompt\">Şifre sıfırlama linki göndermek için e-posta adresinizi girin.</p>"
  },
  {
    "file": "index.html",
    "line": 92,
    "text": "E-posta Adresi",
    "context": "<label for=\"forgot-email\" data-i18n=\"email_label\">E-posta Adresi</label>"
  },
  {
    "file": "index.html",
    "line": 95,
    "text": "Sıfırlama Linki Gönder",
    "context": "<button type=\"submit\" data-i18n=\"send_reset_link_button\">Sıfırlama Linki Gönder</button>"
  },
  {
    "file": "index.html",
    "line": 97,
    "text": "Giriş ekranına geri dön.",
    "context": "<p class=\"auth-toggle-link\"><a href=\"#\" id=\"show-login-view-from-forgot\" data-i18n=\"back_to_login_link\">Giriş ekranına geri dön.</a></p>"
  },
  {
    "file": "index.html",
    "line": 103,
    "text": "Yeni Şifre Oluştur",
    "context": "<h2 data-i18n=\"reset_password_title\">Yeni Şifre Oluştur</h2>"
  },
  {
    "file": "index.html",
    "line": 104,
    "text": "Lütfen yeni şifrenizi girin. En az 8 karakter olmalıdır.",
    "context": "<p data-i18n=\"reset_password_prompt\">Lütfen yeni şifrenizi girin. En az 8 karakter olmalıdır.</p>"
  },
  {
    "file": "index.html",
    "line": 107,
    "text": "Yeni Şifre",
    "context": "<label for=\"reset-password\" data-i18n=\"new_password_label\">Yeni Şifre</label>"
  },
  {
    "file": "index.html",
    "line": 110,
    "text": "Şifreyi Güncelle",
    "context": "<button type=\"submit\" data-i18n=\"update_password_button\">Şifreyi Güncelle</button>"
  },
  {
    "file": "index.html",
    "line": 118,
    "text": "Genel Bakış",
    "context": "<span class=\"dashboard-eyebrow\" data-i18n=\"dashboard_overview_label\">Genel Bakış</span>"
  },
  {
    "file": "index.html",
    "line": 120,
    "text": "Aboneliğinizi, kullanımınızı ve API anahtarlarınızı buradan yönetin.",
    "context": "<p class=\"dashboard-description\" data-i18n=\"dashboard_subheading\">Aboneliğinizi, kullanımınızı ve API anahtarlarınızı buradan yönetin.</p>"
  },
  {
    "file": "index.html",
    "line": 123,
    "text": "Çıkış Yap",
    "context": "<button type=\"button\" id=\"logout-button\" class=\"button button--ghost\" data-i18n=\"logout_button\">Çıkış Yap</button>"
  },
  {
    "file": "index.html",
    "line": 130,
    "text": "Abonelik Bilgileri",
    "context": "<h3 data-i18n=\"subscription_info_title\">Abonelik Bilgileri</h3>"
  },
  {
    "file": "index.html",
    "line": 131,
    "text": "Aboneliği Yönet (Stripe)",
    "context": "<a href=\"#\" target=\"_blank\" class=\"button button--ghost button--small\" data-i18n=\"manage_subscription_button\">Aboneliği Yönet (Stripe)</a>"
  },
  {
    "file": "index.html",
    "line": 134,
    "text": "Plan:",
    "context": "<p><strong data-i18n=\"plan_label\">Plan:</strong> <span id=\"plan-name\" data-i18n=\"loading_text\">Yükleniyor...</span></p>"
  },
  {
    "file": "index.html",
    "line": 134,
    "text": "Yükleniyor...",
    "context": "<p><strong data-i18n=\"plan_label\">Plan:</strong> <span id=\"plan-name\" data-i18n=\"loading_text\">Yükleniyor...</span></p>"
  },
  {
    "file": "index.html",
    "line": 140,
    "text": "Kullanım Detayları",
    "context": "<h3 data-i18n=\"usage_details_title\">Kullanım Detayları</h3>"
  },
  {
    "file": "index.html",
    "line": 143,
    "text": "Yükleniyor...",
    "context": "<p data-i18n=\"loading_text\">Yükleniyor...</p>"
  },
  {
    "file": "index.html",
    "line": 150,
    "text": "API Anahtarları Yönetimi",
    "context": "<h3 data-i18n=\"api_keys_title\">API Anahtarları Yönetimi</h3>"
  },
  {
    "file": "index.html",
    "line": 151,
    "text": "Aktif anahtarlarınızı yönetin ve gerekirse iptal edin.",
    "context": "<p class=\"card-subtitle\" data-i18n=\"api_keys_subtitle\">Aktif anahtarlarınızı yönetin ve gerekirse iptal edin.</p>"
  },
  {
    "file": "index.html",
    "line": 153,
    "text": "Yeni Anahtar Oluştur",
    "context": "<button type=\"button\" id=\"create-key-btn\" data-i18n=\"create_key_button\">Yeni Anahtar Oluştur</button>"
  },
  {
    "file": "index.html",
    "line": 158,
    "text": "Yeni API anahtarınız hazır",
    "context": "<strong data-i18n=\"new_key_notice_title\">Yeni API anahtarınız hazır</strong>"
  },
  {
    "file": "index.html",
    "line": 159,
    "text": "Bu anahtarı hemen kopyalayın. Güvenlik nedeniyle bu ekrandan ayrıldığınızda anahtar tekrar gösterilmeyecektir.",
    "context": "<p data-i18n=\"new_key_notice_message\">Bu anahtarı hemen kopyalayın. Güvenlik nedeniyle bu ekrandan ayrıldığınızda anahtar tekrar gösterilmeyecektir.</p>"
  },
  {
    "file": "index.html",
    "line": 166,
    "text": "Anahtarı kopyala",
    "context": "<button type=\"button\" class=\"button button--ghost\" id=\"copy-new-key\" data-i18n=\"copy_key_button\">Anahtarı kopyala</button>"
  },
  {
    "file": "index.html",
    "line": 167,
    "text": "Gizle",
    "context": "<button type=\"button\" class=\"button button--ghost\" id=\"dismiss-new-key\" data-i18n=\"dismiss_key_button\">Gizle</button>"
  },
  {
    "file": "index.html",
    "line": 174,
    "text": "Henüz bir API anahtarınız yok.",
    "context": "<span data-i18n=\"no_api_keys_yet\">Henüz bir API anahtarınız yok.</span>"
  },
  {
    "file": "index.html",
    "line": 175,
    "text": "İlk anahtarınızı oluşturmak için yukarıdaki butonu kullanın.",
    "context": "<small data-i18n=\"api_keys_empty_description\">İlk anahtarınızı oluşturmak için yukarıdaki butonu kullanın.</small>"
  },
  {
    "file": "index.html",
    "line": 185,
    "text": "Kullanım Analitikleri",
    "context": "<h3 data-i18n=\"analytics_title\">Kullanım Analitikleri</h3>"
  },
  {
    "file": "index.html",
    "line": 186,
    "text": "Son işlemlerinizin performansını inceleyin.",
    "context": "<p class=\"card-subtitle\" data-i18n=\"analytics_subtitle\">Son işlemlerinizin performansını inceleyin.</p>"
  },
  {
    "file": "index.html",
    "line": 191,
    "text": "Başlangıç",
    "context": "<label for=\"start-date\" data-i18n=\"analytics_date_start\">Başlangıç</label>"
  },
  {
    "file": "index.html",
    "line": 193,
    "text": "Bitiş",
    "context": "<label for=\"end-date\" data-i18n=\"analytics_date_end\">Bitiş</label>"
  },
  {
    "file": "index.html",
    "line": 196,
    "text": "CSV Olarak Dışa Aktar",
    "context": "<button type=\"button\" id=\"export-csv-btn\" class=\"button button--ghost\" data-i18n=\"analytics_export_button\">CSV Olarak Dışa Aktar</button>"
  },
  {
    "file": "index.html",
    "line": 200,
    "text": "Toplam API Çağrısı",
    "context": "<h4 data-i18n=\"analytics_total_calls\">Toplam API Çağrısı</h4>"
  },
  {
    "file": "index.html",
    "line": 201,
    "text": "0",
    "context": "<p id=\"total-calls-stat\">0</p>"
  },
  {
    "file": "index.html",
    "line": 204,
    "text": "Başarı Oranı",
    "context": "<h4 data-i18n=\"analytics_success_rate\">Başarı Oranı</h4>"
  },
  {
    "file": "index.html",
    "line": 209,
    "text": "0%",
    "context": "<span id=\"success-percentage\">0%</span>"
  },
  {
    "file": "index.html",
    "line": 213,
    "text": "Ort. İşlem Süresi",
    "context": "<h4 data-i18n=\"analytics_avg_time\">Ort. İşlem Süresi</h4>"
  },
  {
    "file": "index.html",
    "line": 214,
    "text": "0 ms",
    "context": "<p id=\"avg-time-stat\">0 ms</p>"
  },
  {
    "file": "index.html",
    "line": 218,
    "text": "Son Aktiviteler",
    "context": "<h4 data-i18n=\"analytics_recent_activity\">Son Aktiviteler</h4>"
  },
  {
    "file": "index.html",
    "line": 222,
    "text": "Tarih",
    "context": "<th data-i18n=\"analytics_table_date\">Tarih</th>"
  },
  {
    "file": "index.html",
    "line": 223,
    "text": "İşlem Türü",
    "context": "<th data-i18n=\"analytics_table_type\">İşlem Türü</th>"
  },
  {
    "file": "index.html",
    "line": 224,
    "text": "Durum",
    "context": "<th data-i18n=\"analytics_table_status\">Durum</th>"
  },
  {
    "file": "index.html",
    "line": 225,
    "text": "Süre (ms)",
    "context": "<th data-i18n=\"analytics_table_duration\">Süre (ms)</th>"
  },
  {
    "file": "index.html",
    "line": 243,
    "text": "Güvenlik için anahtarın sadece başlangıcı ve sonu görüntülenir.",
    "context": "<small data-i18n=\"api_key_masked_hint\">Güvenlik için anahtarın sadece başlangıcı ve sonu görüntülenir.</small>"
  },
  {
    "file": "index.html",
    "line": 246,
    "text": "Sil",
    "context": "<button type=\"button\" class=\"delete-btn\" data-i18n=\"delete_button\">Sil</button>"
  },
  {
    "file": "instrument.mjs",
    "line": 0,
    "text": "<no user-facing text detected>",
    "context": "auto-generated placeholder"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 15,
    "text": "Invalid period key: ${periodKey}",
    "context": "throw new Error(`Invalid period key: ${periodKey}`);"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 37,
    "text": "SELECT pg_try_advisory_lock($1::bigint) AS locked",
    "context": "const { rows } = await client.query('SELECT pg_try_advisory_lock($1::bigint) AS locked', [ADVISORY_LOCK_KEY.toString()]);"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 40,
    "text": "[flush-usage] Unable to obtain advisory lock. Another instance may be running.",
    "context": "console.warn('[flush-usage] Unable to obtain advisory lock. Another instance may be running.');"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 47,
    "text": "SELECT pg_advisory_unlock($1::bigint)",
    "context": "await client.query('SELECT pg_advisory_unlock($1::bigint)', [ADVISORY_LOCK_KEY.toString()]);"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 49,
    "text": "[flush-usage] Failed to release advisory lock.",
    "context": "console.warn('[flush-usage] Failed to release advisory lock.', error);"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 54,
    "text": "SELECT to_regclass($1) AS table_name",
    "context": "const { rows } = await client.query('SELECT to_regclass($1) AS table_name', ['usage_counters']);"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 56,
    "text": "usage_counters table is not available. Run database migrations before executing this job.",
    "context": "throw new Error('usage_counters table is not available. Run database migrations before executing this job.');"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 88,
    "text": "BEGIN",
    "context": "await client.query('BEGIN');"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 102,
    "text": "COMMIT",
    "context": "await client.query('COMMIT');"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 105,
    "text": "ROLLBACK",
    "context": "await client.query('ROLLBACK');"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 132,
    "text": "MATCH",
    "context": "const [nextCursor, keys] = await redis.scan(cursor, 'MATCH', 'usage:*', 'COUNT', 200);"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 132,
    "text": "COUNT",
    "context": "const [nextCursor, keys] = await redis.scan(cursor, 'MATCH', 'usage:*', 'COUNT', 200);"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 143,
    "text": "[flush-usage] Completed. processedKeys=${processedKeys}, upserts=${totalUpserts}",
    "context": "console.log(`[flush-usage] Completed. processedKeys=${processedKeys}, upserts=${totalUpserts}`);"
  },
  {
    "file": "jobs/flush-usage.mjs",
    "line": 153,
    "text": "[flush-usage] Job failed:",
    "context": "console.error('[flush-usage] Job failed:', error);"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 6,
    "text": "ROLLUP_PURGE_ENABLED",
    "context": "const ROLLUP_PURGE_ENV_KEYS = ['ROLLUP_PURGE_ENABLED', 'PURGE_ROLLUPS', 'ENABLE_ROLLUP_PURGE'];"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 6,
    "text": "PURGE_ROLLUPS",
    "context": "const ROLLUP_PURGE_ENV_KEYS = ['ROLLUP_PURGE_ENABLED', 'PURGE_ROLLUPS', 'ENABLE_ROLLUP_PURGE'];"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 6,
    "text": "ENABLE_ROLLUP_PURGE",
    "context": "const ROLLUP_PURGE_ENV_KEYS = ['ROLLUP_PURGE_ENABLED', 'PURGE_ROLLUPS', 'ENABLE_ROLLUP_PURGE'];"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 15,
    "text": "SELECT pg_try_advisory_lock($1::bigint) AS locked",
    "context": "const { rows } = await client.query('SELECT pg_try_advisory_lock($1::bigint) AS locked', [ADVISORY_LOCK_KEY.toString()]);"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 18,
    "text": "[purge] Unable to obtain advisory lock. Another instance may be running.",
    "context": "console.warn('[purge] Unable to obtain advisory lock. Another instance may be running.');"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 25,
    "text": "SELECT pg_advisory_unlock($1::bigint)",
    "context": "await client.query('SELECT pg_advisory_unlock($1::bigint)', [ADVISORY_LOCK_KEY.toString()]);"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 27,
    "text": "[purge] Failed to release advisory lock.",
    "context": "console.warn('[purge] Failed to release advisory lock.', error);"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 32,
    "text": "SELECT to_regclass($1) AS table_name",
    "context": "const { rows } = await client.query('SELECT to_regclass($1) AS table_name', [tableName]);"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 38,
    "text": "DELETE FROM api_events WHERE occurred_at < NOW() - INTERVAL \\'90 days\\'",
    "context": "'DELETE FROM api_events WHERE occurred_at < NOW() - INTERVAL \\'90 days\\'',"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 40,
    "text": "[purge] Removed ${rowCount} api_events rows older than 90 days.",
    "context": "console.log(`[purge] Removed ${rowCount} api_events rows older than 90 days.`);"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 46,
    "text": "[purge] Rollup purge disabled. Set ROLLUP_PURGE_ENABLED=1 to enable.",
    "context": "console.log('[purge] Rollup purge disabled. Set ROLLUP_PURGE_ENABLED=1 to enable.');"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 61,
    "text": "[purge] No rollup tables found. Skipping rollup purge.",
    "context": "console.log('[purge] No rollup tables found. Skipping rollup purge.');"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 70,
    "text": "DELETE FROM api_events_rollup_hourly WHERE bucket_start < $1::timestamptz",
    "context": "'DELETE FROM api_events_rollup_hourly WHERE bucket_start < $1::timestamptz',"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 78,
    "text": "DELETE FROM api_events_rollup_daily WHERE bucket_date < $1::date",
    "context": "'DELETE FROM api_events_rollup_daily WHERE bucket_date < $1::date',"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 84,
    "text": "[purge] Removed ${hourlyDeleted} hourly and ${dailyDeleted} daily rollup rows older than 12 months.",
    "context": "console.log(`[purge] Removed ${hourlyDeleted} hourly and ${dailyDeleted} daily rollup rows older than 12 months.`);"
  },
  {
    "file": "jobs/purge.mjs",
    "line": 111,
    "text": "[purge] Job failed:",
    "context": "console.error('[purge] Job failed:', error);"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 19,
    "text": "SELECT pg_try_advisory_lock($1::bigint) AS locked",
    "context": "const { rows } = await client.query('SELECT pg_try_advisory_lock($1::bigint) AS locked', [ADVISORY_LOCK_KEY.toString()]);"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 22,
    "text": "[rollup-analytics] Unable to obtain advisory lock. Another instance may be running.",
    "context": "console.warn('[rollup-analytics] Unable to obtain advisory lock. Another instance may be running.');"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 29,
    "text": "SELECT pg_advisory_unlock($1::bigint)",
    "context": "await client.query('SELECT pg_advisory_unlock($1::bigint)', [ADVISORY_LOCK_KEY.toString()]);"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 31,
    "text": "[rollup-analytics] Failed to release advisory lock.",
    "context": "console.warn('[rollup-analytics] Failed to release advisory lock.', error);"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 78,
    "text": "SELECT last_processed_at FROM analytics_rollup_state WHERE rollup_type = $1",
    "context": "'SELECT last_processed_at FROM analytics_rollup_state WHERE rollup_type = $1',"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 136,
    "text": "BEGIN",
    "context": "await client.query('BEGIN');"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 172,
    "text": "COMMIT",
    "context": "await client.query('COMMIT');"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 175,
    "text": "ROLLBACK",
    "context": "await client.query('ROLLBACK');"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 215,
    "text": "BEGIN",
    "context": "await client.query('BEGIN');"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 252,
    "text": "COMMIT",
    "context": "await client.query('COMMIT');"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 255,
    "text": "ROLLBACK",
    "context": "await client.query('ROLLBACK');"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 279,
    "text": "[rollup-analytics] Completed. hourlyBuckets=${hourly.buckets}, dailyBuckets=${daily.buckets}",
    "context": "`[rollup-analytics] Completed. hourlyBuckets=${hourly.buckets}, dailyBuckets=${daily.buckets}`,"
  },
  {
    "file": "jobs/rollup-analytics.mjs",
    "line": 289,
    "text": "[rollup-analytics] Job failed:",
    "context": "console.error('[rollup-analytics] Job failed:', error);"
  },
  {
    "file": "klv-tests.html",
    "line": 5,
    "text": "VideoKit Core - KLV Birim Testleri",
    "context": "<title>VideoKit Core - KLV Birim Testleri</title>"
  },
  {
    "file": "klv-tests.html",
    "line": 16,
    "text": "VideoKit Core - KLV Birim Testleri",
    "context": "<h1>VideoKit Core - KLV Birim Testleri</h1>"
  },
  {
    "file": "middleware/billing.js",
    "line": 7,
    "text": "POST",
    "context": "{ method: 'POST', pattern: /^\\/verify$/i, name: '/verify', weight: 1 },"
  },
  {
    "file": "middleware/billing.js",
    "line": 8,
    "text": "POST",
    "context": "{ method: 'POST', pattern: /^\\/stamp$/i, name: '/stamp', weight: 5 },"
  },
  {
    "file": "middleware/billing.js",
    "line": 9,
    "text": "POST",
    "context": "{ method: 'POST', pattern: /^\\/batch\\/upload$/i, name: '/batch/upload', weight: 10 },"
  },
  {
    "file": "middleware/billing.js",
    "line": 10,
    "text": "GET",
    "context": "{ method: 'GET', pattern: /^\\/management\\/tenants$/i, name: '/management/tenants', billable: false },"
  },
  {
    "file": "middleware/billing.js",
    "line": 11,
    "text": "POST",
    "context": "{ method: 'POST', pattern: /^\\/management\\/keys$/i, name: '/management/keys', billable: false },"
  },
  {
    "file": "middleware/billing.js",
    "line": 13,
    "text": "DELETE",
    "context": "method: 'DELETE',"
  },
  {
    "file": "middleware/billing.js",
    "line": 32,
    "text": "HGET",
    "context": "local current = tonumber(redis.call('HGET', key, totalField) or '0')"
  },
  {
    "file": "middleware/billing.js",
    "line": 34,
    "text": "HGET",
    "context": "local opValue = tonumber(redis.call('HGET', key, opField) or '0')"
  },
  {
    "file": "middleware/billing.js",
    "line": 39,
    "text": "HINCRBYFLOAT",
    "context": "local newTotal = redis.call('HINCRBYFLOAT', key, totalField, increment)"
  },
  {
    "file": "middleware/billing.js",
    "line": 40,
    "text": "HINCRBYFLOAT",
    "context": "local newOp = redis.call('HINCRBYFLOAT', key, opField, increment)"
  },
  {
    "file": "middleware/billing.js",
    "line": 43,
    "text": "PEXPIRE",
    "context": "redis.call('PEXPIRE', key, ttl)"
  },
  {
    "file": "middleware/billing.js",
    "line": 57,
    "text": "ZREMRANGEBYSCORE",
    "context": "redis.call('ZREMRANGEBYSCORE', zsetKey, 0, now - window)"
  },
  {
    "file": "middleware/billing.js",
    "line": 58,
    "text": "ZCARD",
    "context": "local current = redis.call('ZCARD', zsetKey)"
  },
  {
    "file": "middleware/billing.js",
    "line": 66,
    "text": "ZRANGE",
    "context": "local oldest = redis.call('ZRANGE', zsetKey, 0, 0, 'WITHSCORES')"
  },
  {
    "file": "middleware/billing.js",
    "line": 66,
    "text": "WITHSCORES",
    "context": "local oldest = redis.call('ZRANGE', zsetKey, 0, 0, 'WITHSCORES')"
  },
  {
    "file": "middleware/billing.js",
    "line": 73,
    "text": "INCR",
    "context": "local sequence = redis.call('INCR', counterKey)"
  },
  {
    "file": "middleware/billing.js",
    "line": 74,
    "text": "ZADD",
    "context": "redis.call('ZADD', zsetKey, now, now .. '-' .. sequence)"
  },
  {
    "file": "middleware/billing.js",
    "line": 75,
    "text": "EXPIRE",
    "context": "redis.call('EXPIRE', zsetKey, ttl)"
  },
  {
    "file": "middleware/billing.js",
    "line": 76,
    "text": "EXPIRE",
    "context": "redis.call('EXPIRE', counterKey, ttl)"
  },
  {
    "file": "middleware/billing.js",
    "line": 81,
    "text": "ZRANGE",
    "context": "local oldestAfterInsert = redis.call('ZRANGE', zsetKey, 0, 0, 'WITHSCORES')"
  },
  {
    "file": "middleware/billing.js",
    "line": 81,
    "text": "WITHSCORES",
    "context": "local oldestAfterInsert = redis.call('ZRANGE', zsetKey, 0, 0, 'WITHSCORES')"
  },
  {
    "file": "middleware/billing.js",
    "line": 128,
    "text": "Duration of billable API calls in milliseconds.",
    "context": "help: 'Duration of billable API calls in milliseconds.',"
  },
  {
    "file": "middleware/billing.js",
    "line": 139,
    "text": "Total billable API requests processed.",
    "context": "help: 'Total billable API requests processed.',"
  },
  {
    "file": "middleware/billing.js",
    "line": 147,
    "text": "Toplam kota aşımlarının sayısı.",
    "context": "help: 'Toplam kota aşımlarının sayısı.',"
  },
  {
    "file": "middleware/billing.js",
    "line": 154,
    "text": "API analitik kayıtlarının veritabanına yazılamadığı toplam durum sayısı.",
    "context": "help: 'API analitik kayıtlarının veritabanına yazılamadığı toplam durum sayısı.',"
  },
  {
    "file": "middleware/billing.js",
    "line": 201,
    "text": "Billing middleware requires configureBilling to run first.",
    "context": "throw new Error('Billing middleware requires configureBilling to run first.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 265,
    "text": "SELECT plan_id, monthly_api_calls_total, endpoint_overrides FROM plan_entitlements WHERE plan_id = $1",
    "context": "'SELECT plan_id, monthly_api_calls_total, endpoint_overrides FROM plan_entitlements WHERE plan_id = $1',"
  },
  {
    "file": "middleware/billing.js",
    "line": 287,
    "text": "SELECT id, name, plan_id, plan, quota_override FROM tenants WHERE id = $1",
    "context": "'SELECT id, name, plan_id, plan, quota_override FROM tenants WHERE id = $1',"
  },
  {
    "file": "middleware/billing.js",
    "line": 327,
    "text": "SELECT tenant_id FROM api_keys WHERE key_hash = $1 LIMIT 1",
    "context": "'SELECT tenant_id FROM api_keys WHERE key_hash = $1 LIMIT 1',"
  },
  {
    "file": "middleware/billing.js",
    "line": 332,
    "text": "EX",
    "context": "await redis.set(`api_key:${apiKey}`, tenantId, 'EX', 3600);"
  },
  {
    "file": "middleware/billing.js",
    "line": 333,
    "text": "EX",
    "context": "await redis.set(`api_key_hash:${hash}`, tenantId, 'EX', 3600);"
  },
  {
    "file": "middleware/billing.js",
    "line": 362,
    "text": "${year}-${String(month + 1).padStart(2, '0')}",
    "context": "const key = `${year}-${String(month + 1).padStart(2, '0')}`;"
  },
  {
    "file": "middleware/billing.js",
    "line": 373,
    "text": "op:${endpoint.replace(/\\s+/g, '_')}",
    "context": "const endpointField = (endpoint) => `op:${endpoint.replace(/\\s+/g, '_')}`;"
  },
  {
    "file": "middleware/billing.js",
    "line": 391,
    "text": "Idempotency-Key",
    "context": "const key = req.get?.('Idempotency-Key');"
  },
  {
    "file": "middleware/billing.js",
    "line": 409,
    "text": "SELECT request_hash, status_code FROM idempotency_keys WHERE idempotency_key = $1",
    "context": "'SELECT request_hash, status_code FROM idempotency_keys WHERE idempotency_key = $1',"
  },
  {
    "file": "middleware/billing.js",
    "line": 418,
    "text": "Idempotency hash mismatch",
    "context": "const error = new Error('Idempotency hash mismatch');"
  },
  {
    "file": "middleware/billing.js",
    "line": 424,
    "text": "UPDATE idempotency_keys SET last_accessed_at = NOW(), locked_at = NOW() WHERE idempotency_key = $1",
    "context": "'UPDATE idempotency_keys SET last_accessed_at = NOW(), locked_at = NOW() WHERE idempotency_key = $1',"
  },
  {
    "file": "middleware/billing.js",
    "line": 436,
    "text": "[billing] idempotency_keys table missing, skipping persistence.",
    "context": "state.logger?.warn?.('[billing] idempotency_keys table missing, skipping persistence.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 453,
    "text": "X-API-Key",
    "context": "const apiKey = req.get('X-API-Key');"
  },
  {
    "file": "middleware/billing.js",
    "line": 455,
    "text": "AUTH_REQUIRED",
    "context": "return res.status(401).json({ code: 'AUTH_REQUIRED', message: 'X-API-Key header required.' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 455,
    "text": "X-API-Key header required.",
    "context": "return res.status(401).json({ code: 'AUTH_REQUIRED', message: 'X-API-Key header required.' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 461,
    "text": "INVALID_API_KEY",
    "context": "return res.status(401).json({ code: 'INVALID_API_KEY', message: 'API key is not recognized.' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 461,
    "text": "API key is not recognized.",
    "context": "return res.status(401).json({ code: 'INVALID_API_KEY', message: 'API key is not recognized.' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 467,
    "text": "TENANT_NOT_FOUND",
    "context": "return res.status(404).json({ code: 'TENANT_NOT_FOUND', message: 'Tenant context could not be resolved.' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 467,
    "text": "Tenant context could not be resolved.",
    "context": "return res.status(404).json({ code: 'TENANT_NOT_FOUND', message: 'Tenant context could not be resolved.' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 483,
    "text": "X-Quota-Period",
    "context": "res.setHeader('X-Quota-Period', billing.period.key);"
  },
  {
    "file": "middleware/billing.js",
    "line": 485,
    "text": "X-Quota-Limit",
    "context": "res.setHeader('X-Quota-Limit', billing.quota.limit);"
  },
  {
    "file": "middleware/billing.js",
    "line": 490,
    "text": "[billing] resolveTenant failed",
    "context": "req.log?.error?.({ err: error }, '[billing] resolveTenant failed');"
  },
  {
    "file": "middleware/billing.js",
    "line": 491,
    "text": "TENANT_RESOLUTION_FAILED",
    "context": "res.status(500).json({ code: 'TENANT_RESOLUTION_FAILED' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 502,
    "text": "GET",
    "context": "export const isWrite = (req) => !['GET', 'HEAD', 'OPTIONS'].includes((req.method || '').toUpperCase());"
  },
  {
    "file": "middleware/billing.js",
    "line": 502,
    "text": "HEAD",
    "context": "export const isWrite = (req) => !['GET', 'HEAD', 'OPTIONS'].includes((req.method || '').toUpperCase());"
  },
  {
    "file": "middleware/billing.js",
    "line": 502,
    "text": "OPTIONS",
    "context": "export const isWrite = (req) => !['GET', 'HEAD', 'OPTIONS'].includes((req.method || '').toUpperCase());"
  },
  {
    "file": "middleware/billing.js",
    "line": 571,
    "text": "GET",
    "context": "overrides['GET'],"
  },
  {
    "file": "middleware/billing.js",
    "line": 586,
    "text": "GET",
    "context": "plan.endpoint_overrides['GET'],"
  },
  {
    "file": "middleware/billing.js",
    "line": 625,
    "text": "incrementUsageAtomic requires tenantId, endpoint, and periodKey.",
    "context": "throw new Error('incrementUsageAtomic requires tenantId, endpoint, and periodKey.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 653,
    "text": "[billing] Redis increment failed, falling back to Postgres.",
    "context": "state.logger?.warn?.({ err: error }, '[billing] Redis increment failed, falling back to Postgres.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 661,
    "text": "BEGIN",
    "context": "await client.query('BEGIN');"
  },
  {
    "file": "middleware/billing.js",
    "line": 664,
    "text": "SELECT call_count FROM usage_counters WHERE tenant_id = $1 AND endpoint = $2 AND period_start = $3 FOR UPDATE",
    "context": "'SELECT call_count FROM usage_counters WHERE tenant_id = $1 AND endpoint = $2 AND period_start = $3 FOR UPDATE',"
  },
  {
    "file": "middleware/billing.js",
    "line": 669,
    "text": "ROLLBACK",
    "context": "await client.query('ROLLBACK');"
  },
  {
    "file": "middleware/billing.js",
    "line": 695,
    "text": "COMMIT",
    "context": "await client.query('COMMIT');"
  },
  {
    "file": "middleware/billing.js",
    "line": 703,
    "text": "ROLLBACK",
    "context": "await client.query('ROLLBACK');"
  },
  {
    "file": "middleware/billing.js",
    "line": 724,
    "text": "EX",
    "context": "const result = await state.redis.set(key, '1', 'EX', ttl, 'NX');"
  },
  {
    "file": "middleware/billing.js",
    "line": 724,
    "text": "NX",
    "context": "const result = await state.redis.set(key, '1', 'EX', ttl, 'NX');"
  },
  {
    "file": "middleware/billing.js",
    "line": 725,
    "text": "OK",
    "context": "if (result === 'OK') {"
  },
  {
    "file": "middleware/billing.js",
    "line": 732,
    "text": "[billing] Failed to persist usage threshold marker to Redis.",
    "context": "state.logger?.warn?.({ err: error }, '[billing] Failed to persist usage threshold marker to Redis.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 765,
    "text": "usage_threshold:${tenantId}:${endpoint}:${period?.key ?? 'unknown'}:${threshold.label}",
    "context": "const key = `usage_threshold:${tenantId}:${endpoint}:${period?.key ?? 'unknown'}:${threshold.label}`;"
  },
  {
    "file": "middleware/billing.js",
    "line": 778,
    "text": "Usage threshold ${threshold.label}% reached",
    "context": "`Usage threshold ${threshold.label}% reached`,"
  },
  {
    "file": "middleware/billing.js",
    "line": 793,
    "text": "TENANT_REQUIRED",
    "context": "return res.status(401).json({ code: 'TENANT_REQUIRED' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 836,
    "text": "QUOTA_EXCEEDED",
    "context": "code: 'QUOTA_EXCEEDED',"
  },
  {
    "file": "middleware/billing.js",
    "line": 842,
    "text": "X-Quota-Remaining",
    "context": "res.setHeader('X-Quota-Remaining', Math.max(0, Math.floor(limit - usage.total)));"
  },
  {
    "file": "middleware/billing.js",
    "line": 847,
    "text": "IDEMPOTENCY_CONFLICT",
    "context": "return res.status(409).json({ code: 'IDEMPOTENCY_CONFLICT' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 850,
    "text": "[billing] enforceQuota failed",
    "context": "req.log?.error?.({ err: error }, '[billing] enforceQuota failed');"
  },
  {
    "file": "middleware/billing.js",
    "line": 851,
    "text": "BILLING_FAILURE",
    "context": "res.status(500).json({ code: 'BILLING_FAILURE' });"
  },
  {
    "file": "middleware/billing.js",
    "line": 886,
    "text": ").toUpperCase() !==",
    "context": "if ((req.method || '').toUpperCase() !== 'GET') {"
  },
  {
    "file": "middleware/billing.js",
    "line": 930,
    "text": "[billing] GET rate limiter Redis failure, using in-memory window.",
    "context": "state.logger?.warn?.({ err: error }, '[billing] GET rate limiter Redis failure, using in-memory window.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 941,
    "text": "X-RateLimit-Limit",
    "context": "res.setHeader('X-RateLimit-Limit', limitValue);"
  },
  {
    "file": "middleware/billing.js",
    "line": 942,
    "text": "X-RateLimit-Remaining",
    "context": "res.setHeader('X-RateLimit-Remaining', remaining);"
  },
  {
    "file": "middleware/billing.js",
    "line": 946,
    "text": "Retry-After",
    "context": "res.setHeader('Retry-After', retryAfterSeconds);"
  },
  {
    "file": "middleware/billing.js",
    "line": 948,
    "text": "X-RateLimit-Reset",
    "context": "res.setHeader('X-RateLimit-Reset', resetEpoch);"
  },
  {
    "file": "middleware/billing.js",
    "line": 951,
    "text": "X-RateLimit-Reset",
    "context": "res.setHeader('X-RateLimit-Reset', resetEpoch);"
  },
  {
    "file": "middleware/billing.js",
    "line": 960,
    "text": "[billing] GET rate limit exceeded",
    "context": "req.log?.warn?.({ tenantId, endpoint: operation.normalizedEndpoint, limit: limitValue, count: result.count }, '[billing] GET rate limit exceeded');"
  },
  {
    "file": "middleware/billing.js",
    "line": 961,
    "text": "READ_RATE_LIMIT_EXCEEDED",
    "context": "return sendError(res, req, 429, 'READ_RATE_LIMIT_EXCEEDED', 'Too many read requests. Please slow down.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 961,
    "text": "Too many read requests. Please slow down.",
    "context": "return sendError(res, req, 429, 'READ_RATE_LIMIT_EXCEEDED', 'Too many read requests. Please slow down.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 966,
    "text": "[billing] Read rate limiter failure",
    "context": "req.log?.error?.({ err: error }, '[billing] Read rate limiter failure');"
  },
  {
    "file": "middleware/billing.js",
    "line": 967,
    "text": "READ_RATE_LIMIT_FAILURE",
    "context": "return sendError(res, req, 500, 'READ_RATE_LIMIT_FAILURE', 'The read rate limiter is temporarily unavailable.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 967,
    "text": "The read rate limiter is temporarily unavailable.",
    "context": "return sendError(res, req, 500, 'READ_RATE_LIMIT_FAILURE', 'The read rate limiter is temporarily unavailable.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 1021,
    "text": "UPDATE idempotency_keys SET status_code = $2, locked_at = NULL, last_accessed_at = NOW() WHERE idempotency_key = $1",
    "context": "'UPDATE idempotency_keys SET status_code = $2, locked_at = NULL, last_accessed_at = NOW() WHERE idempotency_key = $1',"
  },
  {
    "file": "middleware/billing.js",
    "line": 1026,
    "text": "[billing] Failed to update idempotency status.",
    "context": "state.logger?.warn?.({ err: error }, '[billing] Failed to update idempotency status.');"
  },
  {
    "file": "middleware/billing.js",
    "line": 1031,
    "text": "[billing] finalizeAndLog failure",
    "context": "req.log?.error?.({ err: error }, '[billing] finalizeAndLog failure');"
  },
  {
    "file": "n8n-nodes-videokit:credentials:VideoKitApi.credentials.js",
    "line": 2,
    "text": "in VideoKit API",
    "context": "* Bu dosya, n8n'in VideoKit API'sine nasıl bağlanacağını tanımlar."
  },
  {
    "file": "n8n-nodes-videokit:credentials:VideoKitApi.credentials.js",
    "line": 3,
    "text": "Credential",
    "context": "* Kullanıcı arayüzünde bir \"Credential\" oluşturma formu yaratır."
  },
  {
    "file": "n8n-nodes-videokit:credentials:VideoKitApi.credentials.js",
    "line": 10,
    "text": "VideoKit API",
    "context": "displayName = 'VideoKit API';"
  },
  {
    "file": "n8n-nodes-videokit:credentials:VideoKitApi.credentials.js",
    "line": 18,
    "text": "API Sunucu URL",
    "context": "displayName: 'API Sunucu URL',"
  },
  {
    "file": "n8n-nodes-videokit:credentials:VideoKitApi.credentials.js",
    "line": 23,
    "text": "VideoKit API sunucunuzun tam adresi.",
    "context": "description: 'VideoKit API sunucunuzun tam adresi.',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 7,
    "text": "VideoKit",
    "context": "displayName: 'VideoKit',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 13,
    "text": "VideoKit C2PA Doğrulama ve Manifest Oluşturma Aracı",
    "context": "description: 'VideoKit C2PA Doğrulama ve Manifest Oluşturma Aracı',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 15,
    "text": "VideoKit",
    "context": "name: 'VideoKit',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 30,
    "text": "Operasyon",
    "context": "displayName: 'Operasyon',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 36,
    "text": "Doğrula (Verify)",
    "context": "name: 'Doğrula (Verify)',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 38,
    "text": "Bir video dosyasının C2PA manifestini doğrular",
    "context": "description: 'Bir video dosyasının C2PA manifestini doğrular',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 39,
    "text": "Bir video dosyasını doğrula",
    "context": "action: 'Bir video dosyasını doğrula',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 42,
    "text": "Manifest Oluştur (Stamp)",
    "context": "name: 'Manifest Oluştur (Stamp)',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 44,
    "text": "Bir video için .c2pa yan dosyası oluşturur",
    "context": "description: 'Bir video için .c2pa yan dosyası oluşturur',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 45,
    "text": "Bir video için manifest oluştur",
    "context": "action: 'Bir video için manifest oluştur',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 56,
    "text": "Binary Veri Alanı",
    "context": "displayName: 'Binary Veri Alanı',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 66,
    "text": "Gelen veride dosya içeriğini barındıran alanın adı.",
    "context": "description: 'Gelen veride dosya içeriğini barındıran alanın adı.',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 72,
    "text": "Yazar (Creator)",
    "context": "displayName: 'Yazar (Creator)',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 82,
    "text": "Örn: VideoKit Departmanı",
    "context": "placeholder: 'Örn: VideoKit Departmanı',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 83,
    "text": "Manifeste eklenecek yazar (creator) bilgisi.",
    "context": "description: 'Manifeste eklenecek yazar (creator) bilgisi.',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 109,
    "text": "Gelen veride binary alan ('${binaryPropertyName}') bulunamadı.",
    "context": "throw new Error(`Gelen veride binary alan ('${binaryPropertyName}') bulunamadı.`);"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 122,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 132,
    "text": "API yanıtından geçerli bir Job ID alınamadı.",
    "context": "throw new Error('API yanıtından geçerli bir Job ID alınamadı.');"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 149,
    "text": "Doğrulama işi başarısız oldu: ${jobStatusResponse.error}",
    "context": "throw new Error(`Doğrulama işi başarısız oldu: ${jobStatusResponse.error}`);"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 154,
    "text": "İş zaman aşımına uğradı.",
    "context": "throw new Error('İş zaman aşımına uğradı.');"
  },
  {
    "file": "n8n-nodes-videokit:nodes:VideoKit:VideoKit.node.js",
    "line": 172,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 8,
    "text": "Expected an array in ${reportPath}",
    "context": "throw new Error(`Expected an array in ${reportPath}`);"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 29,
    "text": "Failed to parse JSON from ${filePath}: ${error.message}",
    "context": "throw new Error(`Failed to parse JSON from ${filePath}: ${error.message}`);"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 34,
    "text": "No locale JSON files found.",
    "context": "throw new Error('No locale JSON files found.');"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 78,
    "text": "${(ratio * 100).toFixed(2)}%",
    "context": "return `${(ratio * 100).toFixed(2)}%`;"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 90,
    "text": "${JSON.stringify(jsonReport, null, 2)}\\n",
    "context": "await fs.writeFile(outputJsonPath, `${JSON.stringify(jsonReport, null, 2)}\\n`, 'utf8');"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 93,
    "text": "# i18n Coverage Report",
    "context": "lines.push('# i18n Coverage Report');"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 95,
    "text": "Total used keys: ${usedKeyCount}",
    "context": "lines.push(`Total used keys: ${usedKeyCount}`);"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 97,
    "text": "| Locale | Coverage | Missing | Unused | Total keys |",
    "context": "lines.push('| Locale | Coverage | Missing | Unused | Total keys |');"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 101,
    "text": "| ${stat.locale} | ${formatPercentage(stat.coverageRatio)} | ${stat.missingCount} | ${stat.unusedCount} | ${stat.totalKeys} |",
    "context": "`| ${stat.locale} | ${formatPercentage(stat.coverageRatio)} | ${stat.missingCount} | ${stat.unusedCount} | ${stat.totalKeys} |`,"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 105,
    "text": "## Orphan used keys",
    "context": "lines.push('## Orphan used keys');"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 108,
    "text": "- None",
    "context": "lines.push('- None');"
  },
  {
    "file": "scripts/generate-i18n-coverage.mjs",
    "line": 111,
    "text": "- ${key}",
    "context": "lines.push(`- ${key}`);"
  },
  {
    "file": "seed-db.js",
    "line": 10,
    "text": "Veritabanı hazırlık betiği çalışıyor...",
    "context": "console.log(`Veritabanı hazırlık betiği çalışıyor...`);"
  },
  {
    "file": "seed-db.js",
    "line": 11,
    "text": "Sandbox",
    "context": "console.log(`Ortam: ${isSandbox ? 'Sandbox' : 'Production'}`);"
  },
  {
    "file": "seed-db.js",
    "line": 11,
    "text": "Production",
    "context": "console.log(`Ortam: ${isSandbox ? 'Sandbox' : 'Production'}`);"
  },
  {
    "file": "seed-db.js",
    "line": 11,
    "text": "Ortam: ${isSandbox ? 'Sandbox' : 'Production'}",
    "context": "console.log(`Ortam: ${isSandbox ? 'Sandbox' : 'Production'}`);"
  },
  {
    "file": "seed-db.js",
    "line": 12,
    "text": "Redis Adresi: ${redisUrl}",
    "context": "console.log(`Redis Adresi: ${redisUrl}`);"
  },
  {
    "file": "seed-db.js",
    "line": 17,
    "text": "Free Tier",
    "context": "name: 'Free Tier',"
  },
  {
    "file": "seed-db.js",
    "line": 23,
    "text": "Pro Tier",
    "context": "name: 'Pro Tier',"
  },
  {
    "file": "seed-db.js",
    "line": 29,
    "text": "Pay as you go",
    "context": "name: 'Pay as you go',"
  },
  {
    "file": "seed-db.js",
    "line": 35,
    "text": "Trial Version",
    "context": "name: 'Trial Version',"
  },
  {
    "file": "seed-db.js",
    "line": 46,
    "text": "Organization A (Pro Plan)",
    "context": "name: 'Organization A (Pro Plan)',"
  },
  {
    "file": "seed-db.js",
    "line": 47,
    "text": "PRO_PLAN_KEY",
    "context": "apiKey: 'PRO_PLAN_KEY',"
  },
  {
    "file": "seed-db.js",
    "line": 52,
    "text": "Organization B (Pay as you go)",
    "context": "name: 'Organization B (Pay as you go)',"
  },
  {
    "file": "seed-db.js",
    "line": 53,
    "text": "PAYG_PLAN_KEY",
    "context": "apiKey: 'PAYG_PLAN_KEY',"
  },
  {
    "file": "seed-db.js",
    "line": 58,
    "text": "Test User (Free Plan)",
    "context": "name: 'Test User (Free Plan)',"
  },
  {
    "file": "seed-db.js",
    "line": 59,
    "text": "FREE_PLAN_KEY",
    "context": "apiKey: 'FREE_PLAN_KEY',"
  },
  {
    "file": "seed-db.js",
    "line": 64,
    "text": "Tester (Kredisi Biten)",
    "context": "name: 'Tester (Kredisi Biten)',"
  },
  {
    "file": "seed-db.js",
    "line": 65,
    "text": "PAYG_NO_CREDITS_KEY",
    "context": "apiKey: 'PAYG_NO_CREDITS_KEY',"
  },
  {
    "file": "seed-db.js",
    "line": 71,
    "text": "Tester (Kotası Dolmak Üzere)",
    "context": "name: 'Tester (Kotası Dolmak Üzere)',"
  },
  {
    "file": "seed-db.js",
    "line": 72,
    "text": "PRO_ALMOST_FULL_KEY",
    "context": "apiKey: 'PRO_ALMOST_FULL_KEY',"
  },
  {
    "file": "seed-db.js",
    "line": 80,
    "text": "Redis bağlantısı kuruldu. Veritabanı temizleniyor...",
    "context": "console.log('Redis bağlantısı kuruldu. Veritabanı temizleniyor...');"
  },
  {
    "file": "seed-db.js",
    "line": 83,
    "text": "Veritabanı temizlendi. Yeni veriler ekleniyor...",
    "context": "console.log('Veritabanı temizlendi. Yeni veriler ekleniyor...');"
  },
  {
    "file": "seed-db.js",
    "line": 103,
    "text": "${date.getUTCFullYear()}-${String(date.getUTCMonth() + 1).padStart(2, '0')}",
    "context": "const monthKey = `${date.getUTCFullYear()}-${String(date.getUTCMonth() + 1).padStart(2, '0')}`;"
  },
  {
    "file": "seed-db.js",
    "line": 108,
    "text": "Örnek marka ayarları ekleniyor...",
    "context": "console.log('Örnek marka ayarları ekleniyor...');"
  },
  {
    "file": "seed-db.js",
    "line": 121,
    "text": "Sandbox",
    "context": "console.log(`✅ Veritabanına örnek kiracı verileri (${isSandbox ? 'Sandbox' : 'Production'}) başarıyla eklendi.`);"
  },
  {
    "file": "seed-db.js",
    "line": 121,
    "text": "Production",
    "context": "console.log(`✅ Veritabanına örnek kiracı verileri (${isSandbox ? 'Sandbox' : 'Production'}) başarıyla eklendi.`);"
  },
  {
    "file": "seed-db.js",
    "line": 121,
    "text": "✅ Veritabanına örnek kiracı verileri (${isSandbox ? 'Sandbox' : 'Production'}) başarıyla eklendi.",
    "context": "console.log(`✅ Veritabanına örnek kiracı verileri (${isSandbox ? 'Sandbox' : 'Production'}) başarıyla eklendi.`);"
  },
  {
    "file": "seed-db.js",
    "line": 122,
    "text": "Örnek API Anahtarları:",
    "context": "console.log('Örnek API Anahtarları:');"
  },
  {
    "file": "seed-db.js",
    "line": 123,
    "text": "- ${t.name}: ${keyPrefix}${t.apiKey}",
    "context": "tenants.forEach(t => console.log(`  - ${t.name}: ${keyPrefix}${t.apiKey}`));"
  },
  {
    "file": "server.mjs",
    "line": 42,
    "text": "[tracing] disabled:",
    "context": "console.warn('[tracing] disabled:', e?.message || e)"
  },
  {
    "file": "server.mjs",
    "line": 50,
    "text": "C2PA devre dışı (C2PA_ENABLED=false).",
    "context": "console.warn('C2PA devre dışı (C2PA_ENABLED=false).');"
  },
  {
    "file": "server.mjs",
    "line": 85,
    "text": "✅ PostgreSQL veritabanına başarıyla bağlanıldı.",
    "context": "logger.info('✅ PostgreSQL veritabanına başarıyla bağlanıldı.');"
  },
  {
    "file": "server.mjs",
    "line": 88,
    "text": "PostgreSQL veritabanına bağlanılamadı. Lütfen yapılandırmayı kontrol edin.",
    "context": "logger.error({ err }, 'PostgreSQL veritabanına bağlanılamadı. Lütfen yapılandırmayı kontrol edin.');"
  },
  {
    "file": "server.mjs",
    "line": 96,
    "text": "Redis bağlantı hatası",
    "context": "redisConnection.on('error', (err) => logger.error({ err }, 'Redis bağlantı hatası'));"
  },
  {
    "file": "server.mjs",
    "line": 125,
    "text": "HTTP isteklerinin milisaniye cinsinden süresi.",
    "context": "help: 'HTTP isteklerinin milisaniye cinsinden süresi.',"
  },
  {
    "file": "server.mjs",
    "line": 132,
    "text": "HTTP istekleri toplam sayısı.",
    "context": "help: 'HTTP istekleri toplam sayısı.',"
  },
  {
    "file": "server.mjs",
    "line": 138,
    "text": "HTTP hatalarının toplam sayısı.",
    "context": "help: 'HTTP hatalarının toplam sayısı.',"
  },
  {
    "file": "server.mjs",
    "line": 199,
    "text": "UNKNOWN",
    "context": "const method = (req.method || 'UNKNOWN').toUpperCase();"
  },
  {
    "file": "server.mjs",
    "line": 242,
    "text": "/readyz kontrolü başarısız: Redis hazır değil.",
    "context": "req.log.warn({ redisStatus }, '/readyz kontrolü başarısız: Redis hazır değil.');"
  },
  {
    "file": "server.mjs",
    "line": 243,
    "text": "failed (status: ${redisStatus})",
    "context": "res.status(503).json({ status: 'unavailable', checks: { redis: `failed (status: ${redisStatus})`, postgres: 'ok' } });"
  },
  {
    "file": "server.mjs",
    "line": 246,
    "text": "/readyz kontrolü sırasında istisna oluştu.",
    "context": "req.log.error({ err: error }, '/readyz kontrolü sırasında istisna oluştu.');"
  },
  {
    "file": "server.mjs",
    "line": 251,
    "text": "failed (status: ${redisStatus})",
    "context": "redis: redisStatus === 'ready' ? 'ok' : `failed (status: ${redisStatus})`,"
  },
  {
    "file": "server.mjs",
    "line": 259,
    "text": "Content-Type",
    "context": "res.set('Content-Type', promClient.register.contentType);"
  },
  {
    "file": "server.mjs",
    "line": 303,
    "text": "[CORS] Engellenen origin",
    "context": "logger.warn({ origin }, '[CORS] Engellenen origin');"
  },
  {
    "file": "server.mjs",
    "line": 307,
    "text": "Content-Type",
    "context": "allowedHeaders: ['Content-Type', 'Authorization', 'X-API-Key', 'X-Requested-With', 'Idempotency-Key'],"
  },
  {
    "file": "server.mjs",
    "line": 307,
    "text": "Authorization",
    "context": "allowedHeaders: ['Content-Type', 'Authorization', 'X-API-Key', 'X-Requested-With', 'Idempotency-Key'],"
  },
  {
    "file": "server.mjs",
    "line": 307,
    "text": "X-API-Key",
    "context": "allowedHeaders: ['Content-Type', 'Authorization', 'X-API-Key', 'X-Requested-With', 'Idempotency-Key'],"
  },
  {
    "file": "server.mjs",
    "line": 307,
    "text": "X-Requested-With",
    "context": "allowedHeaders: ['Content-Type', 'Authorization', 'X-API-Key', 'X-Requested-With', 'Idempotency-Key'],"
  },
  {
    "file": "server.mjs",
    "line": 307,
    "text": "Idempotency-Key",
    "context": "allowedHeaders: ['Content-Type', 'Authorization', 'X-API-Key', 'X-Requested-With', 'Idempotency-Key'],"
  },
  {
    "file": "server.mjs",
    "line": 355,
    "text": "İzin verilmeyen dosya türü. Sadece JPEG, PNG, SVG geçerlidir.",
    "context": "cb(new Error('İzin verilmeyen dosya türü. Sadece JPEG, PNG, SVG geçerlidir.'));"
  },
  {
    "file": "server.mjs",
    "line": 367,
    "text": "[WebSocket] Bağlantı reddedildi: batchId eksik.",
    "context": "logger.warn('[WebSocket] Bağlantı reddedildi: batchId eksik.');"
  },
  {
    "file": "server.mjs",
    "line": 371,
    "text": "[WebSocket] İstemci bağlandı.",
    "context": "logger.info({ batchId }, `[WebSocket] İstemci bağlandı.`);"
  },
  {
    "file": "server.mjs",
    "line": 374,
    "text": "[WebSocket] İstemci bağlantısı kesildi.",
    "context": "logger.info({ batchId }, `[WebSocket] İstemci bağlantısı kesildi.`);"
  },
  {
    "file": "server.mjs",
    "line": 378,
    "text": "[WebSocket] Hata.",
    "context": "logger.error({ batchId, err: error }, `[WebSocket] Hata.`);"
  },
  {
    "file": "server.mjs",
    "line": 385,
    "text": "Redis Pub/Sub kanalına abone olunamadı:",
    "context": "logger.error({ err }, 'Redis Pub/Sub kanalına abone olunamadı:');"
  },
  {
    "file": "server.mjs",
    "line": 387,
    "text": "✅ Redis kanalı dinleniyor: ${JOB_UPDATES_CHANNEL}",
    "context": "logger.info(`✅ Redis kanalı dinleniyor: ${JOB_UPDATES_CHANNEL}`);"
  },
  {
    "file": "server.mjs",
    "line": 398,
    "text": "[Pub/Sub] ${batchId} için iş güncellemesi gönderiliyor (Job: ${jobId})",
    "context": "logger.info({ batchId, jobId }, `[Pub/Sub] ${batchId} için iş güncellemesi gönderiliyor (Job: ${jobId})`);"
  },
  {
    "file": "server.mjs",
    "line": 402,
    "text": "[Pub/Sub] Gelen mesaj işlenirken hata oluştu:",
    "context": "logger.error({ err: e }, '[Pub/Sub] Gelen mesaj işlenirken hata oluştu:');"
  },
  {
    "file": "server.mjs",
    "line": 409,
    "text": "Free Tier",
    "context": "free: { name: 'Free Tier', rateLimitPerMinute: 10, monthlyQuota: null, apiKeyLimit: 1 },"
  },
  {
    "file": "server.mjs",
    "line": 410,
    "text": "Pro Tier",
    "context": "pro: { name: 'Pro Tier', rateLimitPerMinute: 100, monthlyQuota: 1000, apiKeyLimit: 5 },"
  },
  {
    "file": "server.mjs",
    "line": 411,
    "text": "Pay as you go",
    "context": "'pay-as-you-go': { name: 'Pay as you go', rateLimitPerMinute: 120, monthlyQuota: null, apiKeyLimit: 10 },"
  },
  {
    "file": "server.mjs",
    "line": 412,
    "text": "Trial Version",
    "context": "trial: { name: 'Trial Version', rateLimitPerMinute: 20, monthlyQuota: 500, apiKeyLimit: 2 },"
  },
  {
    "file": "server.mjs",
    "line": 491,
    "text": "${apiKey.slice(0, prefixLength)}...${apiKey.slice(apiKey.length - suffixLength)}",
    "context": "return `${apiKey.slice(0, prefixLength)}...${apiKey.slice(apiKey.length - suffixLength)}`;"
  },
  {
    "file": "server.mjs",
    "line": 499,
    "text": "ENOENT",
    "context": "if (error.code !== 'ENOENT') {"
  },
  {
    "file": "server.mjs",
    "line": 500,
    "text": "[Upload] Geçici dosya silinemedi.",
    "context": "logger.warn({ err: error, path: file.path }, '[Upload] Geçici dosya silinemedi.');"
  },
  {
    "file": "server.mjs",
    "line": 507,
    "text": "Uploaded file metadata missing.",
    "context": "throw new Error('Uploaded file metadata missing.');"
  },
  {
    "file": "server.mjs",
    "line": 515,
    "text": "Uploaded file is not accessible.",
    "context": "throw new Error('Uploaded file is not accessible.');"
  },
  {
    "file": "server.mjs",
    "line": 531,
    "text": "[Upload] Dosya başlangıcı okunamadı.",
    "context": "logger.warn({ err: error, path: file.path }, '[Upload] Dosya başlangıcı okunamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 571,
    "text": "POST",
    "context": "if (req.method !== 'POST') {"
  },
  {
    "file": "server.mjs",
    "line": 582,
    "text": "[Idempotency] Önbellekten yanıt veriliyor.",
    "context": "req.log.info({ idempotencyKey }, `[Idempotency] Önbellekten yanıt veriliyor.`);"
  },
  {
    "file": "server.mjs",
    "line": 588,
    "text": "EX",
    "context": "const lock = await redisConnection.set(redisKey, JSON.stringify({ status: 'in_progress' }), 'EX', 300, 'NX');"
  },
  {
    "file": "server.mjs",
    "line": 588,
    "text": "NX",
    "context": "const lock = await redisConnection.set(redisKey, JSON.stringify({ status: 'in_progress' }), 'EX', 300, 'NX');"
  },
  {
    "file": "server.mjs",
    "line": 590,
    "text": "[Idempotency] Çakışma tespit edildi.",
    "context": "req.log.warn({ idempotencyKey }, `[Idempotency] Çakışma tespit edildi.`);"
  },
  {
    "file": "server.mjs",
    "line": 591,
    "text": "IDEMPOTENCY_CONFLICT",
    "context": "return sendError(res, req, 409, 'IDEMPOTENCY_CONFLICT', t('error_idempotency_conflict', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 604,
    "text": "EX",
    "context": "redisConnection.set(redisKey, JSON.stringify(cachePayload), 'EX', 86400);"
  },
  {
    "file": "server.mjs",
    "line": 605,
    "text": "[Idempotency] Sonuç önbelleğe alındı.",
    "context": "req.log.info({ idempotencyKey }, `[Idempotency] Sonuç önbelleğe alındı.`);"
  },
  {
    "file": "server.mjs",
    "line": 613,
    "text": "[Idempotency] Redis hatası:",
    "context": "req.log.error({ err: error, idempotencyKey }, '[Idempotency] Redis hatası:');"
  },
  {
    "file": "server.mjs",
    "line": 630,
    "text": "FILE_NOT_UPLOADED",
    "context": "return sendError(res, req, 400, 'FILE_NOT_UPLOADED', t('error_file_not_uploaded', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 633,
    "text": "[/verify] İstek alındı",
    "context": "req.log.info({ file: req.file.originalname, size: req.file.size, webhook: !!webhookUrl }, `[/verify] İstek alındı`);"
  },
  {
    "file": "server.mjs",
    "line": 646,
    "text": "[/verify] İş kuyruğa eklendi.",
    "context": "req.log.info({ jobId: job.id }, `[/verify] İş kuyruğa eklendi.`);"
  },
  {
    "file": "server.mjs",
    "line": 649,
    "text": "[/verify] İş kuyruğa eklenirken hata oluştu",
    "context": "req.log.error({ err: error }, '[/verify] İş kuyruğa eklenirken hata oluştu');"
  },
  {
    "file": "server.mjs",
    "line": 650,
    "text": "JOB_CREATION_FAILED",
    "context": "return sendError(res, req, 500, 'JOB_CREATION_FAILED', t('error_job_creation_failed', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 663,
    "text": "JOB_NOT_FOUND",
    "context": "return sendError(res, req, 404, 'JOB_NOT_FOUND', t('error_job_not_found', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 667,
    "text": "[AUTH] Yetkisiz iş erişimi denemesi.",
    "context": "req.log.warn({ tenantId: req.tenant.id, jobOwner: job.data.tenantId, jobId }, `[AUTH] Yetkisiz iş erişimi denemesi.`);"
  },
  {
    "file": "server.mjs",
    "line": 668,
    "text": "FORBIDDEN_JOB_ACCESS",
    "context": "return sendError(res, req, 403, 'FORBIDDEN_JOB_ACCESS', t('error_forbidden_job_access', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 683,
    "text": "FILE_NOT_UPLOADED",
    "context": "return sendError(res, req, 400, 'FILE_NOT_UPLOADED', t('error_file_not_uploaded', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 685,
    "text": "VideoKit API v1.0",
    "context": "const { author, action = 'c2pa.created', agent = 'VideoKit API v1.0', captureOnly } = req.body;"
  },
  {
    "file": "server.mjs",
    "line": 687,
    "text": "AUTHOR_MISSING",
    "context": "return sendError(res, req, 400, 'AUTHOR_MISSING', t('error_author_missing', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 698,
    "text": "PolicyViolationError: ${errorMessage}",
    "context": "status: 'failed', result: `PolicyViolationError: ${errorMessage}`"
  },
  {
    "file": "server.mjs",
    "line": 700,
    "text": "POLICY_VIOLATION",
    "context": "return sendError(res, req, 422, 'POLICY_VIOLATION', errorMessage);"
  },
  {
    "file": "server.mjs",
    "line": 704,
    "text": "[/stamp] İstek alındı",
    "context": "req.log.info({ file: req.file.originalname, author }, `[/stamp] İstek alındı`);"
  },
  {
    "file": "server.mjs",
    "line": 714,
    "text": "Person",
    "context": "{ label: 'stds.schema-org.CreativeWork', data: { author: [{ '@type': 'Person', name: author }] } },"
  },
  {
    "file": "server.mjs",
    "line": 721,
    "text": "${baseName || 'manifest'}.c2pa",
    "context": "const sidecarName = `${baseName || 'manifest'}.c2pa`;"
  },
  {
    "file": "server.mjs",
    "line": 724,
    "text": "Manifest oluşturuldu: ${sidecarName}",
    "context": "status: 'success', result: `Manifest oluşturuldu: ${sidecarName}`"
  },
  {
    "file": "server.mjs",
    "line": 726,
    "text": "[/stamp] Manifest başarıyla oluşturuldu",
    "context": "req.log.info({ sidecarName }, `[/stamp] Manifest başarıyla oluşturuldu`);"
  },
  {
    "file": "server.mjs",
    "line": 727,
    "text": "Content-Disposition",
    "context": "res.setHeader('Content-Disposition', `attachment; filename=${sidecarName}`);"
  },
  {
    "file": "server.mjs",
    "line": 727,
    "text": "attachment; filename=${sidecarName}",
    "context": "res.setHeader('Content-Disposition', `attachment; filename=${sidecarName}`);"
  },
  {
    "file": "server.mjs",
    "line": 728,
    "text": "Content-Type",
    "context": "res.setHeader('Content-Type', 'application/c2pa');"
  },
  {
    "file": "server.mjs",
    "line": 733,
    "text": "[/stamp] Politika ihlali: ${message}",
    "context": "req.log.warn({ err: error }, `[/stamp] Politika ihlali: ${message}`);"
  },
  {
    "file": "server.mjs",
    "line": 734,
    "text": "PolicyViolationError: ${message}",
    "context": "await audit.append({ type: 'stamp', customerId: req.tenant.id, input: { fileName: req.file.originalname }, status: 'failed', result: `PolicyViolationError: ${message}` });"
  },
  {
    "file": "server.mjs",
    "line": 735,
    "text": "POLICY_VIOLATION",
    "context": "return sendError(res, req, 403, 'POLICY_VIOLATION', message);"
  },
  {
    "file": "server.mjs",
    "line": 738,
    "text": "ENOENT",
    "context": "if (error.code === 'ENOENT') {"
  },
  {
    "file": "server.mjs",
    "line": 739,
    "text": "[/stamp] Hata: İmzalama için gerekli anahtar/sertifika dosyası bulunamadı.",
    "context": "req.log.error({ err: error }, '[/stamp] Hata: İmzalama için gerekli anahtar/sertifika dosyası bulunamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 740,
    "text": "SERVER_CONFIG_KEYS_MISSING",
    "context": "return sendError(res, req, 500, 'SERVER_CONFIG_KEYS_MISSING', t('error_server_config_keys_missing', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 742,
    "text": "[/stamp] Manifest oluşturulurken hata oluştu",
    "context": "req.log.error({ err: error }, '[/stamp] Manifest oluşturulurken hata oluştu');"
  },
  {
    "file": "server.mjs",
    "line": 743,
    "text": "SERVER_ERROR",
    "context": "return sendError(res, req, 500, 'SERVER_ERROR', t('error_server_error', req.lang), { cause: error.message });"
  },
  {
    "file": "server.mjs",
    "line": 752,
    "text": "FILE_NOT_UPLOADED",
    "context": "return sendError(res, req, 400, 'FILE_NOT_UPLOADED', t('error_file_not_uploaded', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 756,
    "text": "BATCH_METADATA_REQUIRED",
    "context": "return sendError(res, req, 400, 'BATCH_METADATA_REQUIRED', 'batchId ve fileId gereklidir.');"
  },
  {
    "file": "server.mjs",
    "line": 756,
    "text": "batchId ve fileId gereklidir.",
    "context": "return sendError(res, req, 400, 'BATCH_METADATA_REQUIRED', 'batchId ve fileId gereklidir.');"
  },
  {
    "file": "server.mjs",
    "line": 772,
    "text": "[/batch/upload] İş kuyruğa eklenirken hata oluştu",
    "context": "req.log.error({ err: error }, '[/batch/upload] İş kuyruğa eklenirken hata oluştu');"
  },
  {
    "file": "server.mjs",
    "line": 773,
    "text": "JOB_CREATION_FAILED",
    "context": "return sendError(res, req, 500, 'JOB_CREATION_FAILED', t('error_job_creation_failed', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 785,
    "text": "BATCH_JOB_NOT_FOUND",
    "context": "return sendError(res, req, 404, 'BATCH_JOB_NOT_FOUND', 'Bu batch için iş bulunamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 785,
    "text": "Bu batch için iş bulunamadı.",
    "context": "return sendError(res, req, 404, 'BATCH_JOB_NOT_FOUND', 'Bu batch için iş bulunamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 789,
    "text": "BATCH_FORBIDDEN",
    "context": "return sendError(res, req, 403, 'BATCH_FORBIDDEN', 'Bu kaynağa erişim yetkiniz yok.');"
  },
  {
    "file": "server.mjs",
    "line": 789,
    "text": "Bu kaynağa erişim yetkiniz yok.",
    "context": "return sendError(res, req, 403, 'BATCH_FORBIDDEN', 'Bu kaynağa erişim yetkiniz yok.');"
  },
  {
    "file": "server.mjs",
    "line": 804,
    "text": "BATCH_REPORTS_NOT_READY",
    "context": "return sendError(res, req, 404, 'BATCH_REPORTS_NOT_READY', 'İndirilecek tamamlanmış rapor bulunamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 804,
    "text": "İndirilecek tamamlanmış rapor bulunamadı.",
    "context": "return sendError(res, req, 404, 'BATCH_REPORTS_NOT_READY', 'İndirilecek tamamlanmış rapor bulunamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 807,
    "text": "Content-Disposition",
    "context": "res.setHeader('Content-Disposition', `attachment; filename=videokit_batch_${batchId}.zip`);"
  },
  {
    "file": "server.mjs",
    "line": 807,
    "text": "attachment; filename=videokit_batch_${batchId}.zip",
    "context": "res.setHeader('Content-Disposition', `attachment; filename=videokit_batch_${batchId}.zip`);"
  },
  {
    "file": "server.mjs",
    "line": 808,
    "text": "Content-Type",
    "context": "res.setHeader('Content-Type', 'application/zip');"
  },
  {
    "file": "server.mjs",
    "line": 816,
    "text": "usage:${tenantId}:${date.getUTCFullYear()}-${String(date.getUTCMonth() + 1).padStart(2, '0')}",
    "context": "const monthKey = `usage:${tenantId}:${date.getUTCFullYear()}-${String(date.getUTCMonth() + 1).padStart(2, '0')}`;"
  },
  {
    "file": "server.mjs",
    "line": 828,
    "text": "PLAN_NOT_QUOTA_BASED",
    "context": "'PLAN_NOT_QUOTA_BASED',"
  },
  {
    "file": "server.mjs",
    "line": 829,
    "text": "This endpoint is for quota-based plans only. Check /billing for credit info.",
    "context": "'This endpoint is for quota-based plans only. Check /billing for credit info.'"
  },
  {
    "file": "server.mjs",
    "line": 833,
    "text": "X-Quota-Remaining",
    "context": "const remaining = parseInt(res.get('X-Quota-Remaining') || '0', 10);"
  },
  {
    "file": "server.mjs",
    "line": 843,
    "text": "X-Quota-Remaining",
    "context": "const remaining = parseInt(res.get('X-Quota-Remaining') || '0', 10);"
  },
  {
    "file": "server.mjs",
    "line": 846,
    "text": "X-Credits-Remaining",
    "context": "const remainingCredits = parseInt(res.get('X-Credits-Remaining') || '0', 10);"
  },
  {
    "file": "server.mjs",
    "line": 859,
    "text": "TENANT_REQUIRED",
    "context": "return sendError(res, req, 400, 'TENANT_REQUIRED', 'Tenant identifier is required.');"
  },
  {
    "file": "server.mjs",
    "line": 859,
    "text": "Tenant identifier is required.",
    "context": "return sendError(res, req, 400, 'TENANT_REQUIRED', 'Tenant identifier is required.');"
  },
  {
    "file": "server.mjs",
    "line": 863,
    "text": "TENANT_MISMATCH",
    "context": "return sendError(res, req, 403, 'TENANT_MISMATCH', 'You are not allowed to access analytics for another tenant.');"
  },
  {
    "file": "server.mjs",
    "line": 863,
    "text": "You are not allowed to access analytics for another tenant.",
    "context": "return sendError(res, req, 403, 'TENANT_MISMATCH', 'You are not allowed to access analytics for another tenant.');"
  },
  {
    "file": "server.mjs",
    "line": 876,
    "text": "INVALID_GROUP_BY",
    "context": "return sendError(res, req, 400, 'INVALID_GROUP_BY', 'groupBy must be one of hour or day.');"
  },
  {
    "file": "server.mjs",
    "line": 876,
    "text": "groupBy must be one of hour or day.",
    "context": "return sendError(res, req, 400, 'INVALID_GROUP_BY', 'groupBy must be one of hour or day.');"
  },
  {
    "file": "server.mjs",
    "line": 882,
    "text": "INVALID_TO",
    "context": "return sendError(res, req, 400, 'INVALID_TO', 'The provided \"to\" date is invalid.');"
  },
  {
    "file": "server.mjs",
    "line": 882,
    "text": "The provided \"to\" date is invalid.",
    "context": "return sendError(res, req, 400, 'INVALID_TO', 'The provided \"to\" date is invalid.');"
  },
  {
    "file": "server.mjs",
    "line": 888,
    "text": "INVALID_FROM",
    "context": "return sendError(res, req, 400, 'INVALID_FROM', 'The provided \"from\" date is invalid.');"
  },
  {
    "file": "server.mjs",
    "line": 888,
    "text": "The provided \"from\" date is invalid.",
    "context": "return sendError(res, req, 400, 'INVALID_FROM', 'The provided \"from\" date is invalid.');"
  },
  {
    "file": "server.mjs",
    "line": 892,
    "text": "INVALID_RANGE",
    "context": "return sendError(res, req, 400, 'INVALID_RANGE', 'The \"from\" date must be earlier than \"to\".');"
  },
  {
    "file": "server.mjs",
    "line": 892,
    "text": "The \"from\" date must be earlier than \"to\".",
    "context": "return sendError(res, req, 400, 'INVALID_RANGE', 'The \"from\" date must be earlier than \"to\".');"
  },
  {
    "file": "server.mjs",
    "line": 979,
    "text": "Endpoint normalization failed, using raw value.",
    "context": "req.log?.warn?.({ err: error, endpoint: rawEndpoint }, 'Endpoint normalization failed, using raw value.');"
  },
  {
    "file": "server.mjs",
    "line": 1001,
    "text": "[/analytics] Hata:",
    "context": "req.log.error({ err: error }, `[/analytics] Hata:`);"
  },
  {
    "file": "server.mjs",
    "line": 1002,
    "text": "ANALYTICS_FETCH_FAILED",
    "context": "return sendError(res, req, 500, 'ANALYTICS_FETCH_FAILED', 'Analitik verileri alınamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 1002,
    "text": "Analitik verileri alınamadı.",
    "context": "return sendError(res, req, 500, 'ANALYTICS_FETCH_FAILED', 'Analitik verileri alınamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 1012,
    "text": "SELECT id, name, plan_id, created_at, updated_at FROM tenants ORDER BY created_at DESC",
    "context": "`SELECT id, name, plan_id, created_at, updated_at FROM tenants ORDER BY created_at DESC`"
  },
  {
    "file": "server.mjs",
    "line": 1025,
    "text": "[Mgmt] Tenant listesi alınamadı.",
    "context": "req.log?.error?.({ err: error }, '[Mgmt] Tenant listesi alınamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 1026,
    "text": "TENANT_LIST_FAILED",
    "context": "return sendError(res, req, 500, 'TENANT_LIST_FAILED', 'Tenant listesi getirilemedi.');"
  },
  {
    "file": "server.mjs",
    "line": 1026,
    "text": "Tenant listesi getirilemedi.",
    "context": "return sendError(res, req, 500, 'TENANT_LIST_FAILED', 'Tenant listesi getirilemedi.');"
  },
  {
    "file": "server.mjs",
    "line": 1033,
    "text": "Not Implemented: Registration is handled via /auth/register",
    "context": "res.status(501).json({ message: \"Not Implemented: Registration is handled via /auth/register\" });"
  },
  {
    "file": "server.mjs",
    "line": 1040,
    "text": "[Mgmt] Tenant context missing while listing API keys.",
    "context": "req.log.warn('[Mgmt] Tenant context missing while listing API keys.');"
  },
  {
    "file": "server.mjs",
    "line": 1041,
    "text": "MANAGEMENT_UNAUTHORIZED",
    "context": "return sendError(res, req, 401, 'MANAGEMENT_UNAUTHORIZED', t('error_management_unauthorized', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 1049,
    "text": "[Mgmt] API key listesi alınamadı.",
    "context": "req.log.error({ err: error, tenantId }, '[Mgmt] API key listesi alınamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 1050,
    "text": "API_KEYS_FETCH_FAILED",
    "context": "return sendError(res, req, 500, 'API_KEYS_FETCH_FAILED', t('error_api_keys_fetch_failed', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 1058,
    "text": "[Mgmt] Tenant context missing while creating API key.",
    "context": "req.log.warn('[Mgmt] Tenant context missing while creating API key.');"
  },
  {
    "file": "server.mjs",
    "line": 1059,
    "text": "MANAGEMENT_UNAUTHORIZED",
    "context": "return sendError(res, req, 401, 'MANAGEMENT_UNAUTHORIZED', t('error_management_unauthorized', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 1073,
    "text": "API_KEY_LIMIT_REACHED",
    "context": "'API_KEY_LIMIT_REACHED',"
  },
  {
    "file": "server.mjs",
    "line": 1083,
    "text": "te yoksa, PostgreSQL",
    "context": "// Eğer Redis'te yoksa, PostgreSQL'den alıp Redis'e yazabiliriz."
  },
  {
    "file": "server.mjs",
    "line": 1084,
    "text": "SELECT plan FROM tenants WHERE id = $1",
    "context": "const tenantResult = await dbPool.query('SELECT plan FROM tenants WHERE id = $1', [tenantId]);"
  },
  {
    "file": "server.mjs",
    "line": 1086,
    "text": "TENANT_NOT_FOUND",
    "context": "return sendError(res, req, 404, 'TENANT_NOT_FOUND', 'Tenant not found.');"
  },
  {
    "file": "server.mjs",
    "line": 1086,
    "text": "Tenant not found.",
    "context": "return sendError(res, req, 404, 'TENANT_NOT_FOUND', 'Tenant not found.');"
  },
  {
    "file": "server.mjs",
    "line": 1099,
    "text": "[Mgmt] Kiracı için yeni API anahtarı oluşturuldu.",
    "context": "req.log.info({ tenantId, keyPrefix }, `[Mgmt] Kiracı için yeni API anahtarı oluşturuldu.`);"
  },
  {
    "file": "server.mjs",
    "line": 1102,
    "text": "[Mgmt] Yeni API anahtarı oluşturulamadı.",
    "context": "req.log.error({ err: error, tenantId }, '[Mgmt] Yeni API anahtarı oluşturulamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 1103,
    "text": "API_KEY_GENERATION_FAILED",
    "context": "return sendError(res, req, 500, 'API_KEY_GENERATION_FAILED', t('error_api_key_generation_failed', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 1112,
    "text": "[Mgmt] Tenant context missing while deleting API key.",
    "context": "req.log.warn('[Mgmt] Tenant context missing while deleting API key.');"
  },
  {
    "file": "server.mjs",
    "line": 1113,
    "text": "MANAGEMENT_UNAUTHORIZED",
    "context": "return sendError(res, req, 401, 'MANAGEMENT_UNAUTHORIZED', t('error_management_unauthorized', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 1120,
    "text": "API_KEY_NOT_FOUND",
    "context": "return sendError(res, req, 404, 'API_KEY_NOT_FOUND', 'API key not found.');"
  },
  {
    "file": "server.mjs",
    "line": 1120,
    "text": "API key not found.",
    "context": "return sendError(res, req, 404, 'API_KEY_NOT_FOUND', 'API key not found.');"
  },
  {
    "file": "server.mjs",
    "line": 1127,
    "text": "API_KEY_NOT_FOUND",
    "context": "return sendError(res, req, 404, 'API_KEY_NOT_FOUND', 'API key not found.');"
  },
  {
    "file": "server.mjs",
    "line": 1127,
    "text": "API key not found.",
    "context": "return sendError(res, req, 404, 'API_KEY_NOT_FOUND', 'API key not found.');"
  },
  {
    "file": "server.mjs",
    "line": 1132,
    "text": "[AUTH] Yetkisiz anahtar silme denemesi.",
    "context": "req.log.warn({ loggedInTenantId, keyOwnerTenantId }, `[AUTH] Yetkisiz anahtar silme denemesi.`);"
  },
  {
    "file": "server.mjs",
    "line": 1133,
    "text": "API_KEY_FORBIDDEN",
    "context": "return sendError(res, req, 403, 'API_KEY_FORBIDDEN', 'Forbidden: You can only delete your own API keys.');"
  },
  {
    "file": "server.mjs",
    "line": 1133,
    "text": "Forbidden: You can only delete your own API keys.",
    "context": "return sendError(res, req, 403, 'API_KEY_FORBIDDEN', 'Forbidden: You can only delete your own API keys.');"
  },
  {
    "file": "server.mjs",
    "line": 1140,
    "text": "[Mgmt] API anahtarı silindi.",
    "context": "req.log.info({ apiKey: maskApiKey(apiKey), tenantId: loggedInTenantId }, `[Mgmt] API anahtarı silindi.`);"
  },
  {
    "file": "server.mjs",
    "line": 1147,
    "text": "VideoKit",
    "context": "const deviceVendor = 'VideoKit';"
  },
  {
    "file": "server.mjs",
    "line": 1148,
    "text": "ContentReliabilityPlatform",
    "context": "const deviceProduct = 'ContentReliabilityPlatform';"
  },
  {
    "file": "server.mjs",
    "line": 1152,
    "text": "VideoKit Operation: ${entry.type.charAt(0).toUpperCase() + entry.type.slice(1)} ${entry.status.charAt(0).toUpperCase() + entry.status.slice(1)}",
    "context": "const name = `VideoKit Operation: ${entry.type.charAt(0).toUpperCase() + entry.type.slice(1)} ${entry.status.charAt(0).toUpperCase() + entry.status.slice(1)}`;"
  },
  {
    "file": "server.mjs",
    "line": 1179,
    "text": "CEF:${cefVersion}|${deviceVendor}|${deviceProduct}|${deviceVersion}|${signatureId}|${name}|${severity}|${extString}",
    "context": "return `CEF:${cefVersion}|${deviceVendor}|${deviceProduct}|${deviceVersion}|${signatureId}|${name}|${severity}|${extString}`;"
  },
  {
    "file": "server.mjs",
    "line": 1187,
    "text": "[Mgmt] Denetim logu dışa aktarılıyor.",
    "context": "req.log.info({ format, count: entries.length }, `[Mgmt] Denetim logu dışa aktarılıyor.`);"
  },
  {
    "file": "server.mjs",
    "line": 1190,
    "text": "Content-Disposition",
    "context": "res.setHeader('Content-Disposition', 'attachment; filename=\"videokit-audit.json\"');"
  },
  {
    "file": "server.mjs",
    "line": 1190,
    "text": "attachment; filename=\"videokit-audit.json\"",
    "context": "res.setHeader('Content-Disposition', 'attachment; filename=\"videokit-audit.json\"');"
  },
  {
    "file": "server.mjs",
    "line": 1191,
    "text": "Content-Type",
    "context": "res.setHeader('Content-Type', 'application/json');"
  },
  {
    "file": "server.mjs",
    "line": 1195,
    "text": "Content-Disposition",
    "context": "res.setHeader('Content-Disposition', 'attachment; filename=\"videokit-audit.cef\"');"
  },
  {
    "file": "server.mjs",
    "line": 1195,
    "text": "attachment; filename=\"videokit-audit.cef\"",
    "context": "res.setHeader('Content-Disposition', 'attachment; filename=\"videokit-audit.cef\"');"
  },
  {
    "file": "server.mjs",
    "line": 1196,
    "text": "Content-Type",
    "context": "res.setHeader('Content-Type', 'text/plain');"
  },
  {
    "file": "server.mjs",
    "line": 1203,
    "text": "AUDIT_UNSUPPORTED_FORMAT",
    "context": "'AUDIT_UNSUPPORTED_FORMAT',"
  },
  {
    "file": "server.mjs",
    "line": 1204,
    "text": "Desteklenmeyen format. Sadece \"json\" veya \"cef\" kullanılabilir.",
    "context": "'Desteklenmeyen format. Sadece \"json\" veya \"cef\" kullanılabilir.'"
  },
  {
    "file": "server.mjs",
    "line": 1208,
    "text": "[Mgmt] Denetim logu dışa aktarılırken hata oluştu:",
    "context": "req.log.error({ err: error }, '[Mgmt] Denetim logu dışa aktarılırken hata oluştu:');"
  },
  {
    "file": "server.mjs",
    "line": 1209,
    "text": "AUDIT_EXPORT_FAILED",
    "context": "return sendError(res, req, 500, 'AUDIT_EXPORT_FAILED', 'Denetim logları alınamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 1209,
    "text": "Denetim logları alınamadı.",
    "context": "return sendError(res, req, 500, 'AUDIT_EXPORT_FAILED', 'Denetim logları alınamadı.');"
  },
  {
    "file": "server.mjs",
    "line": 1234,
    "text": "[Mgmt] Yetkisiz marka güncelleme denemesi.",
    "context": "req.log.warn({ tenantId, loggedInTenantId }, '[Mgmt] Yetkisiz marka güncelleme denemesi.');"
  },
  {
    "file": "server.mjs",
    "line": 1235,
    "text": "MANAGEMENT_UNAUTHORIZED",
    "context": "return sendError(res, req, 403, 'MANAGEMENT_UNAUTHORIZED', t('error_management_unauthorized', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 1239,
    "text": "BRANDING_FIELDS_REQUIRED",
    "context": "return sendError(res, req, 400, 'BRANDING_FIELDS_REQUIRED', 'En az bir marka ayarı (primaryColor, backgroundColor) gereklidir.');"
  },
  {
    "file": "server.mjs",
    "line": 1239,
    "text": "En az bir marka ayarı (primaryColor, backgroundColor) gereklidir.",
    "context": "return sendError(res, req, 400, 'BRANDING_FIELDS_REQUIRED', 'En az bir marka ayarı (primaryColor, backgroundColor) gereklidir.');"
  },
  {
    "file": "server.mjs",
    "line": 1247,
    "text": "[Mgmt] Kiracı için marka ayarları güncellendi.",
    "context": "req.log.info({ tenantId }, `[Mgmt] Kiracı için marka ayarları güncellendi.`);"
  },
  {
    "file": "server.mjs",
    "line": 1248,
    "text": "Marka ayarları başarıyla güncellendi.",
    "context": "res.status(200).json({ message: 'Marka ayarları başarıyla güncellendi.' });"
  },
  {
    "file": "server.mjs",
    "line": 1255,
    "text": "[Mgmt] Yetkisiz logo yükleme denemesi.",
    "context": "req.log.warn({ tenantId, loggedInTenantId }, '[Mgmt] Yetkisiz logo yükleme denemesi.');"
  },
  {
    "file": "server.mjs",
    "line": 1256,
    "text": "MANAGEMENT_UNAUTHORIZED",
    "context": "return sendError(res, req, 403, 'MANAGEMENT_UNAUTHORIZED', t('error_management_unauthorized', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 1259,
    "text": "FILE_NOT_UPLOADED",
    "context": "return sendError(res, req, 400, 'FILE_NOT_UPLOADED', t('error_file_not_uploaded', req.lang));"
  },
  {
    "file": "server.mjs",
    "line": 1265,
    "text": "[Mgmt] Kiracı için yeni logo yüklendi.",
    "context": "req.log.info({ tenantId, logoUrl }, `[Mgmt] Kiracı için yeni logo yüklendi.`);"
  },
  {
    "file": "server.mjs",
    "line": 1266,
    "text": "Logo başarıyla yüklendi.",
    "context": "res.status(200).json({ message: 'Logo başarıyla yüklendi.', logoUrl });"
  },
  {
    "file": "server.mjs",
    "line": 1268,
    "text": "LOGO_UPLOAD_ERROR",
    "context": "return sendError(res, req, 400, 'LOGO_UPLOAD_ERROR', error.message);"
  },
  {
    "file": "server.mjs",
    "line": 1273,
    "text": "LIMIT_FILE_SIZE",
    "context": "if (err.code === 'LIMIT_FILE_SIZE') {"
  },
  {
    "file": "server.mjs",
    "line": 1277,
    "text": "Uploaded file exceeds the maximum allowed size.",
    "context": ": 'Uploaded file exceeds the maximum allowed size.';"
  },
  {
    "file": "server.mjs",
    "line": 1278,
    "text": "FILE_TOO_LARGE",
    "context": "return sendError(res, req, 413, 'FILE_TOO_LARGE', message);"
  },
  {
    "file": "server.mjs",
    "line": 1280,
    "text": "UPLOAD_ERROR",
    "context": "return sendError(res, req, 400, 'UPLOAD_ERROR', err.message);"
  },
  {
    "file": "server.mjs",
    "line": 1282,
    "text": "LIMIT_UNEXPECTED_FILE",
    "context": "if (err?.code === 'LIMIT_UNEXPECTED_FILE') {"
  },
  {
    "file": "server.mjs",
    "line": 1283,
    "text": "UNEXPECTED_FILE_FIELD",
    "context": "return sendError(res, req, 400, 'UNEXPECTED_FILE_FIELD', 'Unexpected file field received.');"
  },
  {
    "file": "server.mjs",
    "line": 1283,
    "text": "Unexpected file field received.",
    "context": "return sendError(res, req, 400, 'UNEXPECTED_FILE_FIELD', 'Unexpected file field received.');"
  },
  {
    "file": "server.mjs",
    "line": 1292,
    "text": "INTERNAL_SERVER_ERROR",
    "context": "code: 'INTERNAL_SERVER_ERROR',"
  },
  {
    "file": "server.mjs",
    "line": 1293,
    "text": "Beklenmeyen bir sunucu hatası oluştu.",
    "context": "message: 'Beklenmeyen bir sunucu hatası oluştu.',"
  },
  {
    "file": "server.mjs",
    "line": 1311,
    "text": "[CronJob] Depolama temizlik görevi başlatılıyor...",
    "context": "logger.info('[CronJob] Depolama temizlik görevi başlatılıyor...');"
  },
  {
    "file": "server.mjs",
    "line": 1327,
    "text": "[CronJob] TTL süresi dolan dosya silindi: ${file}",
    "context": "logger.info(`[CronJob] TTL süresi dolan dosya silindi: ${file}`);"
  },
  {
    "file": "server.mjs",
    "line": 1331,
    "text": "[CronJob] Dosya işlenirken hata oluştu.",
    "context": "logger.error({ file: filePath, err: fileError }, `[CronJob] Dosya işlenirken hata oluştu.`);"
  },
  {
    "file": "server.mjs",
    "line": 1334,
    "text": "[CronJob] Depolama temizlik görevi tamamlandı. ${deletedCount} dosya silindi.",
    "context": "logger.info(`[CronJob] Depolama temizlik görevi tamamlandı. ${deletedCount} dosya silindi.`);"
  },
  {
    "file": "server.mjs",
    "line": 1336,
    "text": "ENOENT",
    "context": "if (err.code === 'ENOENT') {"
  },
  {
    "file": "server.mjs",
    "line": 1337,
    "text": "[CronJob] Temizlik atlanıyor: '${UPLOADS_DIR}' klasörü bulunamadı.",
    "context": "logger.warn(`[CronJob] Temizlik atlanıyor: '${UPLOADS_DIR}' klasörü bulunamadı.`);"
  },
  {
    "file": "server.mjs",
    "line": 1339,
    "text": "[CronJob] Depolama temizlik görevi başarısız oldu.",
    "context": "logger.error({ err }, `[CronJob] Depolama temizlik görevi başarısız oldu.`);"
  },
  {
    "file": "server.mjs",
    "line": 1350,
    "text": "SANDBOX",
    "context": "const mode = config.isSandbox ? 'SANDBOX' : 'PRODUCTION';"
  },
  {
    "file": "server.mjs",
    "line": 1350,
    "text": "PRODUCTION",
    "context": "const mode = config.isSandbox ? 'SANDBOX' : 'PRODUCTION';"
  },
  {
    "file": "server.mjs",
    "line": 1351,
    "text": "✅ VideoKit REST API ve WebSocket sunucusu çalışıyor.",
    "context": "logger.info({ port, mode }, `✅ VideoKit REST API ve WebSocket sunucusu çalışıyor.`);"
  },
  {
    "file": "src/core/billing-map.mjs",
    "line": 126,
    "text": "POST",
    "context": "* isBillable('POST', '/verify'); // true"
  },
  {
    "file": "src/core/billing-map.mjs",
    "line": 127,
    "text": "POST",
    "context": "* getBillableWeight('POST', '/verify'); // 1"
  },
  {
    "file": "src/core/billing-map.mjs",
    "line": 129,
    "text": "GET",
    "context": "* isBillable('GET', '/jobs/123'); // false (normalizes to `/jobs/:id`)"
  },
  {
    "file": "src/core/endpoint-normalize.mjs",
    "line": 27,
    "text": "normalizeEndpoint: invalid date value encountered",
    "context": "throw new TypeError('normalizeEndpoint: invalid date value encountered');"
  },
  {
    "file": "src/core/endpoint-normalize.mjs",
    "line": 34,
    "text": "normalizeEndpoint: `path` must be a string.",
    "context": "throw new TypeError('normalizeEndpoint: `path` must be a string.');"
  },
  {
    "file": "src/core/endpoint-normalize.mjs",
    "line": 37,
    "text": "|| rawPath ===",
    "context": "if (rawPath === '' || rawPath === '/') {"
  },
  {
    "file": "src/core/endpoint-normalize.mjs",
    "line": 87,
    "text": "normalizeEndpoint: `matchers` must be functions or RegExp instances.",
    "context": "throw new TypeError('normalizeEndpoint: `matchers` must be functions or RegExp instances.');"
  },
  {
    "file": "src/core/time-window.mjs",
    "line": 13,
    "text": "time-window: Invalid Date object received.",
    "context": "throw new TypeError('time-window: Invalid Date object received.');"
  },
  {
    "file": "src/core/time-window.mjs",
    "line": 20,
    "text": "time-window: Unable to convert value to a valid Date.",
    "context": "throw new TypeError('time-window: Unable to convert value to a valid Date.');"
  },
  {
    "file": "src/core/time-window.mjs",
    "line": 43,
    "text": "start <= x < end",
    "context": "* month. Useful for range comparisons: `start <= x < end`."
  },
  {
    "file": "src/core/time-window.mjs",
    "line": 75,
    "text": "time-window: `offset` must be an integer value.",
    "context": "throw new TypeError('time-window: `offset` must be an integer value.');"
  },
  {
    "file": "src/core/time-window.mjs",
    "line": 85,
    "text": "YYYY-MM",
    "context": "* Returns a canonical key (`YYYY-MM`) suitable for Redis/metric storage."
  },
  {
    "file": "test-email.js",
    "line": 12,
    "text": "npm run test:email",
    "context": "* * 2. Terminalden `npm run test:email` komutunu çalıştırın."
  },
  {
    "file": "test-email.js",
    "line": 24,
    "text": "Lütfen .env dosyasında TEST_EMAIL_RECIPIENT değişkenini ayarlayın.",
    "context": "throw new Error('Lütfen .env dosyasında TEST_EMAIL_RECIPIENT değişkenini ayarlayın.');"
  },
  {
    "file": "test-email.js",
    "line": 27,
    "text": "Test e-postası gönderiliyor: ${recipient}",
    "context": "console.log(`Test e-postası gönderiliyor: ${recipient}`);"
  },
  {
    "file": "test-email.js",
    "line": 32,
    "text": "VideoKit Test E-postası",
    "context": "'VideoKit Test E-postası',"
  },
  {
    "file": "test-email.js",
    "line": 33,
    "text": "<h1>Merhaba!</h1><p>Bu, VideoKit platformundan gönderilen bir test e-postasıdır.</p>",
    "context": "'<h1>Merhaba!</h1><p>Bu, VideoKit platformundan gönderilen bir test e-postasıdır.</p>'"
  },
  {
    "file": "test-email.js",
    "line": 36,
    "text": "Test başarıyla tamamlandı.",
    "context": "console.log('Test başarıyla tamamlandı.');"
  },
  {
    "file": "test-email.js",
    "line": 39,
    "text": "Test sırasında bir hata oluştu:",
    "context": "console.error('Test sırasında bir hata oluştu:', error.message);"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 13,
    "text": "text/html; charset=utf-8",
    "context": "['.html', 'text/html; charset=utf-8'],"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 14,
    "text": "application/javascript; charset=utf-8",
    "context": "['.js', 'application/javascript; charset=utf-8'],"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 15,
    "text": "text/css; charset=utf-8",
    "context": "['.css', 'text/css; charset=utf-8'],"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 16,
    "text": "application/json; charset=utf-8",
    "context": "['.json', 'application/json; charset=utf-8'],"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 25,
    "text": "Content-Type",
    "context": "'Content-Type': 'application/json; charset=utf-8'"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 25,
    "text": "application/json; charset=utf-8",
    "context": "'Content-Type': 'application/json; charset=utf-8'"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 51,
    "text": "login view with pseudo-locale",
    "context": "test('login view with pseudo-locale', async ({ page }) => {"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 53,
    "text": "Not logged in",
    "context": "route.fulfill({ status: 401, headers: jsonHeaders, body: JSON.stringify({ error: 'Not logged in' }) });"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 61,
    "text": "register view with pseudo-locale",
    "context": "test('register view with pseudo-locale', async ({ page }) => {"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 63,
    "text": "Not logged in",
    "context": "route.fulfill({ status: 401, headers: jsonHeaders, body: JSON.stringify({ error: 'Not logged in' }) });"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 73,
    "text": "dashboard view with mocked data",
    "context": "test('dashboard view with mocked data', async ({ page }) => {"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 82,
    "text": "analytics detail card",
    "context": "test('analytics detail card', async ({ page }) => {"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 93,
    "text": "batch view after authentication",
    "context": "test('batch view after authentication', async ({ page }) => {"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 119,
    "text": "Forbidden",
    "context": "res.end('Forbidden');"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 128,
    "text": "Not found",
    "context": "res.end('Not found');"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 139,
    "text": "Content-Type",
    "context": "res.writeHead(200, { 'Content-Type': contentType });"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 143,
    "text": "Server error",
    "context": "res.end('Server error');"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 161,
    "text": "Overflow QA Localization Suite Tenant",
    "context": "name: 'Overflow QA Localization Suite Tenant'"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 170,
    "text": "Overflow QA Owner",
    "context": "name: 'Overflow QA Owner',"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 193,
    "text": "X-Quota-Remaining",
    "context": "'X-Quota-Remaining': '124'"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 196,
    "text": "Overflow Enterprise Pseudo-Locale Preview",
    "context": "plan_name: 'Overflow Enterprise Pseudo-Locale Preview',"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 265,
    "text": "Overflow QA Localization Suite Tenant",
    "context": "name: 'Overflow QA Localization Suite Tenant'"
  },
  {
    "file": "tests/e2e/i18n-screenshots.spec.mjs",
    "line": 274,
    "text": "Batch Operations Specialist",
    "context": "name: 'Batch Operations Specialist'"
  },
  {
    "file": "tool.html",
    "line": 11,
    "text": "VK",
    "context": "<link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'><rect rx='6' width='32' height='32' fill='#111827'/><text x='6' y='22' font-family='Arial' font-size='16' fill='white'>VK</text></svg>\">"
  },
  {
    "file": "tool.html",
    "line": 13,
    "text": "VideoKit • C2PA Doğrulayıcı & Oluşturucu",
    "context": "<title>VideoKit • C2PA Doğrulayıcı & Oluşturucu</title>"
  },
  {
    "file": "tool.html",
    "line": 71,
    "text": "VK",
    "context": "<div class=\"logo\">VK</div>"
  },
  {
    "file": "tool.html",
    "line": 73,
    "text": "VideoKit • Content Credentials (C2PA) Aracı",
    "context": "<h1>VideoKit • Content Credentials (C2PA) Aracı</h1>"
  },
  {
    "file": "tool.html",
    "line": 74,
    "text": "Gömülü,",
    "context": "<div class=\"muted\">Gömülü, <b>sidecar</b> (.c2pa) veya <b>remote URL</b> manifest — üçü de desteklenir.</div>"
  },
  {
    "file": "tool.html",
    "line": 74,
    "text": "sidecar",
    "context": "<div class=\"muted\">Gömülü, <b>sidecar</b> (.c2pa) veya <b>remote URL</b> manifest — üçü de desteklenir.</div>"
  },
  {
    "file": "tool.html",
    "line": 74,
    "text": "(.c2pa) veya",
    "context": "<div class=\"muted\">Gömülü, <b>sidecar</b> (.c2pa) veya <b>remote URL</b> manifest — üçü de desteklenir.</div>"
  },
  {
    "file": "tool.html",
    "line": 74,
    "text": "remote URL",
    "context": "<div class=\"muted\">Gömülü, <b>sidecar</b> (.c2pa) veya <b>remote URL</b> manifest — üçü de desteklenir.</div>"
  },
  {
    "file": "tool.html",
    "line": 74,
    "text": "manifest — üçü de desteklenir.",
    "context": "<div class=\"muted\">Gömülü, <b>sidecar</b> (.c2pa) veya <b>remote URL</b> manifest — üçü de desteklenir.</div>"
  },
  {
    "file": "tool.html",
    "line": 79,
    "text": "1. Doğrulama (Validator)",
    "context": "<h2 style=\"margin-top:0\">1. Doğrulama (Validator)</h2>"
  },
  {
    "file": "tool.html",
    "line": 82,
    "text": "Video(lar) (MP4/MOV)",
    "context": "<label><b>Video(lar) (MP4/MOV)</b><br>"
  },
  {
    "file": "tool.html",
    "line": 84,
    "text": "İpucu: Birden fazla video seçebilirsiniz.",
    "context": "<small class=\"muted\">İpucu: Birden fazla video seçebilirsiniz.</small>"
  },
  {
    "file": "tool.html",
    "line": 86,
    "text": "Opsiyonel sidecar(lar) (.c2pa)",
    "context": "<label><b>Opsiyonel sidecar(lar) (.c2pa)</b><br>"
  },
  {
    "file": "tool.html",
    "line": 88,
    "text": "Aynı isimli dosyalar otomatik eşleştirilir (ör.",
    "context": "<small class=\"muted\">Aynı isimli dosyalar otomatik eşleştirilir (ör. <i>foo.mp4</i> ↔ <i>foo.c2pa</i>).</small>"
  },
  {
    "file": "tool.html",
    "line": 88,
    "text": "foo.mp4",
    "context": "<small class=\"muted\">Aynı isimli dosyalar otomatik eşleştirilir (ör. <i>foo.mp4</i> ↔ <i>foo.c2pa</i>).</small>"
  },
  {
    "file": "tool.html",
    "line": 88,
    "text": "↔",
    "context": "<small class=\"muted\">Aynı isimli dosyalar otomatik eşleştirilir (ör. <i>foo.mp4</i> ↔ <i>foo.c2pa</i>).</small>"
  },
  {
    "file": "tool.html",
    "line": 88,
    "text": "foo.c2pa",
    "context": "<small class=\"muted\">Aynı isimli dosyalar otomatik eşleştirilir (ör. <i>foo.mp4</i> ↔ <i>foo.c2pa</i>).</small>"
  },
  {
    "file": "tool.html",
    "line": 88,
    "text": ").",
    "context": "<small class=\"muted\">Aynı isimli dosyalar otomatik eşleştirilir (ör. <i>foo.mp4</i> ↔ <i>foo.c2pa</i>).</small>"
  },
  {
    "file": "tool.html",
    "line": 92,
    "text": "VEYA",
    "context": "<div class=\"separator\">VEYA</div>"
  },
  {
    "file": "tool.html",
    "line": 94,
    "text": "Remote URL ile Doğrula",
    "context": "<label><b>Remote URL ile Doğrula</b><br>"
  },
  {
    "file": "tool.html",
    "line": 95,
    "text": "https://example.com/video_with_c2pa.mp4",
    "context": "placeholder attribute"
  },
  {
    "file": "tool.html",
    "line": 96,
    "text": "Manifest'in gömülü olduğu video dosyasının URL'ini girin.",
    "context": "<small class=\"muted\">Manifest'in gömülü olduğu video dosyasının URL'ini girin.</small>"
  },
  {
    "file": "tool.html",
    "line": 100,
    "text": "Doğrula",
    "context": "<button id=\"btnVerify\">Doğrula</button>"
  },
  {
    "file": "tool.html",
    "line": 101,
    "text": "Temizle",
    "context": "<button id=\"btnClear\" class=\"btn-ghost\">Temizle</button>"
  },
  {
    "file": "tool.html",
    "line": 102,
    "text": "Hazır.",
    "context": "<div class=\"muted\" id=\"hint\">Hazır.</div>"
  },
  {
    "file": "tool.html",
    "line": 107,
    "text": "Doğrulama Sonuçları",
    "context": "<h2 style=\"margin-top:0\">Doğrulama Sonuçları</h2>"
  },
  {
    "file": "tool.html",
    "line": 117,
    "text": "2. C2PA Manifest Oluşturucu (Stamper)",
    "context": "<h2 style=\"margin-top:0;\">2. C2PA Manifest Oluşturucu (Stamper)</h2>"
  },
  {
    "file": "tool.html",
    "line": 118,
    "text": "Bu bölüm, bir video dosyası için C2PA manifest'i oluşturur, tarayıcıda depolanan anahtarınızla imzalar ve bir",
    "context": "<p class=\"muted\">Bu bölüm, bir video dosyası için C2PA manifest'i oluşturur, tarayıcıda depolanan anahtarınızla imzalar ve bir <code>.c2pa</code> yan dosyası olarak indirmenizi sağlar.</p>"
  },
  {
    "file": "tool.html",
    "line": 118,
    "text": ".c2pa",
    "context": "<p class=\"muted\">Bu bölüm, bir video dosyası için C2PA manifest'i oluşturur, tarayıcıda depolanan anahtarınızla imzalar ve bir <code>.c2pa</code> yan dosyası olarak indirmenizi sağlar.</p>"
  },
  {
    "file": "tool.html",
    "line": 118,
    "text": "yan dosyası olarak indirmenizi sağlar.",
    "context": "<p class=\"muted\">Bu bölüm, bir video dosyası için C2PA manifest'i oluşturur, tarayıcıda depolanan anahtarınızla imzalar ve bir <code>.c2pa</code> yan dosyası olarak indirmenizi sağlar.</p>"
  },
  {
    "file": "tool.html",
    "line": 123,
    "text": "Kaynak Video (MP4/MOV)",
    "context": "<label for=\"stamperAsset\">Kaynak Video (MP4/MOV)</label>"
  },
  {
    "file": "tool.html",
    "line": 127,
    "text": "Yazar (Creator)",
    "context": "<label for=\"stamperAuthor\">Yazar (Creator)</label>"
  },
  {
    "file": "tool.html",
    "line": 128,
    "text": "Örn: VideoKit Departmanı",
    "context": "placeholder attribute"
  },
  {
    "file": "tool.html",
    "line": 133,
    "text": "Eylem (Action)",
    "context": "<label for=\"stamperAction\">Eylem (Action)</label>"
  },
  {
    "file": "tool.html",
    "line": 135,
    "text": "Oluşturuldu (Created)",
    "context": "<option value=\"c2pa.created\">Oluşturuldu (Created)</option>"
  },
  {
    "file": "tool.html",
    "line": 135,
    "text": "c2pa.created",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 136,
    "text": "Düzenlendi (Edited)",
    "context": "<option value=\"c2pa.edited\">Düzenlendi (Edited)</option>"
  },
  {
    "file": "tool.html",
    "line": 136,
    "text": "c2pa.edited",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 137,
    "text": "Yayınlandı (Published)",
    "context": "<option value=\"c2pa.published\">Yayınlandı (Published)</option>"
  },
  {
    "file": "tool.html",
    "line": 137,
    "text": "c2pa.published",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 138,
    "text": "Dönüştürüldü (Transcoded)",
    "context": "<option value=\"c2pa.transcoded\">Dönüştürüldü (Transcoded)</option>"
  },
  {
    "file": "tool.html",
    "line": 138,
    "text": "c2pa.transcoded",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 139,
    "text": "Kopyalandı (Copied)",
    "context": "<option value=\"c2pa.copied\">Kopyalandı (Copied)</option>"
  },
  {
    "file": "tool.html",
    "line": 139,
    "text": "c2pa.copied",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 140,
    "text": "İçe Aktarıldı (Imported)",
    "context": "<option value=\"c2pa.imported\">İçe Aktarıldı (Imported)</option>"
  },
  {
    "file": "tool.html",
    "line": 140,
    "text": "c2pa.imported",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 144,
    "text": "Yazılım Bilgisi (Software Agent)",
    "context": "<label for=\"stamperAgent\">Yazılım Bilgisi (Software Agent)</label>"
  },
  {
    "file": "tool.html",
    "line": 145,
    "text": "VideoKit C2PA Stamper v2.0",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 149,
    "text": "İmzalama Anahtarı:",
    "context": "<b>İmzalama Anahtarı:</b> Bu işlem, aşağıdaki \"Anahtar Altyapısı\" bölümünde oluşturulan ve tarayıcıda saklanan güvenli anahtarı kullanacaktır. Eğer anahtarınız yoksa, lütfen önce bir anahtar oluşturun."
  },
  {
    "file": "tool.html",
    "line": 152,
    "text": "Manifest Oluştur ve İndir (.c2pa)",
    "context": "<button id=\"stamperGenerateBtn\">Manifest Oluştur ve İndir (.c2pa)</button>"
  },
  {
    "file": "tool.html",
    "line": 154,
    "text": "Hazır.",
    "context": "<div id=\"stamperStatus\" class=\"muted\" style=\"margin-top:12px;\">Hazır.</div>"
  },
  {
    "file": "tool.html",
    "line": 159,
    "text": "Yardımcı Araçlar",
    "context": "<h2 style=\"margin-top:0\">Yardımcı Araçlar</h2>"
  },
  {
    "file": "tool.html",
    "line": 161,
    "text": "KLV / JSON Dönüştürücü (MISB ST 0601 Uyumlu)",
    "context": "<h3>KLV / JSON Dönüştürücü (MISB ST 0601 Uyumlu)</h3>"
  },
  {
    "file": "tool.html",
    "line": 163,
    "text": "Giriş Dosyası",
    "context": "<label style=\"flex:2 1 60%\"><b>Giriş Dosyası</b><br>"
  },
  {
    "file": "tool.html",
    "line": 165,
    "text": "KLV (.klv) veya JSON (.json) dosyası seçin",
    "context": "<small class=\"muted\">KLV (.klv) veya JSON (.json) dosyası seçin</small>"
  },
  {
    "file": "tool.html",
    "line": 167,
    "text": "ST 0601 Versiyonu",
    "context": "<label style=\"flex:1 1 30%\"><b>ST 0601 Versiyonu</b><br>"
  },
  {
    "file": "tool.html",
    "line": 169,
    "text": "ST 0601.8 (Varsayılan)",
    "context": "<option value=\"8\">ST 0601.8 (Varsayılan)</option>"
  },
  {
    "file": "tool.html",
    "line": 169,
    "text": "8",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 170,
    "text": "ST 0601.12",
    "context": "<option value=\"12\">ST 0601.12</option>"
  },
  {
    "file": "tool.html",
    "line": 170,
    "text": "12",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 171,
    "text": "ST 0601.16",
    "context": "<option value=\"16\">ST 0601.16</option>"
  },
  {
    "file": "tool.html",
    "line": 171,
    "text": "16",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 176,
    "text": "Dönüştür ve Doğrula",
    "context": "<button id=\"klvConvert\">Dönüştür ve Doğrula</button>"
  },
  {
    "file": "tool.html",
    "line": 177,
    "text": "İndir",
    "context": "<button id=\"klvDownload\" class=\"btn-ghost\" disabled>İndir</button>"
  },
  {
    "file": "tool.html",
    "line": 179,
    "text": "Hazır.",
    "context": "<div id=\"klvStatus\" class=\"muted\" style=\"margin-top:12px;white-space:pre-wrap;\">Hazır.</div>"
  },
  {
    "file": "tool.html",
    "line": 184,
    "text": "BMFF Parçalı Hash Oluşturucu",
    "context": "<h3>BMFF Parçalı Hash Oluşturucu</h3>"
  },
  {
    "file": "tool.html",
    "line": 185,
    "text": "Bir MP4/MOV dosyasının C2PA standartlarına uygun parçalı hash'ini oluşturur.",
    "context": "<p class=\"muted\">Bir MP4/MOV dosyasının C2PA standartlarına uygun parçalı hash'ini oluşturur.</p>"
  },
  {
    "file": "tool.html",
    "line": 186,
    "text": "Video Dosyası (MP4/MOV)",
    "context": "<label><b>Video Dosyası (MP4/MOV)</b><br>"
  },
  {
    "file": "tool.html",
    "line": 190,
    "text": "Hash Oluştur",
    "context": "<button id=\"bmffGenerateBtn\">Hash Oluştur</button>"
  },
  {
    "file": "tool.html",
    "line": 191,
    "text": "Kopyala",
    "context": "<button id=\"bmffCopyBtn\" class=\"btn-ghost\" disabled>Kopyala</button>"
  },
  {
    "file": "tool.html",
    "line": 193,
    "text": "Hazır.",
    "context": "<div id=\"bmffStatus\" class=\"muted\" style=\"margin-top:12px;\">Hazır.</div>"
  },
  {
    "file": "tool.html",
    "line": 198,
    "text": "HLS/DASH Akış Bütünlüğü Doğrulama",
    "context": "<h3>HLS/DASH Akış Bütünlüğü Doğrulama</h3>"
  },
  {
    "file": "tool.html",
    "line": 199,
    "text": "Bir HLS (.m3u8) veya DASH (.mpd) manifest URL'ini işler, tüm segmentlerin BMFF hash'lerini karşılaştırarak akışın bütünlüğünü kontrol eder.",
    "context": "<p class=\"muted\">Bir HLS (.m3u8) veya DASH (.mpd) manifest URL'ini işler, tüm segmentlerin BMFF hash'lerini karşılaştırarak akışın bütünlüğünü kontrol eder.</p>"
  },
  {
    "file": "tool.html",
    "line": 200,
    "text": "Manifest URL (.m3u8 veya .mpd)",
    "context": "<label><b>Manifest URL (.m3u8 veya .mpd)</b><br>"
  },
  {
    "file": "tool.html",
    "line": 201,
    "text": "https://example.com/stream/index.m3u8",
    "context": "placeholder attribute"
  },
  {
    "file": "tool.html",
    "line": 204,
    "text": "Akışı Doğrula",
    "context": "<button id=\"streamVerifyBtn\">Akışı Doğrula</button>"
  },
  {
    "file": "tool.html",
    "line": 206,
    "text": "Hazır.",
    "context": "<div id=\"streamStatus\" class=\"muted\" style=\"margin-top:12px;\">Hazır.</div>"
  },
  {
    "file": "tool.html",
    "line": 212,
    "text": "Harici Araç Entegrasyonları (Komut Satırı)",
    "context": "<h2 style=\"margin-top:0\">Harici Araç Entegrasyonları (Komut Satırı)</h2>"
  },
  {
    "file": "tool.html",
    "line": 214,
    "text": "GStreamer ile KLV Ekleme",
    "context": "<h3>GStreamer ile KLV Ekleme</h3>"
  },
  {
    "file": "tool.html",
    "line": 215,
    "text": "KLV akışını video ile senkron bir şekilde MPEG-TS dosyasına gömer.",
    "context": "<p class=\"muted\">KLV akışını video ile senkron bir şekilde MPEG-TS dosyasına gömer.</p>"
  },
  {
    "file": "tool.html",
    "line": 217,
    "text": "Video Dosyası (MP4)",
    "context": "<label><b>Video Dosyası (MP4)</b><br><input id=\"gstreamerVideoInput\" type=\"file\" accept=\"video/mp4\"></label>"
  },
  {
    "file": "tool.html",
    "line": 218,
    "text": "KLV Dosyası (.klv)",
    "context": "<label><b>KLV Dosyası (.klv)</b><br><input id=\"gstreamerKlvInput\" type=\"file\" accept=\".klv\"></label>"
  },
  {
    "file": "tool.html",
    "line": 221,
    "text": "GStreamer Komutu Oluştur",
    "context": "<button id=\"gstreamerGenerateBtn\">GStreamer Komutu Oluştur</button>"
  },
  {
    "file": "tool.html",
    "line": 222,
    "text": "Komutu Kopyala",
    "context": "<button id=\"gstreamerCopyBtn\" class=\"btn-ghost\" disabled>Komutu Kopyala</button>"
  },
  {
    "file": "tool.html",
    "line": 228,
    "text": "FFmpeg/FFprobe ile KLV İşleme",
    "context": "<h3>FFmpeg/FFprobe ile KLV İşleme</h3>"
  },
  {
    "file": "tool.html",
    "line": 229,
    "text": "Mevcut KLV'li videoları doğrulamak, ayıklamak veya temizlemek için komutlar üretir.",
    "context": "<p class=\"muted\">Mevcut KLV'li videoları doğrulamak, ayıklamak veya temizlemek için komutlar üretir.</p>"
  },
  {
    "file": "tool.html",
    "line": 230,
    "text": "Video Dosyası (MPEG-TS)",
    "context": "<label><b>Video Dosyası (MPEG-TS)</b><br><input id=\"ffmpegTsInput\" type=\"file\" accept=\".ts,video/mp2t\"></label>"
  },
  {
    "file": "tool.html",
    "line": 233,
    "text": "Yapılacak İşlem:",
    "context": "<b>Yapılacak İşlem:</b>"
  },
  {
    "file": "tool.html",
    "line": 234,
    "text": "Analiz Et (FFprobe ile)",
    "context": "<label style=\"margin-top:8px;\"><input type=\"radio\" name=\"ffmpegAction\" value=\"analyze\" checked> Analiz Et (FFprobe ile)</label>"
  },
  {
    "file": "tool.html",
    "line": 234,
    "text": "analyze",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 235,
    "text": "Ayıkla (.klv dosyası)",
    "context": "<label><input type=\"radio\" name=\"ffmpegAction\" value=\"extract\"> Ayıkla (.klv dosyası)</label>"
  },
  {
    "file": "tool.html",
    "line": 235,
    "text": "extract",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 236,
    "text": "Temizle (KLV akışını kaldır)",
    "context": "<label><input type=\"radio\" name=\"ffmpegAction\" value=\"clean\"> Temizle (KLV akışını kaldır)</label>"
  },
  {
    "file": "tool.html",
    "line": 236,
    "text": "clean",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 239,
    "text": "Komut Oluştur",
    "context": "<button id=\"ffmpegGenerateBtn\" style=\"width:100%\">Komut Oluştur</button>"
  },
  {
    "file": "tool.html",
    "line": 240,
    "text": "Komutu Kopyala",
    "context": "<button id=\"ffmpegCopyBtn\" class=\"btn-ghost\" style=\"width:100%; margin-top:12px;\" disabled>Komutu Kopyala</button>"
  },
  {
    "file": "tool.html",
    "line": 244,
    "text": "Analiz Adımları:",
    "context": "<p class=\"muted\" style=\"margin-top:var(--sp4)\"><b>Analiz Adımları:</b><br>1. Yukarıdaki komutu kopyalayıp terminalde çalıştırın.<br>2. Ortaya çıkan tüm JSON metnini aşağıdaki kutuya yapıştırın.<br>3. Analiz et butonuna tıklayarak KLV akışının sağlığını kontrol edin.</p>"
  },
  {
    "file": "tool.html",
    "line": 244,
    "text": "1. Yukarıdaki komutu kopyalayıp terminalde çalıştırın.",
    "context": "<p class=\"muted\" style=\"margin-top:var(--sp4)\"><b>Analiz Adımları:</b><br>1. Yukarıdaki komutu kopyalayıp terminalde çalıştırın.<br>2. Ortaya çıkan tüm JSON metnini aşağıdaki kutuya yapıştırın.<br>3. Analiz et butonuna tıklayarak KLV akışının sağlığını kontrol edin.</p>"
  },
  {
    "file": "tool.html",
    "line": 244,
    "text": "2. Ortaya çıkan tüm JSON metnini aşağıdaki kutuya yapıştırın.",
    "context": "<p class=\"muted\" style=\"margin-top:var(--sp4)\"><b>Analiz Adımları:</b><br>1. Yukarıdaki komutu kopyalayıp terminalde çalıştırın.<br>2. Ortaya çıkan tüm JSON metnini aşağıdaki kutuya yapıştırın.<br>3. Analiz et butonuna tıklayarak KLV akışının sağlığını kontrol edin.</p>"
  },
  {
    "file": "tool.html",
    "line": 244,
    "text": "3. Analiz et butonuna tıklayarak KLV akışının sağlığını kontrol edin.",
    "context": "<p class=\"muted\" style=\"margin-top:var(--sp4)\"><b>Analiz Adımları:</b><br>1. Yukarıdaki komutu kopyalayıp terminalde çalıştırın.<br>2. Ortaya çıkan tüm JSON metnini aşağıdaki kutuya yapıştırın.<br>3. Analiz et butonuna tıklayarak KLV akışının sağlığını kontrol edin.</p>"
  },
  {
    "file": "tool.html",
    "line": 245,
    "text": "ffprobe JSON çıktısını buraya yapıştırın...",
    "context": "placeholder attribute"
  },
  {
    "file": "tool.html",
    "line": 246,
    "text": "Yapıştırılan JSON'u Analiz Et",
    "context": "<button id=\"ffmpegAnalyzeBtn\" style=\"margin-top:var(--sp3)\">Yapıştırılan JSON'u Analiz Et</button>"
  },
  {
    "file": "tool.html",
    "line": 254,
    "text": "Güvenlik Altyapısı",
    "context": "<h2 style=\"margin-top:0\">Güvenlik Altyapısı</h2>"
  },
  {
    "file": "tool.html",
    "line": 256,
    "text": "Anahtar Altyapısı (Güvenli Saklama)",
    "context": "<h3>Anahtar Altyapısı (Güvenli Saklama)</h3>"
  },
  {
    "file": "tool.html",
    "line": 258,
    "text": "Yeni Anahtar Oluştur",
    "context": "<button id=\"keyGenerate\">Yeni Anahtar Oluştur</button>"
  },
  {
    "file": "tool.html",
    "line": 259,
    "text": "Anahtarı Temizle",
    "context": "<button id=\"keyClear\" class=\"btn-ghost\">Anahtarı Temizle</button>"
  },
  {
    "file": "tool.html",
    "line": 261,
    "text": "Depolanmış anahtar yok.",
    "context": "<div id=\"keyInfo\" class=\"muted\" style=\"margin-top:12px\">Depolanmış anahtar yok.</div>"
  },
  {
    "file": "tool.html",
    "line": 265,
    "text": "RFC 3161 Zaman Damgası Yetkilisi (TSA)",
    "context": "<h3>RFC 3161 Zaman Damgası Yetkilisi (TSA)</h3>"
  },
  {
    "file": "tool.html",
    "line": 267,
    "text": "TSA Sunucusu",
    "context": "<label><b>TSA Sunucusu</b>"
  },
  {
    "file": "tool.html",
    "line": 269,
    "text": "DigiCert",
    "context": "<option value=\"http://timestamp.digicert.com\">DigiCert</option>"
  },
  {
    "file": "tool.html",
    "line": 269,
    "text": "http://timestamp.digicert.com",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 270,
    "text": "Sectigo",
    "context": "<option value=\"https://timestamp.sectigo.com\">Sectigo</option>"
  },
  {
    "file": "tool.html",
    "line": 270,
    "text": "https://timestamp.sectigo.com",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 271,
    "text": "FreeTSA",
    "context": "<option value=\"https://freetsa.org/tsr\">FreeTSA</option>"
  },
  {
    "file": "tool.html",
    "line": 271,
    "text": "https://freetsa.org/tsr",
    "context": "value attribute"
  },
  {
    "file": "tool.html",
    "line": 276,
    "text": "Güvenilir Zaman Damgası İste (RFC 3161)",
    "context": "<button id=\"tsaRequestBtn\" disabled>Güvenilir Zaman Damgası İste (RFC 3161)</button>"
  },
  {
    "file": "tool.html",
    "line": 283,
    "text": "Güven Listesi Yönetimi (Trust Store)",
    "context": "<h2 style=\"margin-top:0\">Güven Listesi Yönetimi (Trust Store)</h2>"
  },
  {
    "file": "tool.html",
    "line": 284,
    "text": "Doğrulama sırasında özel olarak güvenilecek kök sertifikaları buraya ekleyebilirsiniz. Bu sertifikalar, C2PA'in varsayılan güven listesine ek olarak kullanılır. Lütfen sertifikaları",
    "context": "<p class=\"muted\">Doğrulama sırasında özel olarak güvenilecek kök sertifikaları buraya ekleyebilirsiniz. Bu sertifikalar, C2PA'in varsayılan güven listesine ek olarak kullanılır. Lütfen sertifikaları <strong>PEM formatında</strong> ekleyin.</p>"
  },
  {
    "file": "tool.html",
    "line": 284,
    "text": "PEM formatında",
    "context": "<p class=\"muted\">Doğrulama sırasında özel olarak güvenilecek kök sertifikaları buraya ekleyebilirsiniz. Bu sertifikalar, C2PA'in varsayılan güven listesine ek olarak kullanılır. Lütfen sertifikaları <strong>PEM formatında</strong> ekleyin.</p>"
  },
  {
    "file": "tool.html",
    "line": 284,
    "text": "ekleyin.",
    "context": "<p class=\"muted\">Doğrulama sırasında özel olarak güvenilecek kök sertifikaları buraya ekleyebilirsiniz. Bu sertifikalar, C2PA'in varsayılan güven listesine ek olarak kullanılır. Lütfen sertifikaları <strong>PEM formatında</strong> ekleyin.</p>"
  },
  {
    "file": "tool.html",
    "line": 287,
    "text": "Yeni Sertifika Ekle",
    "context": "<h3>Yeni Sertifika Ekle</h3>"
  },
  {
    "file": "tool.html",
    "line": 288,
    "text": "-----BEGIN CERTIFICATE-----&#10;MIIC...&#10;-----END CERTIFICATE-----",
    "context": "placeholder attribute"
  },
  {
    "file": "tool.html",
    "line": 290,
    "text": "Güven Listesine Ekle",
    "context": "<button id=\"addCertBtn\" disabled>Güven Listesine Ekle</button>"
  },
  {
    "file": "tool.html",
    "line": 297,
    "text": "Mevcut Güvenilir Sertifikalar",
    "context": "<h3 style=\"margin:0;\">Mevcut Güvenilir Sertifikalar</h3>"
  },
  {
    "file": "tool.html",
    "line": 298,
    "text": "Tüm Listeyi Temizle",
    "context": "<button id=\"clearTrustListBtn\" class=\"btn-ghost\">Tüm Listeyi Temizle</button>"
  },
  {
    "file": "tool.html",
    "line": 301,
    "text": "Güven listesi boş.",
    "context": "<p id=\"trustListEmpty\" class=\"muted\" style=\"display:none;\">Güven listesi boş.</p>"
  },
  {
    "file": "tool.html",
    "line": 332,
    "text": "String(s??'').replace(/[&",
    "context": "const esc = (s) => String(s??'').replace(/[&<>\"']/g, c=>({ '&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":\"&#39;\"}[c]));"
  },
  {
    "file": "tool.html",
    "line": 332,
    "text": "({ '&':'&amp;','",
    "context": "const esc = (s) => String(s??'').replace(/[&<>\"']/g, c=>({ '&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":\"&#39;\"}[c]));"
  },
  {
    "file": "tool.html",
    "line": 376,
    "text": "${esc(report.file.name)}",
    "context": "<h4>${esc(report.file.name)}</h4>"
  },
  {
    "file": "tool.html",
    "line": 378,
    "text": "${report.verdict.toUpperCase()}",
    "context": "<span class=\"badge ${report.verdict}\">${report.verdict.toUpperCase()}</span>"
  },
  {
    "file": "tool.html",
    "line": 379,
    "text": "Timestamp: ${tsText}",
    "context": "<span class=\"badge ${tsBadgeClass}\">Timestamp: ${tsText}</span>"
  },
  {
    "file": "tool.html",
    "line": 380,
    "text": "${esc(report.summary.sourceType)}",
    "context": "${report.summary?.sourceType ? `<span class=\"badge muted\">${esc(report.summary.sourceType)}</span>` : ''}"
  },
  {
    "file": "tool.html",
    "line": 381,
    "text": "sidecar eşleşti",
    "context": "${report.isSidecarUsed ? `<span class=\"badge muted\">sidecar eşleşti</span>` : ''}"
  },
  {
    "file": "tool.html",
    "line": 383,
    "text": "${esc(report.message)} ${report.ms ? '('+report.ms+' ms)' : ''}",
    "context": "<div class=\"muted\" style=\"margin-top:8px\">${esc(report.message)} ${report.ms ? '('+report.ms+' ms)' : ''}</div>"
  },
  {
    "file": "tool.html",
    "line": 385,
    "text": "Boyut",
    "context": "<div><b>Boyut</b><span>${fmtSize(report.file.size)}</span></div>"
  },
  {
    "file": "tool.html",
    "line": 385,
    "text": "${fmtSize(report.file.size)}",
    "context": "<div><b>Boyut</b><span>${fmtSize(report.file.size)}</span></div>"
  },
  {
    "file": "tool.html",
    "line": 386,
    "text": "İmza veren",
    "context": "<div><b>İmza veren</b><span>${esc(report.summary?.issuer || '—')}</span></div>"
  },
  {
    "file": "tool.html",
    "line": 386,
    "text": "${esc(report.summary?.issuer || '—')}",
    "context": "<div><b>İmza veren</b><span>${esc(report.summary?.issuer || '—')}</span></div>"
  },
  {
    "file": "tool.html",
    "line": 387,
    "text": "İmza zamanı (UTC)",
    "context": "<div><b>İmza zamanı (UTC)</b><span>${esc(report.summary?.time || '—')}</span></div>"
  },
  {
    "file": "tool.html",
    "line": 387,
    "text": "${esc(report.summary?.time || '—')}",
    "context": "<div><b>İmza zamanı (UTC)</b><span>${esc(report.summary?.time || '—')}</span></div>"
  },
  {
    "file": "tool.html",
    "line": 388,
    "text": "Başlık",
    "context": "<div><b>Başlık</b><span>${esc(report.summary?.title || '—')}</span></div>"
  },
  {
    "file": "tool.html",
    "line": 388,
    "text": "${esc(report.summary?.title || '—')}",
    "context": "<div><b>Başlık</b><span>${esc(report.summary?.title || '—')}</span></div>"
  },
  {
    "file": "tool.html",
    "line": 391,
    "text": "JSON",
    "context": "<button class=\"btn-ghost dl\">JSON</button>"
  },
  {
    "file": "tool.html",
    "line": 392,
    "text": "PDF",
    "context": "<button class=\"btn-ghost pdf\">PDF</button>"
  },
  {
    "file": "tool.html",
    "line": 393,
    "text": "Açıklamalar",
    "context": "<button class=\"btn-ghost show\">Açıklamalar</button>"
  },
  {
    "file": "tool.html",
    "line": 394,
    "text": "CSV",
    "context": "<button class=\"btn-ghost csv\">CSV</button>"
  },
  {
    "file": "tool.html",
    "line": 404,
    "text": "Hata: ${esc(report.error)}",
    "context": "if (report.error && codes.length === 0) codesDiv.innerHTML = `<pre class=\"code-block\" style=\"margin-top:0;\">Hata: ${esc(report.error)}</pre>`;"
  },
  {
    "file": "tool.html",
    "line": 405,
    "text": "Görüntülenecek doğrulama kodu yok.",
    "context": "else if (codes.length === 0) codesDiv.innerHTML = `<div class=\"muted\">Görüntülenecek doğrulama kodu yok.</div>`;"
  },
  {
    "file": "tool.html",
    "line": 406,
    "text": "Kod",
    "context": "else codesDiv.innerHTML = `<table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${codes.map(c => `<tr><td><code>${esc(c)}</code></td><td>${esc(c2paCodeDescriptions[c]||'Açıklama yok.')}</td></tr>`).join('')}</tbody></table>`;"
  },
  {
    "file": "tool.html",
    "line": 406,
    "text": "Açıklama",
    "context": "else codesDiv.innerHTML = `<table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${codes.map(c => `<tr><td><code>${esc(c)}</code></td><td>${esc(c2paCodeDescriptions[c]||'Açıklama yok.')}</td></tr>`).join('')}</tbody></table>`;"
  },
  {
    "file": "tool.html",
    "line": 406,
    "text": "`",
    "context": "else codesDiv.innerHTML = `<table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${codes.map(c => `<tr><td><code>${esc(c)}</code></td><td>${esc(c2paCodeDescriptions[c]||'Açıklama yok.')}</td></tr>`).join('')}</tbody></table>`;"
  },
  {
    "file": "tool.html",
    "line": 406,
    "text": "${esc(c)}",
    "context": "else codesDiv.innerHTML = `<table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${codes.map(c => `<tr><td><code>${esc(c)}</code></td><td>${esc(c2paCodeDescriptions[c]||'Açıklama yok.')}</td></tr>`).join('')}</tbody></table>`;"
  },
  {
    "file": "tool.html",
    "line": 406,
    "text": "${esc(c2paCodeDescriptions[c]||'Açıklama yok.')}",
    "context": "else codesDiv.innerHTML = `<table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${codes.map(c => `<tr><td><code>${esc(c)}</code></td><td>${esc(c2paCodeDescriptions[c]||'Açıklama yok.')}</td></tr>`).join('')}</tbody></table>`;"
  },
  {
    "file": "tool.html",
    "line": 406,
    "text": "`).join('')}",
    "context": "else codesDiv.innerHTML = `<table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${codes.map(c => `<tr><td><code>${esc(c)}</code></td><td>${esc(c2paCodeDescriptions[c]||'Açıklama yok.')}</td></tr>`).join('')}</tbody></table>`;"
  },
  {
    "file": "tool.html",
    "line": 607,
    "text": "${esc(item.subject)}",
    "context": "el.innerHTML = `<div class=\"info\"><strong>${esc(item.subject)}</strong><pre>Parmak İzi (SHA-1): ${esc(item.fingerprint)}</pre></div><button class=\"btn-ghost remove-cert-btn\" data-fp=\"${esc(item.fingerprint)}\">Kaldır</button>`;"
  },
  {
    "file": "tool.html",
    "line": 607,
    "text": "Parmak İzi (SHA-1): ${esc(item.fingerprint)}",
    "context": "el.innerHTML = `<div class=\"info\"><strong>${esc(item.subject)}</strong><pre>Parmak İzi (SHA-1): ${esc(item.fingerprint)}</pre></div><button class=\"btn-ghost remove-cert-btn\" data-fp=\"${esc(item.fingerprint)}\">Kaldır</button>`;"
  },
  {
    "file": "tool.html",
    "line": 607,
    "text": "Kaldır",
    "context": "el.innerHTML = `<div class=\"info\"><strong>${esc(item.subject)}</strong><pre>Parmak İzi (SHA-1): ${esc(item.fingerprint)}</pre></div><button class=\"btn-ghost remove-cert-btn\" data-fp=\"${esc(item.fingerprint)}\">Kaldır</button>`;"
  },
  {
    "file": "tool.html",
    "line": 659,
    "text": "Doğrulama Detayları",
    "context": "return `<div class=\"section\"><h3>Doğrulama Detayları</h3><table class=\"details-table\">${details.map(d => `<tr><td><strong>${d.label}</strong></td><td>${d.value}</td></tr>`).join('')}</table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 659,
    "text": "`",
    "context": "return `<div class=\"section\"><h3>Doğrulama Detayları</h3><table class=\"details-table\">${details.map(d => `<tr><td><strong>${d.label}</strong></td><td>${d.value}</td></tr>`).join('')}</table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 659,
    "text": "${d.label}",
    "context": "return `<div class=\"section\"><h3>Doğrulama Detayları</h3><table class=\"details-table\">${details.map(d => `<tr><td><strong>${d.label}</strong></td><td>${d.value}</td></tr>`).join('')}</table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 659,
    "text": "${d.value}",
    "context": "return `<div class=\"section\"><h3>Doğrulama Detayları</h3><table class=\"details-table\">${details.map(d => `<tr><td><strong>${d.label}</strong></td><td>${d.value}</td></tr>`).join('')}</table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 659,
    "text": "`).join('')}",
    "context": "return `<div class=\"section\"><h3>Doğrulama Detayları</h3><table class=\"details-table\">${details.map(d => `<tr><td><strong>${d.label}</strong></td><td>${d.value}</td></tr>`).join('')}</table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 663,
    "text": "`",
    "context": "const rows = codes.map(code => `<tr><td><code>${safe(code)}</code></td><td>${safe(codeDescriptions[code] || 'Bu kod için standart bir açıklama bulunamadı.')}</td></tr>`).join('');"
  },
  {
    "file": "tool.html",
    "line": 663,
    "text": "${safe(code)}",
    "context": "const rows = codes.map(code => `<tr><td><code>${safe(code)}</code></td><td>${safe(codeDescriptions[code] || 'Bu kod için standart bir açıklama bulunamadı.')}</td></tr>`).join('');"
  },
  {
    "file": "tool.html",
    "line": 663,
    "text": "${safe(codeDescriptions[code] || 'Bu kod için standart bir açıklama bulunamadı.')}",
    "context": "const rows = codes.map(code => `<tr><td><code>${safe(code)}</code></td><td>${safe(codeDescriptions[code] || 'Bu kod için standart bir açıklama bulunamadı.')}</td></tr>`).join('');"
  },
  {
    "file": "tool.html",
    "line": 664,
    "text": "Tüm Doğrulama Kodları",
    "context": "return `<div class=\"section\"><h3>Tüm Doğrulama Kodları</h3><table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${rows}</tbody></table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 664,
    "text": "Kod",
    "context": "return `<div class=\"section\"><h3>Tüm Doğrulama Kodları</h3><table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${rows}</tbody></table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 664,
    "text": "Açıklama",
    "context": "return `<div class=\"section\"><h3>Tüm Doğrulama Kodları</h3><table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${rows}</tbody></table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 664,
    "text": "${rows}",
    "context": "return `<div class=\"section\"><h3>Tüm Doğrulama Kodları</h3><table class=\"codes-table\"><thead><tr><th>Kod</th><th>Açıklama</th></tr></thead><tbody>${rows}</tbody></table></div>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "VideoKit Doğrulama Raporu",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "VK",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "VideoKit Doğrulama Raporu",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Content Credentials (C2PA) Doğrulama Çıktısı",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Dosya Adı",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${safe(report.file?.name)}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Boyut",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${fmtSize(report.file?.size)}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Genel Durum",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${safe(report.verdict?.toUpperCase())}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Mesaj",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${safe(report.message)}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Süre",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${report.ms!=null?report.ms+' ms':'—'}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "İmza Zamanı (UTC)",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${safe(report.summary?.time)}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "İmza Sahibi",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${safe(report.summary?.issuer)}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Başlık",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${safe(report.summary?.title)}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Yazılım",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${safe(report.summary?.claimGenerator)}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Dosya Kimliği (SHA‑256)",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${safe(report.fileHash)}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Onay Tarihi (UTC)",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${approval}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "${getValidationDetailsHtml()}${getCodesTableHtml()}",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tool.html",
    "line": 666,
    "text": "VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.",
    "context": "const html = `<!doctype html><html><head><meta charset=\"utf-8\"><title>VideoKit Doğrulama Raporu</title><style>body{font-family:system-ui,sans-serif;margin:40px;color:#0f172a;}.header{display:flex;align-items:center;gap:12px;margin-bottom:24px}.logo{width:40px;height:40px;border-radius:8px;background:#111827;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:800;font-size:20px}.title{font-size:24px;font-weight:700}.subtitle{font-size:14px;color:#64748b}.section{margin-top:28px;page-break-inside:avoid;}.section h3{margin-bottom:10px;border-bottom:1px solid #eee;padding-bottom:6px;}table{width:100%;border-collapse:collapse;font-size:14px;}td,th{padding:8px 12px;text-align:left;vertical-align:top;}.kv-table td{border-bottom:1px solid #f0f0f0;}.kv-table strong{color:#334155;}.details-table td{width:50%;border-bottom:1px solid #f0f0f0;}.codes-table{font-size:12px;}.codes-table th{background:#f6f8fa;}.codes-table td{border:1px solid #e5e7eb;}.codes-table code{font-family:monospace;background:#eef;padding:2px 4px;border-radius:4px;word-break:break-all;}.legal{font-size:12px;color:#6b7280;margin-top:40px;}@media print{body{margin:0}}</style></head><body onload=\"focus();print();setTimeout(()=>close(),600)\"><div class=\"header\"><div class=\"logo\">VK</div><div><div class=\"title\">VideoKit Doğrulama Raporu</div><div class=\"subtitle\">Content Credentials (C2PA) Doğrulama Çıktısı</div></div></div><div class=\"section\"><table class=\"kv-table\"><tr><td><strong>Dosya Adı</strong></td><td>${safe(report.file?.name)}</td></tr><tr><td><strong>Boyut</strong></td><td>${fmtSize(report.file?.size)}</td></tr><tr><td><strong>Genel Durum</strong></td><td><strong>${safe(report.verdict?.toUpperCase())}</strong></td></tr><tr><td><strong>Mesaj</strong></td><td>${safe(report.message)}</td></tr><tr><td><strong>Süre</strong></td><td>${report.ms!=null?report.ms+' ms':'—'}</td></tr><tr><td><strong>İmza Zamanı (UTC)</strong></td><td>${safe(report.summary?.time)}</td></tr><tr><td><strong>İmza Sahibi</strong></td><td>${safe(report.summary?.issuer)}</td></tr><tr><td><strong>Başlık</strong></td><td>${safe(report.summary?.title)}</td></tr><tr><td><strong>Yazılım</strong></td><td>${safe(report.summary?.claimGenerator)}</td></tr><tr><td><strong>Dosya Kimliği (SHA‑256)</strong></td><td style=\"font-family:monospace;word-break:break-all;\">${safe(report.fileHash)}</td></tr><tr><td><strong>Onay Tarihi (UTC)</strong></td><td>${approval}</td></tr></table></div>${getValidationDetailsHtml()}${getCodesTableHtml()}<div class=\"legal\">Bu rapor VideoKit tarafından otomatik olarak oluşturulmuştur ve yalnızca bilgilendirme amaçlıdır. Hukuki bir tavsiye niteliği taşımaz.<br><br>VideoKit markası ve logosu tescillidir. Tüm hakları saklıdır.</div></body></html>`;"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 1,
    "text": "use strict",
    "context": "'use strict';"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 40,
    "text": "Literal",
    "context": "if (node.type === 'Literal' && typeof node.value === 'string') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 44,
    "text": "TemplateLiteral",
    "context": "if (node.type === 'TemplateLiteral' && node.expressions.length === 0) {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 64,
    "text": "CallExpression",
    "context": "if (!node || node.type !== 'CallExpression') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 69,
    "text": "ChainExpression",
    "context": "if (callee.type === 'ChainExpression') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 73,
    "text": "Identifier",
    "context": "if (callee.type === 'Identifier') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 77,
    "text": "MemberExpression",
    "context": "if (callee.type === 'MemberExpression') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 90,
    "text": "ChainExpression",
    "context": "if (member.type === 'ChainExpression') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 94,
    "text": "MemberExpression",
    "context": "if (member.type !== 'MemberExpression') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 104,
    "text": "Literal",
    "context": "if (property.type === 'Literal' && typeof property.value === 'string') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 110,
    "text": "Identifier",
    "context": "if (property.type === 'Identifier') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 135,
    "text": "JSXIdentifier",
    "context": "const attributeName = nameNode.type === 'JSXIdentifier' ? nameNode.name : null;"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 148,
    "text": "Literal",
    "context": "if (node.value.type === 'Literal') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 154,
    "text": "JSXExpressionContainer",
    "context": "node.value.type === 'JSXExpressionContainer' &&"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 181,
    "text": "ChainExpression",
    "context": "if (callee.type === 'ChainExpression') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 185,
    "text": "MemberExpression",
    "context": "if (callee.type !== 'MemberExpression') {"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 212,
    "text": "disallow raw string literals in UI contexts without i18n",
    "context": "description: 'disallow raw string literals in UI contexts without i18n',"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 213,
    "text": "Best Practices",
    "context": "category: 'Best Practices',"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 217,
    "text": "UI text must use translation helpers instead of raw string literals.",
    "context": "noRawString: 'UI text must use translation helpers instead of raw string literals.',"
  },
  {
    "file": "tools/eslint-rules/no-ui-literals.js",
    "line": 231,
    "text": "JSXAttribute",
    "context": "if (node.parent && node.parent.type === 'JSXAttribute') {"
  },
  {
    "file": "tools/run-i18n-audit.mjs",
    "line": 22,
    "text": "${command} ${args.join(' ')} exited with code ${code}",
    "context": "reject(new Error(`${command} ${args.join(' ')} exited with code ${code}`));"
  },
  {
    "file": "tools/run-i18n-audit.mjs",
    "line": 39,
    "text": "- ${locale}: ${keys.join(', ')}",
    "context": "lines.push(`  - ${locale}: ${keys.join(', ')}`);"
  },
  {
    "file": "tools/run-i18n-audit.mjs",
    "line": 61,
    "text": "Translation coverage below 100%.\\n${details}",
    "context": "throw new Error(`Translation coverage below 100%.\\n${details}`);"
  },
  {
    "file": "tools/run-i18n-audit.mjs",
    "line": 65,
    "text": "Translation audit found orphan used keys: ${orphanUsedKeys.join(', ')}",
    "context": "throw new Error(`Translation audit found orphan used keys: ${orphanUsedKeys.join(', ')}`);"
  },
  {
    "file": "tools/run-i18n-audit.mjs",
    "line": 68,
    "text": "✅ Translation coverage is 100% for all locales.",
    "context": "console.log('✅ Translation coverage is 100% for all locales.');"
  },
  {
    "file": "tracing.js",
    "line": 128,
    "text": "[tracing] started: service=\"${serviceName}\" ver=\"${serviceVersion}\" → ${otlpUrl}",
    "context": "console.log(`[tracing] started: service=\"${serviceName}\" ver=\"${serviceVersion}\" → ${otlpUrl}`);"
  },
  {
    "file": "tracing.js",
    "line": 130,
    "text": "[tracing] OTLP headers set:",
    "context": "console.log('[tracing] OTLP headers set:', Object.keys(otlpHeaders).join(', '));"
  },
  {
    "file": "tracing.js",
    "line": 134,
    "text": "[tracing] disabled:",
    "context": "console.warn('[tracing] disabled:', e?.message || e);"
  },
  {
    "file": "tracing.js",
    "line": 137,
    "text": "SIGTERM",
    "context": "process.on('SIGTERM', () => {"
  },
  {
    "file": "tracing.js",
    "line": 140,
    "text": "SIGINT",
    "context": "process.on('SIGINT', () => {"
  },
  {
    "file": "videokit-audit.js",
    "line": 20,
    "text": "i veya ilk kayıt ise genesis hash",
    "context": "* @returns {Promise<string>} Son kaydın hash'i veya ilk kayıt ise genesis hash'i."
  },
  {
    "file": "videokit-audit.js",
    "line": 48,
    "text": "Denetim logundaki son satır bozuk, genesis hash kullanılıyor.",
    "context": "console.error('Denetim logundaki son satır bozuk, genesis hash kullanılıyor.', e);"
  },
  {
    "file": "videokit-audit.js",
    "line": 71,
    "text": "ini hesaplarken",
    "context": "// Kendi hash'ini hesaplarken 'hash' alanı dışarıda bırakılır."
  },
  {
    "file": "videokit-audit.js",
    "line": 81,
    "text": "Denetim loguna yazılırken hata oluştu:",
    "context": "console.error('Denetim loguna yazılırken hata oluştu:', error);"
  },
  {
    "file": "videokit-audit.js",
    "line": 110,
    "text": "Bütünlük Bozulmuş: Satır ${lineNumber} geçersiz JSON formatında.",
    "context": "return { isValid: false, error: `Bütünlük Bozulmuş: Satır ${lineNumber} geçersiz JSON formatında.` };"
  },
  {
    "file": "videokit-audit.js",
    "line": 114,
    "text": "Bütünlük Bozulmuş: Satır ${lineNumber}'deki 'previousHash' uyuşmuyor.",
    "context": "return { isValid: false, error: `Bütünlük Bozulmuş: Satır ${lineNumber}'deki 'previousHash' uyuşmuyor.` };"
  },
  {
    "file": "videokit-audit.js",
    "line": 121,
    "text": "Bütünlük Bozulmuş: Satır ${lineNumber}'deki 'hash' hatalı hesaplanmış.",
    "context": "return { isValid: false, error: `Bütünlük Bozulmuş: Satır ${lineNumber}'deki 'hash' hatalı hesaplanmış.` };"
  },
  {
    "file": "videokit-audit.js",
    "line": 150,
    "text": "Denetim logu okunurken bozuk satır atlandı:",
    "context": "console.error('Denetim logu okunurken bozuk satır atlandı:', line, e);"
  },
  {
    "file": "videokit-core.js",
    "line": 36,
    "text": "İmza ve zincir geçerli.",
    "context": "if (!hasError && hasSig && !untrusted) return ['green', 'İmza ve zincir geçerli.'];"
  },
  {
    "file": "videokit-core.js",
    "line": 37,
    "text": "İmza geçerli; sertifika güven kökünde değil.",
    "context": "if (!hasError && hasSig && untrusted) return ['yellow', 'İmza geçerli; sertifika güven kökünde değil.'];"
  },
  {
    "file": "videokit-core.js",
    "line": 38,
    "text": "Doğrulama hataları var.",
    "context": "if (hasError) return ['red', 'Doğrulama hataları var.'];"
  },
  {
    "file": "videokit-core.js",
    "line": 39,
    "text": "Kısmi doğrulama.",
    "context": "return ['yellow', 'Kısmi doğrulama.'];"
  },
  {
    "file": "videokit-core.js",
    "line": 44,
    "text": "Trusted",
    "context": "if (has(/time.?stamp\\.(token\\.)?trusted/i)) return ['green', 'Trusted'];"
  },
  {
    "file": "videokit-core.js",
    "line": 45,
    "text": "Validated",
    "context": "if (has(/time.?stamp\\.(token\\.)?validated/i)) return ['yellow', 'Validated'];"
  },
  {
    "file": "videokit-core.js",
    "line": 46,
    "text": "Yok",
    "context": "return ['muted', 'Yok'];"
  },
  {
    "file": "videokit-core.js",
    "line": 53,
    "text": "PolicyViolationError",
    "context": "this.name = 'PolicyViolationError';"
  },
  {
    "file": "videokit-core.js",
    "line": 93,
    "text": "te 64-bit integer",
    "context": "// JavaScript'te 64-bit integer'ları güvenli bir şekilde işlemek zordur."
  },
  {
    "file": "videokit-core.js",
    "line": 154,
    "text": "SHA-256",
    "context": "const digest = await crypto.subtle.digest('SHA-256', buf);"
  },
  {
    "file": "videokit-core.js",
    "line": 176,
    "text": "Okuma/Doğrulama hatası",
    "context": "verdict: 'red', message: 'Okuma/Doğrulama hatası', error: String(e?.message || e),"
  },
  {
    "file": "videokit-core.js",
    "line": 216,
    "text": "Person",
    "context": "{ label: 'dcterms.creator', data: { '@type': 'Person', 'name': author } },"
  },
  {
    "file": "videokit-core.js",
    "line": 217,
    "text": "Person",
    "context": "{ label: 'stds.schema-org.CreativeWork', data: { 'author': [{ '@type': 'Person', 'name': author }] } },"
  },
  {
    "file": "videokit-core.js",
    "line": 240,
    "text": "Roughtime damgası alınamadı: ${e.message}",
    "context": "console.warn(`Roughtime damgası alınamadı: ${e.message}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 250,
    "text": "ES256",
    "context": "alg: 'ES256',"
  },
  {
    "file": "videokit-core.js",
    "line": 286,
    "text": "Manifest dosyası alınamadı: ${response.statusText}",
    "context": "if (!response.ok) throw new Error(`Manifest dosyası alınamadı: ${response.statusText}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 304,
    "text": "Desteklenmeyen manifest formatı. Sadece .m3u8 ve .mpd desteklenir.",
    "context": "throw new Error('Desteklenmeyen manifest formatı. Sadece .m3u8 ve .mpd desteklenir.');"
  },
  {
    "file": "videokit-core.js",
    "line": 308,
    "text": "Manifest içinde işlenecek segment bulunamadı.",
    "context": "throw new Error('Manifest içinde işlenecek segment bulunamadı.');"
  },
  {
    "file": "videokit-core.js",
    "line": 319,
    "text": "Segment indirilemedi: ${segmentResponse.statusText}",
    "context": "if (!segmentResponse.ok) throw new Error(`Segment indirilemedi: ${segmentResponse.statusText}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 381,
    "text": "Schema dosyası yüklenemedi: ${response.statusText}",
    "context": "if (!response.ok) throw new Error(`Schema dosyası yüklenemedi: ${response.statusText}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 385,
    "text": "KLV doğrulayıcı başlatılamadı:",
    "context": "console.error(\"KLV doğrulayıcı başlatılamadı:\", error);"
  },
  {
    "file": "videokit-core.js",
    "line": 416,
    "text": "BER length extends beyond buffer",
    "context": "if (offset + 1 + numBytes > view.length) throw new Error(\"BER length extends beyond buffer\");"
  },
  {
    "file": "videokit-core.js",
    "line": 479,
    "text": "a checksum",
    "context": "// payload'a checksum'ı ekle"
  },
  {
    "file": "videokit-core.js",
    "line": 499,
    "text": "Geçersiz KLV paketi: MISB ST 0601 UL (Universal Label) bulunamadı.",
    "context": "throw new Error(\"Geçersiz KLV paketi: MISB ST 0601 UL (Universal Label) bulunamadı.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 531,
    "text": "✅ CRC Doğrulaması Başarılı",
    "context": "result._validation_notes.push('✅ CRC Doğrulaması Başarılı');"
  },
  {
    "file": "videokit-core.js",
    "line": 533,
    "text": "❌ CRC Hatası (Alınan: ${receivedChecksum}, Hesaplanan: ${calculatedCrc})",
    "context": "result._validation_notes.push(`❌ CRC Hatası (Alınan: ${receivedChecksum}, Hesaplanan: ${calculatedCrc})`);"
  },
  {
    "file": "videokit-core.js",
    "line": 550,
    "text": "Tag 2",
    "context": "if (isFirstTag && tag !== 2 && !result['_validation_notes'].some(n => n.includes('Tag 2'))) {"
  },
  {
    "file": "videokit-core.js",
    "line": 551,
    "text": "⚠️ Uyarı: Tag 2 ilk öğe değil.",
    "context": "result._validation_notes.push('⚠️ Uyarı: Tag 2 ilk öğe değil.');"
  },
  {
    "file": "videokit-core.js",
    "line": 591,
    "text": "Tag",
    "context": "let field = err.instancePath.replace('/', 'Tag ');"
  },
  {
    "file": "videokit-core.js",
    "line": 593,
    "text": "Tag ${err.params.missingProperty}",
    "context": "field = `Tag ${err.params.missingProperty}`;"
  },
  {
    "file": "videokit-core.js",
    "line": 596,
    "text": "❌ ${field}: Değer aralık dışında. İzin verilen: ${err.params.limit}. Gelen: ${err.instancePath ? obj[err.instancePath.substring(1)] : 'N/A'}",
    "context": "errs.push(`❌ ${field}: Değer aralık dışında. İzin verilen: ${err.params.limit}. Gelen: ${err.instancePath ? obj[err.instancePath.substring(1)] : 'N/A'}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 598,
    "text": "❌ ${field}: ${err.message}",
    "context": "errs.push(`❌ ${field}: ${err.message}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 610,
    "text": "❌ Tag 2 (Unix Time Stamp): Değer, gelecekteki bir tarihi gösteremez.",
    "context": "errs.push(`❌ Tag 2 (Unix Time Stamp): Değer, gelecekteki bir tarihi gösteremez.`);"
  },
  {
    "file": "videokit-core.js",
    "line": 613,
    "text": "❌ Tag 2 (Unix Time Stamp): Geçersiz zaman damgası formatı.",
    "context": "errs.push(`❌ Tag 2 (Unix Time Stamp): Geçersiz zaman damgası formatı.`);"
  },
  {
    "file": "videokit-core.js",
    "line": 622,
    "text": "✅ Tüm şema ve semantik kontrollerden geçti.",
    "context": "errs.push(\"✅ Tüm şema ve semantik kontrollerden geçti.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 639,
    "text": "mux.js kütüphanesi yüklenmemiş.",
    "context": "return reject(new Error('mux.js kütüphanesi yüklenmemiş.'));"
  },
  {
    "file": "videokit-core.js",
    "line": 679,
    "text": "mux.js kütüphanesi yüklenmemiş.",
    "context": "throw new Error('mux.js kütüphanesi yüklenmemiş.');"
  },
  {
    "file": "videokit-core.js",
    "line": 728,
    "text": "FFmpeg zaten yüklü.",
    "context": "this._logCallback(\"FFmpeg zaten yüklü.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 731,
    "text": "FFmpeg.wasm motoru yükleniyor...",
    "context": "this._logCallback(\"FFmpeg.wasm motoru yükleniyor...\");"
  },
  {
    "file": "videokit-core.js",
    "line": 734,
    "text": "[FFmpeg]: ${message}",
    "context": "this._logCallback(`[FFmpeg]: ${message}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 740,
    "text": "✅ FFmpeg.wasm motoru başarıyla yüklendi.",
    "context": "this._logCallback(\"✅ FFmpeg.wasm motoru başarıyla yüklendi.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 748,
    "text": "Girdi dosyası yazılıyor: ${inputName}",
    "context": "this._logCallback(`Girdi dosyası yazılıyor: ${inputName}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 750,
    "text": "FFmpeg komutu çalıştırılıyor: ${commandArgs.join(' ')}",
    "context": "this._logCallback(`FFmpeg komutu çalıştırılıyor: ${commandArgs.join(' ')}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 752,
    "text": "Çıktı dosyası okunuyor: ${outputName}",
    "context": "this._logCallback(`Çıktı dosyası okunuyor: ${outputName}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 754,
    "text": "Sanal dosya sistemi temizleniyor...",
    "context": "this._logCallback(\"Sanal dosya sistemi temizleniyor...\");"
  },
  {
    "file": "videokit-core.js",
    "line": 791,
    "text": "/g, \"",
    "context": "return \"'\" + str.replace(/'/g, \"'\\\\''\") + \"'\";"
  },
  {
    "file": "videokit-core.js",
    "line": 797,
    "text": "gst-launch-1.0 filesrc location=${shellQuote(videoName)} ! qtdemux ! h24parse ! mux. filesrc location=${shellQuote(klvName)} ! klvparse mapping=st0601 ! mux. mpegtsmux name=mux ! filesink location=${shellQuote(outputName)}",
    "context": "return `gst-launch-1.0 filesrc location=${shellQuote(videoName)} ! qtdemux ! h24parse ! mux. filesrc location=${shellQuote(klvName)} ! klvparse mapping=st0601 ! mux. mpegtsmux name=mux ! filesink location=${shellQuote(outputName)}`;"
  },
  {
    "file": "videokit-core.js",
    "line": 804,
    "text": "# KLV akışının varlığını, paketlerini ve zaman damgalarını kontrol edin:\\n",
    "context": "return `# KLV akışının varlığını, paketlerini ve zaman damgalarını kontrol edin:\\n` +"
  },
  {
    "file": "videokit-core.js",
    "line": 805,
    "text": "ffprobe -v quiet -print_format json -show_streams -show_packets ${safeTsName}",
    "context": "`ffprobe -v quiet -print_format json -show_streams -show_packets ${safeTsName}`;"
  },
  {
    "file": "videokit-core.js",
    "line": 808,
    "text": "ffmpeg -i ${safeTsName} -map 0:d -c copy -f data \"${shellQuote(outputName)}\"",
    "context": "return `ffmpeg -i ${safeTsName} -map 0:d -c copy -f data \"${shellQuote(outputName)}\"`;"
  },
  {
    "file": "videokit-core.js",
    "line": 811,
    "text": "ffmpeg -i ${safeTsName} -map 0:v -c copy ${shellQuote(outputName)}",
    "context": "return `ffmpeg -i ${safeTsName} -map 0:v -c copy ${shellQuote(outputName)}`;"
  },
  {
    "file": "videokit-core.js",
    "line": 820,
    "text": "❌ KLV Akışı Bulunamadı (codec_type=\"data\" yok).",
    "context": "report.push('❌ KLV Akışı Bulunamadı (codec_type=\"data\" yok).');"
  },
  {
    "file": "videokit-core.js",
    "line": 824,
    "text": "✅ KLV Akışı Bulundu:",
    "context": "report.push(`✅ KLV Akışı Bulundu:`);"
  },
  {
    "file": "videokit-core.js",
    "line": 825,
    "text": "- PID: ${pid} (0x${pid.toString(16)}) (Stream Index: ${klvStream.index})",
    "context": "report.push(`  - PID: ${pid} (0x${pid.toString(16)}) (Stream Index: ${klvStream.index})`);"
  },
  {
    "file": "videokit-core.js",
    "line": 827,
    "text": "- Toplam KLV Paketi: ${klvPackets.length}",
    "context": "report.push(`  - Toplam KLV Paketi: ${klvPackets.length}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 829,
    "text": "Analiz Raporu:\\n",
    "context": "return \"Analiz Raporu:\\n\" + report.join('\\n');"
  },
  {
    "file": "videokit-core.js",
    "line": 837,
    "text": "VideoKitKeyStore",
    "context": "_db: null, name: 'VideoKitKeyStore', storeName: 'keys',"
  },
  {
    "file": "videokit-core.js",
    "line": 864,
    "text": "SHA-256",
    "context": "const digest = await crypto.subtle.digest('SHA-256', buf);"
  },
  {
    "file": "videokit-core.js",
    "line": 873,
    "text": "ECDSA",
    "context": "const pair = await crypto.subtle.generateKey({ name: 'ECDSA', namedCurve: 'P-256' }, true, ['sign', 'verify']);"
  },
  {
    "file": "videokit-core.js",
    "line": 873,
    "text": "P-256",
    "context": "const pair = await crypto.subtle.generateKey({ name: 'ECDSA', namedCurve: 'P-256' }, true, ['sign', 'verify']);"
  },
  {
    "file": "videokit-core.js",
    "line": 877,
    "text": "Yeni aktif anahtar oluşturuldu: ${fingerprint}",
    "context": "console.log(`Yeni aktif anahtar oluşturuldu: ${fingerprint}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 885,
    "text": "nin clear",
    "context": "// Bu işlem daha karmaşık hale geldiği için IndexedDB'nin clear'ını doğrudan kullanmak yerine"
  },
  {
    "file": "videokit-core.js",
    "line": 888,
    "text": "Anahtar deposu temizlendi.",
    "context": "console.log(\"Anahtar deposu temizlendi.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 898,
    "text": "Aktif anahtar bulunamadı.",
    "context": "console.warn(\"Aktif anahtar bulunamadı.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 921,
    "text": "Anahtar devri işlemi başlatılıyor...",
    "context": "console.log(\"Anahtar devri işlemi başlatılıyor...\");"
  },
  {
    "file": "videokit-core.js",
    "line": 926,
    "text": "Anahtar devri için eski aktif anahtarın sertifikası (PEM) gereklidir.",
    "context": "throw new Error(\"Anahtar devri için eski aktif anahtarın sertifikası (PEM) gereklidir.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 930,
    "text": "Eski sertifika (${addedCertInfo.fingerprint.slice(0,12)}...) güven listesine eklendi.",
    "context": "console.log(`Eski sertifika (${addedCertInfo.fingerprint.slice(0,12)}...) güven listesine eklendi.`);"
  },
  {
    "file": "videokit-core.js",
    "line": 932,
    "text": "Zaten mevcut",
    "context": "// \"Zaten mevcut\" hatasını görmezden gel, diğer hataları fırlat"
  },
  {
    "file": "videokit-core.js",
    "line": 933,
    "text": "zaten güven listesinde mevcut",
    "context": "if (!e.message.includes('zaten güven listesinde mevcut')) {"
  },
  {
    "file": "videokit-core.js",
    "line": 936,
    "text": "Eski sertifika zaten güven listesindeydi, işleme devam ediliyor.",
    "context": "console.warn(\"Eski sertifika zaten güven listesindeydi, işleme devam ediliyor.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 944,
    "text": "Anahtar devri tamamlandı. Yeni aktif anahtar: ${newFingerprint}",
    "context": "console.log(`Anahtar devri tamamlandı. Yeni aktif anahtar: ${newFingerprint}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 952,
    "text": "Gerekli kriptografi kütüphaneleri (PKI.js, ASN1.js) yüklenmemiş.",
    "context": "throw new Error(\"Gerekli kriptografi kütüphaneleri (PKI.js, ASN1.js) yüklenmemiş.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 955,
    "text": "SHA-256",
    "context": "const hash = await crypto.subtle.digest('SHA-256', dataToTimestamp);"
  },
  {
    "file": "videokit-core.js",
    "line": 958,
    "text": "POST",
    "context": "const response = await fetch(tsaServerUrl, { method: 'POST', headers: { 'Content-Type': 'application/timestamp-query' }, body: reqBer });"
  },
  {
    "file": "videokit-core.js",
    "line": 958,
    "text": "Content-Type",
    "context": "const response = await fetch(tsaServerUrl, { method: 'POST', headers: { 'Content-Type': 'application/timestamp-query' }, body: reqBer });"
  },
  {
    "file": "videokit-core.js",
    "line": 959,
    "text": "TSA sunucusu hatası: ${response.status} ${response.statusText}",
    "context": "if (!response.ok) throw new Error(`TSA sunucusu hatası: ${response.status} ${response.statusText}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 962,
    "text": "TSA yanıtı çözümlenemedi (invalid ASN.1).",
    "context": "if (asn1.offset === -1) throw new Error(\"TSA yanıtı çözümlenemedi (invalid ASN.1).\");"
  },
  {
    "file": "videokit-core.js",
    "line": 965,
    "text": "TSA isteği reddetti. Durum: ${statusCode}",
    "context": "if (statusCode !== 0 && statusCode !== 1) throw new Error(`TSA isteği reddetti. Durum: ${statusCode}`);"
  },
  {
    "file": "videokit-core.js",
    "line": 977,
    "text": "Gerekli kriptografi kütüphaneleri (PKI.js, ASN1.js) yüklenmemiş.",
    "context": "throw new Error(\"Gerekli kriptografi kütüphaneleri (PKI.js, ASN1.js) yüklenmemiş.\");"
  },
  {
    "file": "videokit-core.js",
    "line": 979,
    "text": "-----BEGIN CERTIFICATE-----",
    "context": "if (!pem.startsWith('-----BEGIN CERTIFICATE-----') || !pem.endsWith('-----END CERTIFICATE-----')) {"
  },
  {
    "file": "videokit-core.js",
    "line": 979,
    "text": "-----END CERTIFICATE-----",
    "context": "if (!pem.startsWith('-----BEGIN CERTIFICATE-----') || !pem.endsWith('-----END CERTIFICATE-----')) {"
  },
  {
    "file": "videokit-core.js",
    "line": 980,
    "text": "Geçersiz PEM formatı.",
    "context": "throw new Error('Geçersiz PEM formatı.');"
  },
  {
    "file": "videokit-core.js",
    "line": 985,
    "text": "${tv.type.slice(tv.type.lastIndexOf('.') + 1)}=${tv.value.valueBlock.value}",
    "context": "const subject = cert.subject.typesAndValues.map(tv => `${tv.type.slice(tv.type.lastIndexOf('.') + 1)}=${tv.value.valueBlock.value}`).join(', ');"
  },
  {
    "file": "videokit-core.js",
    "line": 986,
    "text": "SHA-1",
    "context": "const hashBuffer = await crypto.subtle.digest('SHA-1', der);"
  },
  {
    "file": "videokit-core.js",
    "line": 990,
    "text": "Bu sertifika zaten güven listesinde mevcut.",
    "context": "throw new Error('Bu sertifika zaten güven listesinde mevcut.');"
  },
  {
    "file": "videokit-core.js",
    "line": 1009,
    "text": "sinin) URL",
    "context": "* @param {string} serverUrl Roughtime sunucusunun (veya proxy'sinin) URL'i."
  },
  {
    "file": "videokit-core.js",
    "line": 1017,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "videokit-core.js",
    "line": 1018,
    "text": "Content-Type",
    "context": "headers: { 'Content-Type': 'application/octet-stream' },"
  },
  {
    "file": "videokit-core.js",
    "line": 1023,
    "text": "Roughtime sunucusu hatası: ${response.status} ${response.statusText}",
    "context": "throw new Error(`Roughtime sunucusu hatası: ${response.status} ${response.statusText}`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 5,
    "text": "YOUR_API_KEY_HERE",
    "context": "//    export VIDEOKIT_API_KEY=\"YOUR_API_KEY_HERE\""
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 21,
    "text": "Hata: Lütfen VIDEOKIT_API_KEY ortam değişkenini ayarlayın.",
    "context": "console.error('Hata: Lütfen VIDEOKIT_API_KEY ortam değişkenini ayarlayın.');"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 28,
    "text": "Uyarı: VIDEO_FILE_PATH ortam değişkeni ayarlanmamış. Örnek bir dosya yolu varsayılıyor.",
    "context": "console.warn('Uyarı: VIDEO_FILE_PATH ortam değişkeni ayarlanmamış. Örnek bir dosya yolu varsayılıyor.');"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 29,
    "text": "Lütfen bu yolu kendi video dosyanızla değiştirin.",
    "context": "console.warn('Lütfen bu yolu kendi video dosyanızla değiştirin.');"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 33,
    "text": "VideoKit SDK başlatılıyor...",
    "context": "console.log(`VideoKit SDK başlatılıyor...`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 34,
    "text": "Video dosyası doğrulanıyor: ${filePath}",
    "context": "console.log(`Video dosyası doğrulanıyor: ${filePath}`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 42,
    "text": "waitForResult: true",
    "context": "// `waitForResult: true` SDK'nın iş tamamlanana kadar beklemesini sağlar."
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 46,
    "text": "\\n--- Doğrulama Sonucu ---",
    "context": "console.log('\\n--- Doğrulama Sonucu ---');"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 47,
    "text": "İş ID: ${result.jobId}",
    "context": "console.log(`İş ID: ${result.jobId}`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 48,
    "text": "Durum: ${result.state}",
    "context": "console.log(`Durum: ${result.state}`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 51,
    "text": "Karar: ${result.result.verdict}",
    "context": "console.log(`Karar: ${result.result.verdict}`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 52,
    "text": "Mesaj: \"${result.result.message}\"",
    "context": "console.log(`Mesaj: \"${result.result.message}\"`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 54,
    "text": "Hata: ${result.error}",
    "context": "console.error(`Hata: ${result.error}`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 57,
    "text": "\\nİşlem başarıyla tamamlandı.",
    "context": "console.log('\\nİşlem başarıyla tamamlandı.');"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 60,
    "text": "\\n--- Bir Hata Oluştu ---",
    "context": "console.error('\\n--- Bir Hata Oluştu ---');"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 62,
    "text": "HTTP Durumu: ${error.status}",
    "context": "console.error(`HTTP Durumu: ${error.status}`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 63,
    "text": "API Mesajı: ${error.message}",
    "context": "console.error(`API Mesajı: ${error.message}`);"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 64,
    "text": "API Yanıtı:",
    "context": "console.error('API Yanıtı:', JSON.stringify(error.responseBody, null, 2));"
  },
  {
    "file": "videokit-js-sdk:examples:verify_video.js",
    "line": 66,
    "text": "Beklenmedik bir hata:",
    "context": "console.error('Beklenmedik bir hata:', error.message);"
  },
  {
    "file": "videokit-js-sdk:src:index.ts",
    "line": 69,
    "text": "VideoKitError",
    "context": "this.name = 'VideoKitError';"
  },
  {
    "file": "videokit-js-sdk:src:index.ts",
    "line": 83,
    "text": "API anahtarı (apiKey) gereklidir.",
    "context": "throw new Error('API anahtarı (apiKey) gereklidir.');"
  },
  {
    "file": "videokit-js-sdk:src:index.ts",
    "line": 92,
    "text": "X-API-Key",
    "context": "'X-API-Key': this.apiKey,"
  },
  {
    "file": "videokit-js-sdk:src:index.ts",
    "line": 103,
    "text": "Yanıt gövdesi JSON formatında değil.",
    "context": "errorBody = { error: 'Yanıt gövdesi JSON formatında değil.' };"
  },
  {
    "file": "videokit-js-sdk:src:index.ts",
    "line": 106,
    "text": "API hatası: ${response.statusText} (${response.status})",
    "context": "`API hatası: ${response.statusText} (${response.status})`,"
  },
  {
    "file": "videokit-js-sdk:src:index.ts",
    "line": 143,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "videokit-js-sdk:src:index.ts",
    "line": 161,
    "text": "İş sonucu ${pollingTimeout}ms içinde alınamadı.",
    "context": "return reject(new Error(`İş sonucu ${pollingTimeout}ms içinde alınamadı.`));"
  },
  {
    "file": "videokit-js-sdk:src:index.ts",
    "line": 171,
    "text": "İş başarısız oldu.",
    "context": "reject(new VideoKitError(job.error || 'İş başarısız oldu.', 500, job));"
  },
  {
    "file": "videokit-pki.js",
    "line": 6,
    "text": "CERTIFICATE",
    "context": "* @param {string} label - PEM başlıklarında kullanılacak etiket (örn: 'CERTIFICATE')."
  },
  {
    "file": "videokit-pki.js",
    "line": 12,
    "text": "-----BEGIN ${label}-----\\n${lines.join('\\n')}\\n-----END ${label}-----\\n",
    "context": "return `-----BEGIN ${label}-----\\n${lines.join('\\n')}\\n-----END ${label}-----\\n`;"
  },
  {
    "file": "videokit-pki.js",
    "line": 23,
    "text": "PKI işlemleri için PKI.js ve ASN1.js kütüphaneleri gereklidir.",
    "context": "throw new Error(\"PKI işlemleri için PKI.js ve ASN1.js kütüphaneleri gereklidir.\");"
  },
  {
    "file": "videokit-pki.js",
    "line": 51,
    "text": "SHA-256",
    "context": "await certificate.sign(keyPair.privateKey, \"SHA-256\");"
  },
  {
    "file": "videokit-pki.js",
    "line": 64,
    "text": "VideoKit Rollover Identity",
    "context": "* @param {string} [params.newCertCommonName='VideoKit Rollover Identity'] - Yeni oluşturulacak sertifika için CN."
  },
  {
    "file": "videokit-pki.js",
    "line": 68,
    "text": "VideoKit Rollover Identity",
    "context": "fullRolloverProcess: async ({ oldCertificatePem, newCertCommonName = 'VideoKit Rollover Identity' }) => {"
  },
  {
    "file": "videokit-pki.js",
    "line": 69,
    "text": "[PKI] Tam anahtar devri süreci başlatılıyor...",
    "context": "console.log('[PKI] Tam anahtar devri süreci başlatılıyor...');"
  },
  {
    "file": "videokit-pki.js",
    "line": 74,
    "text": "[PKI] Core rollover tamamlandı. Yeni anahtar parmak izi: ${newFingerprint}",
    "context": "console.log(`[PKI] Core rollover tamamlandı. Yeni anahtar parmak izi: ${newFingerprint}`);"
  },
  {
    "file": "videokit-pki.js",
    "line": 77,
    "text": "[PKI] Yeni anahtar çifti için kendinden imzalı sertifika oluşturuluyor...",
    "context": "console.log('[PKI] Yeni anahtar çifti için kendinden imzalı sertifika oluşturuluyor...');"
  },
  {
    "file": "videokit-pki.js",
    "line": 79,
    "text": "CERTIFICATE",
    "context": "const newCertificatePem = _formatToPem(newCertDer, 'CERTIFICATE');"
  },
  {
    "file": "videokit-pki.js",
    "line": 80,
    "text": "[PKI] Yeni sertifika başarıyla oluşturuldu ve PEM formatına çevrildi.",
    "context": "console.log('[PKI] Yeni sertifika başarıyla oluşturuldu ve PEM formatına çevrildi.');"
  },
  {
    "file": "videokit-pki.js",
    "line": 96,
    "text": "PRIVATE KEY",
    "context": "return _formatToPem(pkcs8Buffer, 'PRIVATE KEY');"
  },
  {
    "file": "videokit-signer.js",
    "line": 7,
    "text": "PolicyViolationError",
    "context": "this.name = 'PolicyViolationError';"
  },
  {
    "file": "videokit-signer.js",
    "line": 18,
    "text": "pkcs11js export şekli desteklenmedi",
    "context": "if (!P11Ctor) throw new Error('pkcs11js export şekli desteklenmedi');"
  },
  {
    "file": "videokit-signer.js",
    "line": 22,
    "text": "HSM modunu kullanmak için \"pkcs11js\" gerekli. HSM kullanmıyorsan sorun yok;",
    "context": "'HSM modunu kullanmak için \"pkcs11js\" gerekli. HSM kullanmıyorsan sorun yok; ' +"
  },
  {
    "file": "videokit-signer.js",
    "line": 23,
    "text": "HSM kullanacaksan bu konteynerde build araçlarını kur (Alpine: apk add --no-cache python3 make g++)",
    "context": "'HSM kullanacaksan bu konteynerde build araçlarını kur (Alpine: apk add --no-cache python3 make g++) ' +"
  },
  {
    "file": "videokit-signer.js",
    "line": 24,
    "text": "ve \"npm i pkcs11js\" yap. Aksi halde SIGNING_POLICY_HARDWARE_ONLY=false ile bellek imzalama kullan.",
    "context": "'ve \"npm i pkcs11js\" yap. Aksi halde SIGNING_POLICY_HARDWARE_ONLY=false ile bellek imzalama kullan.'"
  },
  {
    "file": "videokit-signer.js",
    "line": 31,
    "text": "[Signer] Bellek tabanlı (Vault) imzalayıcı kullanılıyor.",
    "context": "console.log('[Signer] Bellek tabanlı (Vault) imzalayıcı kullanılıyor.');"
  },
  {
    "file": "videokit-signer.js",
    "line": 33,
    "text": "Bellek imzalayıcı için privateKey ve certificate PEM içeriği gereklidir.",
    "context": "throw new Error('Bellek imzalayıcı için privateKey ve certificate PEM içeriği gereklidir.');"
  },
  {
    "file": "videokit-signer.js",
    "line": 40,
    "text": "[Signer] HSM tabanlı imzalayıcı kullanılıyor. Kütüphane: ${library}",
    "context": "console.log(`[Signer] HSM tabanlı imzalayıcı kullanılıyor. Kütüphane: ${library}`);"
  },
  {
    "file": "videokit-signer.js",
    "line": 53,
    "text": "Yapılandırılan slot (${slot}) mevcut değil. Kullanılabilir slot sayısı: ${slots.length}",
    "context": "throw new Error(`Yapılandırılan slot (${slot}) mevcut değil. Kullanılabilir slot sayısı: ${slots.length}`);"
  },
  {
    "file": "videokit-signer.js",
    "line": 64,
    "text": "[Signer] HSM slot ${slot} için başarıyla oturum açıldı.",
    "context": "console.log(`[Signer] HSM slot ${slot} için başarıyla oturum açıldı.`);"
  },
  {
    "file": "videokit-signer.js",
    "line": 69,
    "text": "HSM'de \"${keyLabel}\" etiketli özel anahtar bulunamadı.",
    "context": "throw new Error(`HSM'de \"${keyLabel}\" etiketli özel anahtar bulunamadı.`);"
  },
  {
    "file": "videokit-signer.js",
    "line": 71,
    "text": "[Signer] \"${keyLabel}\" etiketli özel anahtar başarıyla bulundu.",
    "context": "console.log(`[Signer] \"${keyLabel}\" etiketli özel anahtar başarıyla bulundu.`);"
  },
  {
    "file": "videokit-signer.js",
    "line": 88,
    "text": "[Signer] HSM oturumu güvenli bir şekilde kapatıldı.",
    "context": "console.log('[Signer] HSM oturumu güvenli bir şekilde kapatıldı.');"
  },
  {
    "file": "videokit-signer.js",
    "line": 100,
    "text": "HSM imzalayıcı için sertifika içeriği (key.public) belirtilmelidir.",
    "context": "throw new Error('HSM imzalayıcı için sertifika içeriği (key.public) belirtilmelidir.');"
  },
  {
    "file": "videokit-signer.js",
    "line": 108,
    "text": "Politika ihlali: Donanım (HSM) zorunlu ancak yapılandırılmamış.",
    "context": "'Politika ihlali: Donanım (HSM) zorunlu ancak yapılandırılmamış. ' +"
  },
  {
    "file": "videokit-signer.js",
    "line": 109,
    "text": "Ya HSM ayarlarını gir ya da SIGNING_POLICY_HARDWARE_ONLY=false yap.",
    "context": "'Ya HSM ayarlarını gir ya da SIGNING_POLICY_HARDWARE_ONLY=false yap.'"
  },
  {
    "file": "vk-cli.js",
    "line": 38,
    "text": "EEXIST",
    "context": "if (error.code !== 'EEXIST') throw error;"
  },
  {
    "file": "vk-cli.js",
    "line": 48,
    "text": "ENOENT",
    "context": "if (error.code === 'ENOENT') {"
  },
  {
    "file": "vk-cli.js",
    "line": 124,
    "text": "Fire-and-forget",
    "context": "// \"Fire-and-forget\": Ağ hatası veya sunucuya ulaşılamaması durumu"
  },
  {
    "file": "vk-cli.js",
    "line": 127,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "vk-cli.js",
    "line": 129,
    "text": "Content-Type",
    "context": "headers: { 'Content-Type': 'application/json' },"
  },
  {
    "file": "vk-cli.js",
    "line": 147,
    "text": "EEXIST",
    "context": "if (error.code !== 'EEXIST') throw error;"
  },
  {
    "file": "vk-cli.js",
    "line": 171,
    "text": "CN",
    "context": "const subject = cert.subject.getField('CN')?.value || 'N/A';"
  },
  {
    "file": "vk-cli.js",
    "line": 172,
    "text": "CN",
    "context": "const issuer = cert.issuer.getField('CN')?.value || 'N/A';"
  },
  {
    "file": "vk-cli.js",
    "line": 176,
    "text": "Parse Error",
    "context": "certsInfo.push({ filename: file, subject: 'Parse Error', issuer: e.message, expiry: '' });"
  },
  {
    "file": "vk-cli.js",
    "line": 189,
    "text": "ENOENT",
    "context": "if (error.code === 'ENOENT') return false; // Dosya zaten yok"
  },
  {
    "file": "vk-cli.js",
    "line": 297,
    "text": "BER length extends beyond buffer",
    "context": "if (offset + 1 + numBytes > view.length) throw new Error(\"BER length extends beyond buffer\");"
  },
  {
    "file": "vk-cli.js",
    "line": 373,
    "text": "Geçersiz KLV paketi: MISB ST 0601 UL (Universal Label) bulunamadı.",
    "context": "throw new Error(\"Geçersiz KLV paketi: MISB ST 0601 UL (Universal Label) bulunamadı.\");"
  },
  {
    "file": "vk-cli.js",
    "line": 424,
    "text": "❌ Manifest bulunamadı veya dosya okunamadı.",
    "context": "return '❌ Manifest bulunamadı veya dosya okunamadı.';"
  },
  {
    "file": "vk-cli.js",
    "line": 428,
    "text": "❌ Aktif manifest bulunamadı.",
    "context": "return '❌ Aktif manifest bulunamadı.';"
  },
  {
    "file": "vk-cli.js",
    "line": 436,
    "text": "❌ Sertifika İptal Edilmiş: ${revokedStatus?.explanation || revokedStatus?.code}",
    "context": "return `❌ Sertifika İptal Edilmiş: ${revokedStatus?.explanation || revokedStatus?.code}`;"
  },
  {
    "file": "vk-cli.js",
    "line": 442,
    "text": "❌ Doğrulama Hatası: ${error?.explanation || error?.code}",
    "context": "return `❌ Doğrulama Hatası: ${error?.explanation || error?.code}`;"
  },
  {
    "file": "vk-cli.js",
    "line": 446,
    "text": "⚠️ İmza geçerli, ancak sertifika güvenilir bir köke zincirlenmemiş.",
    "context": "return '⚠️ İmza geçerli, ancak sertifika güvenilir bir köke zincirlenmemiş.';"
  },
  {
    "file": "vk-cli.js",
    "line": 450,
    "text": "✅ İmza ve zincir geçerli.",
    "context": "return '✅ İmza ve zincir geçerli.';"
  },
  {
    "file": "vk-cli.js",
    "line": 452,
    "text": "ℹ️ Manifest doğrulandı, ancak tam bir imza zinciri bulunamadı.",
    "context": "return 'ℹ️ Manifest doğrulandı, ancak tam bir imza zinciri bulunamadı.';"
  },
  {
    "file": "vk-cli.js",
    "line": 457,
    "text": "VideoKit İçerik Güvenilirliği Platformu CLI",
    "context": ".description('VideoKit İçerik Güvenilirliği Platformu CLI')"
  },
  {
    "file": "vk-cli.js",
    "line": 458,
    "text": "-v, --version",
    "context": ".version(CURRENT_VERSION, '-v, --version', 'Mevcut sürümü göster');"
  },
  {
    "file": "vk-cli.js",
    "line": 458,
    "text": "Mevcut sürümü göster",
    "context": ".version(CURRENT_VERSION, '-v, --version', 'Mevcut sürümü göster');"
  },
  {
    "file": "vk-cli.js",
    "line": 462,
    "text": "VideoKit CLI aracını en son sürüme güvenli bir şekilde günceller.",
    "context": ".description('VideoKit CLI aracını en son sürüme güvenli bir şekilde günceller.')"
  },
  {
    "file": "vk-cli.js",
    "line": 467,
    "text": "Mevcut sürüm: ${CURRENT_VERSION}",
    "context": "console.log(`Mevcut sürüm: ${CURRENT_VERSION}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 468,
    "text": "En son sürüm kontrol ediliyor...",
    "context": "console.log('En son sürüm kontrol ediliyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 473,
    "text": "Accept",
    "context": "const res = await fetch(releaseUrl, { headers: { 'Accept': 'application/vnd.github.v3+json' } });"
  },
  {
    "file": "vk-cli.js",
    "line": 474,
    "text": "GitHub API'sinden sürüm bilgisi alınamadı. Durum: ${res.status}",
    "context": "if (!res.ok) throw new Error(`GitHub API'sinden sürüm bilgisi alınamadı. Durum: ${res.status}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 480,
    "text": "✅ VideoKit CLI zaten en güncel sürümde.",
    "context": "console.log('✅ VideoKit CLI zaten en güncel sürümde.');"
  },
  {
    "file": "vk-cli.js",
    "line": 483,
    "text": "Yeni sürüm bulundu: ${latestVersion}. Güncelleme başlatılıyor...",
    "context": "console.log(`Yeni sürüm bulundu: ${latestVersion}. Güncelleme başlatılıyor...`);"
  },
  {
    "file": "vk-cli.js",
    "line": 493,
    "text": "Platformunuz (${platform}) için gerekli güncelleme dosyaları bulunamadı.",
    "context": "throw new Error(`Platformunuz (${platform}) için gerekli güncelleme dosyaları bulunamadı.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 501,
    "text": "Güncelleme dosyaları indiriliyor...",
    "context": "console.log('Güncelleme dosyaları indiriliyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 506,
    "text": "İmza doğrulanıyor...",
    "context": "console.log('İmza doğrulanıyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 520,
    "text": "✅ Güvenlik doğrulaması başarılı!",
    "context": "console.log('✅ Güvenlik doğrulaması başarılı!');"
  },
  {
    "file": "vk-cli.js",
    "line": 523,
    "text": "Eski dosya (${currentExecPath}) yenisiyle değiştiriliyor...",
    "context": "console.log(`Eski dosya (${currentExecPath}) yenisiyle değiştiriliyor...`);"
  },
  {
    "file": "vk-cli.js",
    "line": 528,
    "text": "✨ VideoKit CLI başarıyla ${latestVersion} sürümüne güncellendi!",
    "context": "console.log(`✨ VideoKit CLI başarıyla ${latestVersion} sürümüne güncellendi!`);"
  },
  {
    "file": "vk-cli.js",
    "line": 532,
    "text": "SigstoreVerificationError",
    "context": "if (e.name === 'SigstoreVerificationError') {"
  },
  {
    "file": "vk-cli.js",
    "line": 533,
    "text": "❌ HATA: Güncelleme iptal edildi. Güvenlik doğrulaması başarısız!",
    "context": "console.error('❌ HATA: Güncelleme iptal edildi. Güvenlik doğrulaması başarısız!');"
  },
  {
    "file": "vk-cli.js",
    "line": 535,
    "text": "❌ HATA: Güncelleme sırasında bir sorun oluştu: ${e.message}",
    "context": "console.error(`❌ HATA: Güncelleme sırasında bir sorun oluştu: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 550,
    "text": "verify <filePath>",
    "context": ".command('verify <filePath>')"
  },
  {
    "file": "vk-cli.js",
    "line": 551,
    "text": "Bir video dosyasındaki C2PA manifestini doğrular.",
    "context": ".description('Bir video dosyasındaki C2PA manifestini doğrular.')"
  },
  {
    "file": "vk-cli.js",
    "line": 556,
    "text": "🔍 ${path.basename(filePath)} doğrulanıyor...",
    "context": "console.log(`🔍 ${path.basename(filePath)} doğrulanıyor...`);"
  },
  {
    "file": "vk-cli.js",
    "line": 560,
    "text": "ℹ️ Trust store'dan ${trustAnchors.length} adet ek kök sertifika kullanılıyor.",
    "context": "console.log(`ℹ️  Trust store'dan ${trustAnchors.length} adet ek kök sertifika kullanılıyor.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 562,
    "text": "ℹ️ Çevrimiçi iptal kontrolü (OCSP/CRL) etkinleştirildi.",
    "context": "console.log(`ℹ️  Çevrimiçi iptal kontrolü (OCSP/CRL) etkinleştirildi.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 568,
    "text": "Hata: ${e.message}",
    "context": "console.error(`Hata: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 577,
    "text": "stamp <filePath>",
    "context": ".command('stamp <filePath>')"
  },
  {
    "file": "vk-cli.js",
    "line": 578,
    "text": "Bir video dosyası için .c2pa sidecar manifesti oluşturur.",
    "context": ".description('Bir video dosyası için .c2pa sidecar manifesti oluşturur.')"
  },
  {
    "file": "vk-cli.js",
    "line": 579,
    "text": "-a, --author <name>",
    "context": ".requiredOption('-a, --author <name>', 'Manifeste eklenecek yazar adı (Creator)')"
  },
  {
    "file": "vk-cli.js",
    "line": 579,
    "text": "Manifeste eklenecek yazar adı (Creator)",
    "context": ".requiredOption('-a, --author <name>', 'Manifeste eklenecek yazar adı (Creator)')"
  },
  {
    "file": "vk-cli.js",
    "line": 580,
    "text": "-s, --agent <name>",
    "context": ".option('-s, --agent <name>', 'Kullanan yazılım bilgisi', 'VideoKit CLI v1.0')"
  },
  {
    "file": "vk-cli.js",
    "line": 580,
    "text": "Kullanan yazılım bilgisi",
    "context": ".option('-s, --agent <name>', 'Kullanan yazılım bilgisi', 'VideoKit CLI v1.0')"
  },
  {
    "file": "vk-cli.js",
    "line": 580,
    "text": "VideoKit CLI v1.0",
    "context": ".option('-s, --agent <name>', 'Kullanan yazılım bilgisi', 'VideoKit CLI v1.0')"
  },
  {
    "file": "vk-cli.js",
    "line": 581,
    "text": "--tsa-url <url>",
    "context": ".option('--tsa-url <url>', 'Kullanılacak Zaman Damgası Yetkilisi (TSA) sunucusu')"
  },
  {
    "file": "vk-cli.js",
    "line": 581,
    "text": "Kullanılacak Zaman Damgası Yetkilisi (TSA) sunucusu",
    "context": ".option('--tsa-url <url>', 'Kullanılacak Zaman Damgası Yetkilisi (TSA) sunucusu')"
  },
  {
    "file": "vk-cli.js",
    "line": 582,
    "text": "Sadece son 24 saat içinde oluşturulmuş videoları mühürler.",
    "context": ".option('--capture-only', 'Sadece son 24 saat içinde oluşturulmuş videoları mühürler.')"
  },
  {
    "file": "vk-cli.js",
    "line": 587,
    "text": "✒️ ${path.basename(filePath)} için manifest oluşturuluyor...",
    "context": "console.log(`✒️  ${path.basename(filePath)} için manifest oluşturuluyor...`);"
  },
  {
    "file": "vk-cli.js",
    "line": 590,
    "text": "Güvenlik Kilidi aktif: Video oluşturma tarihi kontrol ediliyor...",
    "context": "console.log('Güvenlik Kilidi aktif: Video oluşturma tarihi kontrol ediliyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 596,
    "text": "Politika İhlali: Video, 24 saatten daha eski olduğu için mühürlenemez. (Oluşturma: ${creationTime.toISOString()})",
    "context": "`Politika İhlali: Video, 24 saatten daha eski olduğu için mühürlenemez. (Oluşturma: ${creationTime.toISOString()})`"
  },
  {
    "file": "vk-cli.js",
    "line": 599,
    "text": "✅ Video oluşturma tarihi politikaya uygun.",
    "context": "console.log('✅ Video oluşturma tarihi politikaya uygun.');"
  },
  {
    "file": "vk-cli.js",
    "line": 601,
    "text": "⚠️ Video oluşturma tarihi metaveriden okunamadı, politikayı es geçiliyor.",
    "context": "console.log('⚠️  Video oluşturma tarihi metaveriden okunamadı, politikayı es geçiliyor.');"
  },
  {
    "file": "vk-cli.js",
    "line": 614,
    "text": "Person",
    "context": "{ label: 'stds.schema-org.CreativeWork', data: { author: [{ '@type': 'Person', name: options.author }] } },"
  },
  {
    "file": "vk-cli.js",
    "line": 626,
    "text": "Zaman damgası için kullanılıyor: ${tsaUrl}",
    "context": "console.log(`Zaman damgası için kullanılıyor: ${tsaUrl}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 634,
    "text": "✅ Başarılı! Sidecar dosyası şuraya kaydedildi: ${sidecarPath}",
    "context": "console.log(`✅ Başarılı! Sidecar dosyası şuraya kaydedildi: ${sidecarPath}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 637,
    "text": "ENOENT",
    "context": "if (e.code === 'ENOENT') {"
  },
  {
    "file": "vk-cli.js",
    "line": 638,
    "text": "Hata: İmzalama için gerekli anahtar/sertifika dosyası bulunamadı.",
    "context": "console.error(`Hata: İmzalama için gerekli anahtar/sertifika dosyası bulunamadı.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 639,
    "text": "vk keygen",
    "context": "console.error(`Lütfen 'vk keygen' komutunu çalıştırın veya 'vk config set' ile doğru dosya yollarını belirtin.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 639,
    "text": "vk config set",
    "context": "console.error(`Lütfen 'vk keygen' komutunu çalıştırın veya 'vk config set' ile doğru dosya yollarını belirtin.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 639,
    "text": "Lütfen 'vk keygen' komutunu çalıştırın veya 'vk config set' ile doğru dosya yollarını belirtin.",
    "context": "console.error(`Lütfen 'vk keygen' komutunu çalıştırın veya 'vk config set' ile doğru dosya yollarını belirtin.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 641,
    "text": "❌ Hata: ${e.message}",
    "context": "console.error(`❌ Hata: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 652,
    "text": "İmzalama için bir özel anahtar ve kendinden imzalı sertifika oluşturur.",
    "context": ".description(`İmzalama için bir özel anahtar ve kendinden imzalı sertifika oluşturur.`)"
  },
  {
    "file": "vk-cli.js",
    "line": 660,
    "text": "Anahtar çifti ve sertifika oluşturuluyor...",
    "context": "console.log('Anahtar çifti ve sertifika oluşturuluyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 664,
    "text": "✅ Başarılı! Dosyalar oluşturuldu: ${privateKeyFile}, ${certificateFile}",
    "context": "console.log(`✅ Başarılı! Dosyalar oluşturuldu: ${privateKeyFile}, ${certificateFile}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 670,
    "text": "✅ Ayarlar varsayılan olarak yapılandırma dosyasına kaydedildi.",
    "context": "console.log(`✅ Ayarlar varsayılan olarak yapılandırma dosyasına kaydedildi.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 672,
    "text": "güvenilmeyen kök",
    "context": "console.log(`⚠️  Bu kendinden imzalı bir sertifikadır ve doğrulama sırasında 'güvenilmeyen kök' uyarısı verecektir.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 672,
    "text": "⚠️ Bu kendinden imzalı bir sertifikadır ve doğrulama sırasında 'güvenilmeyen kök' uyarısı verecektir.",
    "context": "console.log(`⚠️  Bu kendinden imzalı bir sertifikadır ve doğrulama sırasında 'güvenilmeyen kök' uyarısı verecektir.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 675,
    "text": "Hata: ${e.message}",
    "context": "console.error(`Hata: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 684,
    "text": "stream-capture <inputFile>",
    "context": ".command('stream-capture <inputFile>')"
  },
  {
    "file": "vk-cli.js",
    "line": 685,
    "text": "Bir video akışını (dosyadan simüle edilmiş) yakalar, segmentler ve C2PA manifesti oluşturur.",
    "context": ".description('Bir video akışını (dosyadan simüle edilmiş) yakalar, segmentler ve C2PA manifesti oluşturur.')"
  },
  {
    "file": "vk-cli.js",
    "line": 686,
    "text": "Doğrulama testi için akış sırasında rastgele bir segmenti bozar.",
    "context": ".option('--tamper', 'Doğrulama testi için akış sırasında rastgele bir segmenti bozar.')"
  },
  {
    "file": "vk-cli.js",
    "line": 687,
    "text": "--seg-duration <seconds>",
    "context": ".option('--seg-duration <seconds>', 'Her bir video segmentinin süresi (saniye).', '2')"
  },
  {
    "file": "vk-cli.js",
    "line": 687,
    "text": "Her bir video segmentinin süresi (saniye).",
    "context": ".option('--seg-duration <seconds>', 'Her bir video segmentinin süresi (saniye).', '2')"
  },
  {
    "file": "vk-cli.js",
    "line": 694,
    "text": "[1/5] Geçici segment dizini oluşturuldu: ${tempDir}",
    "context": "console.log(`[1/5] Geçici segment dizini oluşturuldu: ${tempDir}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 696,
    "text": "[2/5] FFmpeg ile akış simülasyonu başlatılıyor...",
    "context": "console.log(`[2/5] FFmpeg ile akış simülasyonu başlatılıyor...`);"
  },
  {
    "file": "vk-cli.js",
    "line": 698,
    "text": "...Akış tamamlandı. Toplam ${segmentPaths.length} segment yakalandı.",
    "context": "console.log(`...Akış tamamlandı. Toplam ${segmentPaths.length} segment yakalandı.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 700,
    "text": "[3/5] Segment hashleri hesaplanıyor ve C2PA manifesti oluşturuluyor...",
    "context": "console.log('[3/5] Segment hashleri hesaplanıyor ve C2PA manifesti oluşturuluyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 703,
    "text": "...Manifest oluşturuldu: ${manifestPath}",
    "context": "console.log(`...Manifest oluşturuldu: ${manifestPath}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 705,
    "text": "[4/5] Oluşturulan manifest, diskteki segmentlere karşı doğrulanıyor...",
    "context": "console.log('[4/5] Oluşturulan manifest, diskteki segmentlere karşı doğrulanıyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 710,
    "text": "\\n--- DOĞRULAMA SONUCU ---",
    "context": "console.log('\\n--- DOĞRULAMA SONUCU ---');"
  },
  {
    "file": "vk-cli.js",
    "line": 713,
    "text": "✅ TEST BAŞARILI: Sabote edilen segment doğru bir şekilde tespit edildi!",
    "context": "console.log('✅ TEST BAŞARILI: Sabote edilen segment doğru bir şekilde tespit edildi!');"
  },
  {
    "file": "vk-cli.js",
    "line": 715,
    "text": "❌ TEST BAŞARISIZ: Sabote edilen segment tespit edilemedi!",
    "context": "console.log('❌ TEST BAŞARISIZ: Sabote edilen segment tespit edilemedi!');"
  },
  {
    "file": "vk-cli.js",
    "line": 721,
    "text": "\\nHata oluştu: ${e.message}",
    "context": "console.error(`\\nHata oluştu: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 725,
    "text": "[5/5] Geçici dosyalar temizleniyor...",
    "context": "console.log('[5/5] Geçici dosyalar temizleniyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 727,
    "text": "...Temizlik tamamlandı.",
    "context": "console.log('...Temizlik tamamlandı.');"
  },
  {
    "file": "vk-cli.js",
    "line": 745,
    "text": "-> Yeni segment yakalandı: ${filename}",
    "context": "console.log(` -> Yeni segment yakalandı: ${filename}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 749,
    "text": "🔥 SABOTAJ: ${filename} dosyası bozuluyor...",
    "context": "console.log(`   🔥 SABOTAJ: ${filename} dosyası bozuluyor...`);"
  },
  {
    "file": "vk-cli.js",
    "line": 750,
    "text": "TAMPERED_DATA",
    "context": "fs.appendFile(fullPath, 'TAMPERED_DATA');"
  },
  {
    "file": "vk-cli.js",
    "line": 757,
    "text": "FFmpeg işlemi ${code} koduyla sonlandı.",
    "context": "if (code !== 0) return reject(new Error(`FFmpeg işlemi ${code} koduyla sonlandı.`));"
  },
  {
    "file": "vk-cli.js",
    "line": 764,
    "text": "FFmpeg başlatılamadı: ${err.message}. FFmpeg'in sisteminizde kurulu ve PATH içinde olduğundan emin olun.",
    "context": "reject(new Error(`FFmpeg başlatılamadı: ${err.message}. FFmpeg'in sisteminizde kurulu ve PATH içinde olduğundan emin olun.`));"
  },
  {
    "file": "vk-cli.js",
    "line": 777,
    "text": "VideoKit Stream Capture v1.0",
    "context": "claimGenerator: 'VideoKit Stream Capture v1.0',"
  },
  {
    "file": "vk-cli.js",
    "line": 778,
    "text": "Live Stream from ${new Date().toISOString()}",
    "context": "title: `Live Stream from ${new Date().toISOString()}`,"
  },
  {
    "file": "vk-cli.js",
    "line": 789,
    "text": "CLI ayarlarını yönetir.",
    "context": "const configCmd = program.command('config').description('CLI ayarlarını yönetir.');"
  },
  {
    "file": "vk-cli.js",
    "line": 790,
    "text": "set <key> <value>",
    "context": "configCmd.command('set <key> <value>').description('Bir ayar anahtarını belirler.').action(async (key, value) => {"
  },
  {
    "file": "vk-cli.js",
    "line": 790,
    "text": "Bir ayar anahtarını belirler.",
    "context": "configCmd.command('set <key> <value>').description('Bir ayar anahtarını belirler.').action(async (key, value) => {"
  },
  {
    "file": "vk-cli.js",
    "line": 795,
    "text": "✅ Ayarlandı: ${key} = ${value}",
    "context": "console.log(`✅ Ayarlandı: ${key} = ${value}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 797,
    "text": "Hata: Ayar kaydedilemedi. ${error.message}",
    "context": "console.error(`Hata: Ayar kaydedilemedi. ${error.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 801,
    "text": "get <key>",
    "context": "configCmd.command('get <key>').description('Bir ayarın değerini gösterir.').action(async (key) => {"
  },
  {
    "file": "vk-cli.js",
    "line": 801,
    "text": "Bir ayarın değerini gösterir.",
    "context": "configCmd.command('get <key>').description('Bir ayarın değerini gösterir.').action(async (key) => {"
  },
  {
    "file": "vk-cli.js",
    "line": 806,
    "text": "'${key}' anahtarı bulunamadı.",
    "context": "else console.log(`'${key}' anahtarı bulunamadı.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 808,
    "text": "Hata: Ayar okunamadı. ${error.message}",
    "context": "console.error(`Hata: Ayar okunamadı. ${error.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 812,
    "text": "Tüm ayarları JSON formatında listeler.",
    "context": "configCmd.command('list').description('Tüm ayarları JSON formatında listeler.').action(async () => {"
  },
  {
    "file": "vk-cli.js",
    "line": 817,
    "text": "Hata: Ayarlar okunamadı. ${error.message}",
    "context": "console.error(`Hata: Ayarlar okunamadı. ${error.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 822,
    "text": "KLV verilerini MISB ST 0601 standardına göre dönüştürme araçları.",
    "context": "const klv = program.command('klv').description('KLV verilerini MISB ST 0601 standardına göre dönüştürme araçları.');"
  },
  {
    "file": "vk-cli.js",
    "line": 823,
    "text": "to-json <inputFile> <outputFile>",
    "context": "klv.command('to-json <inputFile> <outputFile>').description('Bir KLV dosyasını (.klv) JSON formatına dönüştürür.').action(async (inputFile, outputFile) => {"
  },
  {
    "file": "vk-cli.js",
    "line": 823,
    "text": "Bir KLV dosyasını (.klv) JSON formatına dönüştürür.",
    "context": "klv.command('to-json <inputFile> <outputFile>').description('Bir KLV dosyasını (.klv) JSON formatına dönüştürür.').action(async (inputFile, outputFile) => {"
  },
  {
    "file": "vk-cli.js",
    "line": 827,
    "text": "Dönüştürülüyor: ${inputFile} -> ${outputFile}",
    "context": "console.log(`Dönüştürülüyor: ${inputFile} -> ${outputFile}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 831,
    "text": "✅ Dönüşüm başarılı!",
    "context": "console.log('✅ Dönüşüm başarılı!');"
  },
  {
    "file": "vk-cli.js",
    "line": 834,
    "text": "Hata: ${e.message}",
    "context": "console.error(`Hata: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 838,
    "text": "klv to-json",
    "context": "await telemetryManager.trackEvent('klv to-json', duration, error);"
  },
  {
    "file": "vk-cli.js",
    "line": 841,
    "text": "from-json <inputFile> <outputFile>",
    "context": "klv.command('from-json <inputFile> <outputFile>').description('Bir JSON dosyasını KLV formatına (.klv) dönüştürür.').action(async (inputFile, outputFile) => {"
  },
  {
    "file": "vk-cli.js",
    "line": 841,
    "text": "Bir JSON dosyasını KLV formatına (.klv) dönüştürür.",
    "context": "klv.command('from-json <inputFile> <outputFile>').description('Bir JSON dosyasını KLV formatına (.klv) dönüştürür.').action(async (inputFile, outputFile) => {"
  },
  {
    "file": "vk-cli.js",
    "line": 845,
    "text": "Dönüştürülüyor: ${inputFile} -> ${outputFile}",
    "context": "console.log(`Dönüştürülüyor: ${inputFile} -> ${outputFile}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 847,
    "text": "JSON dosyasında '65' (MISB ST 0601 Version) anahtarı bulunmalıdır.",
    "context": "if (!jsonData['65']) throw new Error(\"JSON dosyasında '65' (MISB ST 0601 Version) anahtarı bulunmalıdır.\");"
  },
  {
    "file": "vk-cli.js",
    "line": 851,
    "text": "✅ Dönüşüm başarılı!",
    "context": "console.log('✅ Dönüşüm başarılı!');"
  },
  {
    "file": "vk-cli.js",
    "line": 854,
    "text": "Hata: ${e.message}",
    "context": "console.error(`Hata: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 858,
    "text": "klv from-json",
    "context": "await telemetryManager.trackEvent('klv from-json', duration, error);"
  },
  {
    "file": "vk-cli.js",
    "line": 863,
    "text": "PKI araçları: Anahtar, CSR ve sertifika zinciri yönetimi.",
    "context": "const pkiCmd = program.command('pki').description('PKI araçları: Anahtar, CSR ve sertifika zinciri yönetimi.');"
  },
  {
    "file": "vk-cli.js",
    "line": 867,
    "text": "Yeni bir özel anahtar (private key) ve Sertifika İmzalama İsteği (CSR) oluşturur.",
    "context": ".description('Yeni bir özel anahtar (private key) ve Sertifika İmzalama İsteği (CSR) oluşturur.')"
  },
  {
    "file": "vk-cli.js",
    "line": 868,
    "text": "--keyout <file>",
    "context": ".option('--keyout <file>', 'Özel anahtarın kaydedileceği dosya', 'private.key')"
  },
  {
    "file": "vk-cli.js",
    "line": 868,
    "text": "Özel anahtarın kaydedileceği dosya",
    "context": ".option('--keyout <file>', 'Özel anahtarın kaydedileceği dosya', 'private.key')"
  },
  {
    "file": "vk-cli.js",
    "line": 869,
    "text": "--csrout <file>",
    "context": ".option('--csrout <file>', 'CSR\\'ın kaydedileceği dosya', 'request.csr')"
  },
  {
    "file": "vk-cli.js",
    "line": 869,
    "text": "CSR\\'ın kaydedileceği dosya",
    "context": ".option('--csrout <file>', 'CSR\\'ın kaydedileceği dosya', 'request.csr')"
  },
  {
    "file": "vk-cli.js",
    "line": 870,
    "text": "--cn <name>",
    "context": ".requiredOption('--cn <name>', 'Common Name (örn: example.com)')"
  },
  {
    "file": "vk-cli.js",
    "line": 870,
    "text": "Common Name (örn: example.com)",
    "context": ".requiredOption('--cn <name>', 'Common Name (örn: example.com)')"
  },
  {
    "file": "vk-cli.js",
    "line": 871,
    "text": "--o <name>",
    "context": ".option('--o <name>', 'Organization (örn: VideoKit Inc.)', 'VideoKit Inc.')"
  },
  {
    "file": "vk-cli.js",
    "line": 871,
    "text": "Organization (örn: VideoKit Inc.)",
    "context": ".option('--o <name>', 'Organization (örn: VideoKit Inc.)', 'VideoKit Inc.')"
  },
  {
    "file": "vk-cli.js",
    "line": 871,
    "text": "VideoKit Inc.",
    "context": ".option('--o <name>', 'Organization (örn: VideoKit Inc.)', 'VideoKit Inc.')"
  },
  {
    "file": "vk-cli.js",
    "line": 872,
    "text": "--c <country>",
    "context": ".option('--c <country>', 'Country (örn: TR)', 'TR')"
  },
  {
    "file": "vk-cli.js",
    "line": 872,
    "text": "Country (örn: TR)",
    "context": ".option('--c <country>', 'Country (örn: TR)', 'TR')"
  },
  {
    "file": "vk-cli.js",
    "line": 872,
    "text": "TR",
    "context": ".option('--c <country>', 'Country (örn: TR)', 'TR')"
  },
  {
    "file": "vk-cli.js",
    "line": 873,
    "text": "--st <state>",
    "context": ".option('--st <state>', 'State/Province (örn: Istanbul)', 'Istanbul')"
  },
  {
    "file": "vk-cli.js",
    "line": 873,
    "text": "State/Province (örn: Istanbul)",
    "context": ".option('--st <state>', 'State/Province (örn: Istanbul)', 'Istanbul')"
  },
  {
    "file": "vk-cli.js",
    "line": 873,
    "text": "Istanbul",
    "context": ".option('--st <state>', 'State/Province (örn: Istanbul)', 'Istanbul')"
  },
  {
    "file": "vk-cli.js",
    "line": 874,
    "text": "--l <locality>",
    "context": ".option('--l <locality>', 'Locality (örn: Istanbul)', 'Istanbul')"
  },
  {
    "file": "vk-cli.js",
    "line": 874,
    "text": "Locality (örn: Istanbul)",
    "context": ".option('--l <locality>', 'Locality (örn: Istanbul)', 'Istanbul')"
  },
  {
    "file": "vk-cli.js",
    "line": 874,
    "text": "Istanbul",
    "context": ".option('--l <locality>', 'Locality (örn: Istanbul)', 'Istanbul')"
  },
  {
    "file": "vk-cli.js",
    "line": 879,
    "text": "2048-bit RSA anahtar çifti oluşturuluyor...",
    "context": "console.log('2048-bit RSA anahtar çifti oluşturuluyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 882,
    "text": "Sertifika İmzalama İsteği (CSR) oluşturuluyor...",
    "context": "console.log('Sertifika İmzalama İsteği (CSR) oluşturuluyor...');"
  },
  {
    "file": "vk-cli.js",
    "line": 898,
    "text": "✅ Özel anahtar kaydedildi: ${options.keyout}",
    "context": "console.log(`✅ Özel anahtar kaydedildi: ${options.keyout}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 901,
    "text": "✅ CSR kaydedildi: ${options.csrout}",
    "context": "console.log(`✅ CSR kaydedildi: ${options.csrout}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 904,
    "text": "❌ Hata: ${e.message}",
    "context": "console.error(`❌ Hata: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 908,
    "text": "pki new-key",
    "context": "await telemetryManager.trackEvent('pki new-key', duration, error);"
  },
  {
    "file": "vk-cli.js",
    "line": 913,
    "text": "install-chain <signedCert> [intermediateCerts...]",
    "context": ".command('install-chain <signedCert> [intermediateCerts...]')"
  },
  {
    "file": "vk-cli.js",
    "line": 914,
    "text": "İmzalı sertifika ve aracı sertifikaları birleştirerek tam bir zincir dosyası (PEM) oluşturur.",
    "context": ".description('İmzalı sertifika ve aracı sertifikaları birleştirerek tam bir zincir dosyası (PEM) oluşturur.')"
  },
  {
    "file": "vk-cli.js",
    "line": 915,
    "text": "-o, --output <file>",
    "context": ".requiredOption('-o, --output <file>', 'Oluşturulacak zincir dosyasının adı (örn: cert-chain.pem)')"
  },
  {
    "file": "vk-cli.js",
    "line": 915,
    "text": "Oluşturulacak zincir dosyasının adı (örn: cert-chain.pem)",
    "context": ".requiredOption('-o, --output <file>', 'Oluşturulacak zincir dosyasının adı (örn: cert-chain.pem)')"
  },
  {
    "file": "vk-cli.js",
    "line": 920,
    "text": "Zincir oluşturuluyor -> ${options.output}",
    "context": "console.log(`Zincir oluşturuluyor -> ${options.output}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 925,
    "text": "-> Okunuyor: ${certPath}",
    "context": "console.log(`  -> Okunuyor: ${certPath}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 933,
    "text": "✅ Başarılı! Sertifika zinciri şuraya kaydedildi: ${options.output}",
    "context": "console.log(`✅ Başarılı! Sertifika zinciri şuraya kaydedildi: ${options.output}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 934,
    "text": "ℹ️ Doğrulama için: openssl verify -CAfile <root-ca.pem>",
    "context": "console.log(\"ℹ️ Doğrulama için: openssl verify -CAfile <root-ca.pem> \" + options.output);"
  },
  {
    "file": "vk-cli.js",
    "line": 937,
    "text": "❌ Hata: ${e.message}",
    "context": "console.error(`❌ Hata: ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 941,
    "text": "pki install-chain",
    "context": "await telemetryManager.trackEvent('pki install-chain', duration, error);"
  },
  {
    "file": "vk-cli.js",
    "line": 946,
    "text": "Güvenilen kök sertifikaları (Trust Store) yönetir.",
    "context": "const trustCmd = program.command('trust').description('Güvenilen kök sertifikaları (Trust Store) yönetir.');"
  },
  {
    "file": "vk-cli.js",
    "line": 949,
    "text": "add <certPath>",
    "context": ".command('add <certPath>')"
  },
  {
    "file": "vk-cli.js",
    "line": 950,
    "text": "Doğrulama için güvenilecek yeni bir kök sertifika ekler.",
    "context": ".description('Doğrulama için güvenilecek yeni bir kök sertifika ekler.')"
  },
  {
    "file": "vk-cli.js",
    "line": 956,
    "text": "✅ Başarılı! '${fileName}' sertifikası güvenilenler listesine eklendi.",
    "context": "console.log(`✅ Başarılı! '${fileName}' sertifikası güvenilenler listesine eklendi.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 959,
    "text": "ENOENT",
    "context": "if (e.code === 'ENOENT') {"
  },
  {
    "file": "vk-cli.js",
    "line": 960,
    "text": "❌ Hata: Belirtilen dosya bulunamadı: ${certPath}",
    "context": "console.error(`❌ Hata: Belirtilen dosya bulunamadı: ${certPath}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 962,
    "text": "❌ Hata: Sertifika eklenemedi. ${e.message}",
    "context": "console.error(`❌ Hata: Sertifika eklenemedi. ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 967,
    "text": "trust add",
    "context": "await telemetryManager.trackEvent('trust add', duration, error);"
  },
  {
    "file": "vk-cli.js",
    "line": 973,
    "text": "Güvenilenler listesindeki tüm sertifikaları gösterir.",
    "context": ".description('Güvenilenler listesindeki tüm sertifikaları gösterir.')"
  },
  {
    "file": "vk-cli.js",
    "line": 980,
    "text": "ℹ️ Güvenilenler listesi (Trust Store) boş.",
    "context": "console.log('ℹ️  Güvenilenler listesi (Trust Store) boş.');"
  },
  {
    "file": "vk-cli.js",
    "line": 983,
    "text": "--- Güvenilen Kök Sertifikalar ---",
    "context": "console.log('--- Güvenilen Kök Sertifikalar ---');"
  },
  {
    "file": "vk-cli.js",
    "line": 985,
    "text": "- Dosya: ${c.filename}",
    "context": "console.log(`- Dosya: ${c.filename}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 986,
    "text": "Konu (Subject): CN=${c.subject}",
    "context": "console.log(`  Konu (Subject): CN=${c.subject}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 987,
    "text": "Sağlayıcı (Issuer): CN=${c.issuer}",
    "context": "console.log(`  Sağlayıcı (Issuer): CN=${c.issuer}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 988,
    "text": "Geçerlilik Sonu: ${c.expiry}",
    "context": "console.log(`  Geçerlilik Sonu: ${c.expiry}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 993,
    "text": "❌ Hata: Sertifikalar listelenemedi. ${e.message}",
    "context": "console.error(`❌ Hata: Sertifikalar listelenemedi. ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 997,
    "text": "trust list",
    "context": "await telemetryManager.trackEvent('trust list', duration, error);"
  },
  {
    "file": "vk-cli.js",
    "line": 1002,
    "text": "remove <filename>",
    "context": ".command('remove <filename>')"
  },
  {
    "file": "vk-cli.js",
    "line": 1003,
    "text": "Güvenilenler listesinden bir sertifikayı kaldırır.",
    "context": ".description('Güvenilenler listesinden bir sertifikayı kaldırır.')"
  },
  {
    "file": "vk-cli.js",
    "line": 1010,
    "text": "✅ Başarılı! '${filename}' sertifikası güvenilenler listesinden kaldırıldı.",
    "context": "console.log(`✅ Başarılı! '${filename}' sertifikası güvenilenler listesinden kaldırıldı.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 1012,
    "text": "⚠️ Uyarı: '${filename}' adında bir sertifika bulunamadı.",
    "context": "console.log(`⚠️  Uyarı: '${filename}' adında bir sertifika bulunamadı.`);"
  },
  {
    "file": "vk-cli.js",
    "line": 1016,
    "text": "❌ Hata: Sertifika kaldırılamadı. ${e.message}",
    "context": "console.error(`❌ Hata: Sertifika kaldırılamadı. ${e.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 1020,
    "text": "trust remove",
    "context": "await telemetryManager.trackEvent('trust remove', duration, error);"
  },
  {
    "file": "vk-cli.js",
    "line": 1025,
    "text": "Anonim kullanım verileri paylaşımını yönetir.",
    "context": "const telemCmd = program.command('telemetry').description('Anonim kullanım verileri paylaşımını yönetir.');"
  },
  {
    "file": "vk-cli.js",
    "line": 1029,
    "text": "VideoKit\\'i geliştirmemize yardımcı olmak için anonim kullanım verilerini paylaşmayı etkinleştirir.",
    "context": ".description('VideoKit\\'i geliştirmemize yardımcı olmak için anonim kullanım verilerini paylaşmayı etkinleştirir.')"
  },
  {
    "file": "vk-cli.js",
    "line": 1035,
    "text": "✅ Anonim telemetri etkinleştirildi. VideoKit\\'i geliştirmeye yardımcı olduğunuz için teşekkür ederiz!",
    "context": "console.log('✅ Anonim telemetri etkinleştirildi. VideoKit\\'i geliştirmeye yardımcı olduğunuz için teşekkür ederiz!');"
  },
  {
    "file": "vk-cli.js",
    "line": 1036,
    "text": "ℹ️ Bu ayarı istediğiniz zaman \"vk telemetry disable\" komutuyla devre dışı bırakabilirsiniz.",
    "context": "console.log('ℹ️  Bu ayarı istediğiniz zaman \"vk telemetry disable\" komutuyla devre dışı bırakabilirsiniz.');"
  },
  {
    "file": "vk-cli.js",
    "line": 1038,
    "text": "Hata: Ayar kaydedilemedi. ${error.message}",
    "context": "console.error(`Hata: Ayar kaydedilemedi. ${error.message}`);"
  },
  {
    "file": "vk-cli.js",
    "line": 1045,
    "text": "Anonim kullanım verileri paylaşımını devre dışı bırakır.",
    "context": ".description('Anonim kullanım verileri paylaşımını devre dışı bırakır.')"
  },
  {
    "file": "vk-cli.js",
    "line": 1051,
    "text": "ℹ️ Anonim telemetri devre dışı bırakıldı.",
    "context": "console.log('ℹ️ Anonim telemetri devre dışı bırakıldı.');"
  },
  {
    "file": "vk-cli.js",
    "line": 1053,
    "text": "Hata: Ayar kaydedilemedi. ${error.message}",
    "context": "console.error(`Hata: Ayar kaydedilemedi. ${error.message}`);"
  },
  {
    "file": "worker.js",
    "line": 28,
    "text": "Worker Redis bağlantı hatası",
    "context": "redisConnection.on('error', (err) => logger.error({ err }, 'Worker Redis bağlantı hatası'));"
  },
  {
    "file": "worker.js",
    "line": 43,
    "text": "Manifest bulunamadı veya dosya okunamadı.",
    "context": "message: 'Manifest bulunamadı veya dosya okunamadı.',"
  },
  {
    "file": "worker.js",
    "line": 56,
    "text": "Sertifika iptal edilmiş (CRL/OCSP kontrolü).",
    "context": "message: 'Sertifika iptal edilmiş (CRL/OCSP kontrolü).',"
  },
  {
    "file": "worker.js",
    "line": 71,
    "text": "Doğrulama tamamlandı, ancak tam bir imza zinciri bulunamadı.",
    "context": "let message = 'Doğrulama tamamlandı, ancak tam bir imza zinciri bulunamadı.';"
  },
  {
    "file": "worker.js",
    "line": 75,
    "text": "Doğrulama sırasında kritik hatalar bulundu.",
    "context": "message = 'Doğrulama sırasında kritik hatalar bulundu.';"
  },
  {
    "file": "worker.js",
    "line": 78,
    "text": "İmza geçerli, ancak sertifika güvenilir bir köke zincirlenmemiş.",
    "context": "message = 'İmza geçerli, ancak sertifika güvenilir bir köke zincirlenmemiş.';"
  },
  {
    "file": "worker.js",
    "line": 81,
    "text": "İmza ve sertifika zinciri başarıyla doğrulandı.",
    "context": "message = 'İmza ve sertifika zinciri başarıyla doğrulandı.';"
  },
  {
    "file": "worker.js",
    "line": 106,
    "text": "Job payload missing file data.",
    "context": "throw new Error('Job payload missing file data.');"
  },
  {
    "file": "worker.js",
    "line": 113,
    "text": "[VerifyWorker] Geçici dosya silindi.",
    "context": "jobLogger.debug({ filePath }, '[VerifyWorker] Geçici dosya silindi.');"
  },
  {
    "file": "worker.js",
    "line": 115,
    "text": "ENOENT",
    "context": "if (error.code !== 'ENOENT') {"
  },
  {
    "file": "worker.js",
    "line": 116,
    "text": "[VerifyWorker] Geçici dosya silinemedi.",
    "context": "jobLogger.warn({ err: error, filePath }, '[VerifyWorker] Geçici dosya silinemedi.');"
  },
  {
    "file": "worker.js",
    "line": 132,
    "text": "[VerifyWorker] İş alınıyor",
    "context": "jobLogger.info(`[VerifyWorker] İş alınıyor`);"
  },
  {
    "file": "worker.js",
    "line": 139,
    "text": "[VerifyWorker] İş tamamlandı",
    "context": "jobLogger.info({ verdict: report.verdict }, `[VerifyWorker] İş tamamlandı`);"
  },
  {
    "file": "worker.js",
    "line": 142,
    "text": "[VerifyWorker] Webhook işi tetikleniyor",
    "context": "jobLogger.info({ webhookUrl }, `[VerifyWorker] Webhook işi tetikleniyor`);"
  },
  {
    "file": "worker.js",
    "line": 159,
    "text": "[VerifyWorker] İş başarısız",
    "context": "jobLogger.error({ err: error }, `[VerifyWorker] İş başarısız`);"
  },
  {
    "file": "worker.js",
    "line": 186,
    "text": "[WebhookWorker] Gönderim işi alınıyor",
    "context": "jobLogger.info(`[WebhookWorker] Gönderim işi alınıyor`);"
  },
  {
    "file": "worker.js",
    "line": 197,
    "text": "POST",
    "context": "method: 'POST',"
  },
  {
    "file": "worker.js",
    "line": 199,
    "text": "Content-Type",
    "context": "'Content-Type': 'application/json',"
  },
  {
    "file": "worker.js",
    "line": 200,
    "text": "X-Videokit-Signature",
    "context": "'X-Videokit-Signature': `sha256=${signature}`,"
  },
  {
    "file": "worker.js",
    "line": 201,
    "text": "X-Correlation-Id",
    "context": "'X-Correlation-Id': correlationId, // Correlation ID'yi giden isteğe ekle"
  },
  {
    "file": "worker.js",
    "line": 207,
    "text": "Webhook hedefi ${response.status} koduyla yanıt verdi.",
    "context": "throw new Error(`Webhook hedefi ${response.status} koduyla yanıt verdi.`);"
  },
  {
    "file": "worker.js",
    "line": 210,
    "text": "[WebhookWorker] Başarıyla gönderildi",
    "context": "jobLogger.info({ status: response.status }, `[WebhookWorker] Başarıyla gönderildi`);"
  },
  {
    "file": "worker.js",
    "line": 214,
    "text": "[WebhookWorker] Gönderim başarısız",
    "context": "jobLogger.error({ err: error }, `[WebhookWorker] Gönderim başarısız`);"
  },
  {
    "file": "worker.js",
    "line": 231,
    "text": "✅ VideoKit Worker başlatıldı ve işleri bekliyor...",
    "context": "logger.info('✅ VideoKit Worker başlatıldı ve işleri bekliyor...');"
  },
  {
    "file": "worker.js",
    "line": 234,
    "text": "[VerifyWorker] İş başarıyla tamamlandı.",
    "context": "logger.info({ jobId: job.id }, `[VerifyWorker] İş başarıyla tamamlandı.`);"
  },
  {
    "file": "worker.js",
    "line": 238,
    "text": "[VerifyWorker] İş başarısız oldu.",
    "context": "logger.error({ jobId: job.id, err: err }, `[VerifyWorker] İş başarısız oldu.`);"
  },
  {
    "file": "worker.js",
    "line": 242,
    "text": "[WebhookWorker] İş başarıyla tamamlandı.",
    "context": "logger.info({ jobId: job.id, parentJobId: job.data.parentJobId }, `[WebhookWorker] İş başarıyla tamamlandı.`);"
  },
  {
    "file": "worker.js",
    "line": 246,
    "text": "[WebhookWorker] İş son denemeden sonra başarısız oldu.",
    "context": "logger.error({ jobId: job.id, parentJobId: job.data.parentJobId, err: err }, `[WebhookWorker] İş son denemeden sonra başarısız oldu.`);"
  },
  {
    "file": "__summary__",
    "line": 0,
    "text": "Total lines: 11600; Files scanned: 43",
    "context": "scan summary"
  }
]