# FILE: docker-compose.yml

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.server
    environment:
      # DEVELOPMENT: Lokalde HTTP üzerinden secure olmayan çerezlere izin vermek için
      # NODE_ENV'i 'development' olarak ayarlıyoruz.
      - NODE_ENV=${NODE_ENV:-development}
      - TRACING_ENABLED=${TRACING_ENABLED:-0}
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: /usr/src/app/entrypoint.sh
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: videokit_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-videokit}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-videokit}
      POSTGRES_DB: ${POSTGRES_DB:-videokit}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-videokit} -d ${POSTGRES_DB:-videokit}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: videokit_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: